{"version":3,"sources":["components/queries/ServiceKeyForm.js","planetside/QueryEnums.js","components/queries/CollectionSelector.js","components/queries/LimitSlider.js","components/queries/LanguageSelector.js","components/queries/FieldsEntryForm.js","components/shared/TextFormWithSave.js","components/queries/ConditionArgumentForm.js","components/queries/QueryResults.js","components/queries/QueryUrlContainer.js","components/BinarySelector.js","components/shared/BooleanSelector.js","components/shared/Collapsible.js","planetside/QueryJoin.js","planetside/QueryOperator.js","planetside/QueryCondition.js","components/queries/JoinForm.js","components/queries/JoinsContainer.js","components/shared/HideOnScroll.js","persistence/userPreferencesStore.js","components/shared/ThemeToggle.js","components/shared/GitHubLink.js","components/HideAppBar.js","planetside/QueryTree.js","planetside/QueryConfig.js","components/queries/TreeForm.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","ServiceKeyForm","serviceId","onServiceKeyChange","onDeleteStoredKey","classes","useState","serviceKey","setServiceKey","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","required","name","onChange","target","value","placeholder","helperText","Button","type","color","size","className","startIcon","onClick","QueryEnums","Languages","Operators","display","title","Collections","selectControl","minWidth","CollectionSelector","collection","collections","setCollections","handleChange","includes","useEffect","Autocomplete","options","autoSelect","event","newValue","renderInput","params","root","width","marks","getScaledValue","x","LimitSlider","sliderValue","Fragment","InputLabel","htmlFor","Slider","min","step","max","defaultValue","getAriaValueText","valueLabelFormat","valueLabelDisplay","LanguageSelector","language","languages","setLanguages","languageItems","map","lang","FormControl","Select","native","inputProps","padding","chipList","justifyContent","flexWrap","listStyle","chip","FieldsEntryForm","fields","onAddField","onRemoveField","inputField","setInputField","isValidInput","fieldItems","field","Chip","onDelete","handleRemoveField","Grid","item","xs","sm","md","InputProps","endAdornment","InputAdornment","position","IconButton","disabled","fieldGridItem","marginTop","marginBottom","marginLeft","operatorGrid","TextFormWithSave","initValue","ariaLabel","setValue","fontSize","ConditionArgumentForm","conditionData","onDataChange","operators","setOperators","operator","find","o","headerButtonContainer","textAlign","header1","fontWeight","paper","jsonView","maxHeight","overflow","lineHeight","textView","linearProgres","QueryResults","data","isLoading","Paper","LinearProgress","container","alignItems","navigator","clipboard","writeText","JSON","stringify","urlBox","backgroundColor","fontFamily","borderRadius","wordWrap","gridItem","marginRight","runButton","runButtonIcon","buttonWide","whiteSpace","syntax","questionMark","palette","secondary","main","ampersand","queryDelimiter","equals","equalsModifier","colon","parentheses","comma","QueryUrlContainer","queryUrl","onRunQuery","operatorCharacters","queryUrlPieces","splitAtQueryArray","unescape","split","preQueryString","push","length","splitAtMod","forEach","modItem","indexOf","uuidv1","splitAtAmpersand","amperItem","splitAtEquals","equalsItem","firstChar","charAt","substring","splitAtColon","colonItem","splitAtOpenParen","openParenItem","splitAtCloseParen","closeParenItem","splitAtUpperComman","upperCommaItem","splitAtComma","commaItem","anonymousUrl","url","regex","RegExp","replace","anonymizeQueryUrl","Link","to","href","rel","BinarySelector","optionA","optionB","style","toLowerCase","BooleanSelector","trueLabel","falseLabel","header2","header3","headerContainer","headerContainerCollapsed","paddingBottom","borderBottom","toggleContainer","toggleButton","toggle","transition","toggleCollapsed","transform","content","contentOpen","Collapsible","headerLevel","headerText","defaultExtended","children","Error","headerEl","React","createElement","extended","setExtended","QueryJoin","parentJoinId","uuidv4","parentId","injectAt","isOuterJoin","isList","onField","toField","filterType","filterFields","terms","joins","QueryOperator","operatorName","op","QueryCondition","defaultOperatorName","isValid","toString","borderStyle","borderColor","gridRow","textButton","footer","inlineSelectItem","JoinForm","joinData","depth","onInfoChange","onAddArrayItem","onRemoveArrayItem","onChangeArrayItemWithId","onRemoveArrayItemWithId","handleChangeInfo","propertyName","ancestry","handleChildChangeInfo","targetId","handleAddArrayItem","arrayName","handleChildAddArrayItem","handleChildRemoveArrayItem","handleChildChangeArrayItemWithId","itemId","handleRemoveArrayItemWithId","handleChildRemoveArrayItemWithId","handleRemoveJoinTerm","handleRemoveSubJoin","handleChangeTermInfo","handleChangeArrayItemWithId","rootStyle","borderWidth","showAddSubJoin","disableAddSubJoin","condition","filterSelect","handleRemoveArrayItem","join","JoinsContainer","joinsData","onAddJoin","onDeleteJoin","handleDeleteJoin","newJoin","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","userPreferenceStore","serviceIdKey","colorThemeKey","saveServiceId","localStorage","setItem","getServiceId","getItem","removeServiceId","removeItem","saveColorTheme","getColorTheme","removeColorTheme","ThemeToggle","onChangeTheme","twirl","setTwirl","isDarkTheme","iconClass","icon","onAnimationEnd","animationName","GitHubLink","useTheme","gitHubUrl","setIsDarkTheme","HideAppBar","props","AppBar","Toolbar","Typography","QueryTree","treeField","groupPrefix","startField","QueryConfig","defaultCollection","namespace","limit","conditions","resolves","tree","start","sortFields","sortDirection","TreeForm","CensusQuery","require","Query","dbgcensus","flexGrow","gridContainer","gridContainerItem","itemParagraph","splitQueryField","buttonWrapper","buttonProgress","top","left","App","SetGlobalNamespace","storeKey","setStoreKey","storedKey","SetGlobalServiceKey","loading","setLoading","query","setQuery","prefersDarkMode","useMediaQuery","storedColorTheme","colorTheme","setColorTheme","useDarkMode","useMemo","createTheme","primary","pink","orange","background","default","text","contrastThreshold","onAddSimpleArrayValue","arrayPropertyName","prevQuery","array","updatedFields","onRemoveSimpleArrayValue","index","splice","onConditionDataChange","propertyValue","updatedConditions","onDeleteCondition","filter","updateJoinAncestry","updateFunction","startJoinId","childAncestry","updateJoinAncestor","nextChildId","updatedJoins","j","setQueryUrl","addQueryJoins","censusQuery","joinsArray","censusJoin","serviceJoin","joinService","term","where","setLanguage","setLimit","setStart","resolve","sort","convertToCensusQuery","toUrl","treeViewString","getTreeViewUrlString","error","console","log","queryResult","setQueryResult","a","fetch","response","json","responseJson","ThemeProvider","CssBaseline","Container","maxWidth","key","newLimit","newCondition","lg","joinId","changeJoinPropertyValue","targetJoin","updatedArray","addArrayItemToJoin","i","removeArrayItemFromJoin","updateArrayItemWithIdInJoin","removeArrayItemWithIdFromJoin","updatedTree","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oyBAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QA4DXC,MAxDf,YAA+E,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,kBACjDC,EAAUV,IAEhB,EAAoCW,mBAASJ,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAYA,OACE,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAXtC,SAAsBC,GACpBA,EAAEC,iBACFV,EAAmBI,IASnB,UACE,cAACO,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,cACNjB,OAAO,QACPkB,QAAQ,WACRC,UAAQ,EACRC,KAAK,cACLC,SAAU,SAACR,GAAD,OAAOJ,EAAcI,EAAES,OAAOC,QACxCC,YAAY,UACZD,MAAOf,EACPiB,WAAW,0BAGb,cAACC,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,YACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IANb,kBAWA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,WACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IACXC,QAtCN,WACEvB,EAAc,WACdJ,KA6BE,wB,SCkHS4B,EAvKI,CACjBC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MACpCC,UAAW,CACT,CACEC,QAAS,IACThB,KAAM,SACNiB,MAAO,SACPd,MAAO,KAET,CACEa,QAAS,SACThB,KAAM,YACNiB,MAAO,aACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,aACNiB,MAAO,eACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,qBACNiB,MAAO,yBACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,gBACNiB,MAAO,kBACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,wBACNiB,MAAO,4BACPd,MAAO,MAET,CACEa,QAAS,cACThB,KAAM,aACNiB,MAAO,cACPd,MAAO,MAET,CACEa,QAAS,WACThB,KAAM,WACNiB,MAAO,WACPd,MAAO,OAGXe,YAAa,CACX,YACA,iBACA,yBACA,sBACA,uBACA,iCACA,4BACA,4BACA,mBACA,kBACA,6BACA,0BACA,yBACA,oCACA,qBACA,kBACA,UACA,eACA,cACA,eACA,aACA,WACA,YACA,iBACA,iBACA,0BACA,SACA,cACA,gBACA,aACA,kBACA,gBACA,gBACA,UACA,aACA,0BACA,YACA,cACA,0BACA,iBACA,QACA,YACA,oBACA,OACA,kBACA,gBACA,eACA,iBACA,YACA,UACA,UACA,aACA,mBACA,wBACA,+BACA,iBACA,uBACA,YACA,6BACA,iBACA,eACA,qBACA,uBACA,UACA,YACA,oBACA,qBACA,aACA,yBACA,SACA,cACA,cACA,gBACA,SACA,yBACA,6BACA,cACA,yBACA,QACA,iBACA,aACA,YACA,cACA,QACA,UACA,qBACA,kBACA,oBACA,SACA,mBACA,mBACA,uBACA,uBACA,OACA,cACA,mBACA,mBACA,QACA,SACA,gBACA,yBACA,cACA,2BACA,MACA,oBACA,cACA,yBACA,2BACA,mBACA,QACA,gBC7JE1C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyC,cAAe,CACbC,SAAU,SAIC,SAASC,EAAT,GAAuD,IAAzBC,EAAwB,EAAxBA,WAAYrB,EAAY,EAAZA,SACjDf,EAAUV,IAEhB,EAAsCW,mBAAS,IAA/C,mBAAOoC,EAAP,KAAoBC,EAApB,KAKA,SAASC,EAAatB,GAChBoB,EAAYG,SAASvB,IACvBF,EAASE,GAIb,OAVAwB,qBAAU,WACRH,EAAeX,EAAWK,eACzB,IASD,cAACU,EAAA,EAAD,CACEhC,GAAG,sBACHiC,QAASN,EACTpB,MAAOmB,EACPQ,YAAU,EACV/B,UAAQ,EACRE,SAAU,SAAC8B,EAAOC,GAAR,OAAqBP,EAAaO,IAC5CC,YAAa,SAACC,GAAD,OACX,cAACvC,EAAA,EAAD,2BACMuC,GADN,IAEErC,MAAM,aACNC,QAAQ,WACRlB,OAAO,YAGX8B,UAAWxB,EAAQiC,gB,aCrCnB3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,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","file":"static/js/main.bcaa994b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ServiceKeyForm({ serviceId, onServiceKeyChange, onDeleteStoredKey }) {\r\n  const classes = useStyles();\r\n\r\n  const [serviceKey, setServiceKey] = useState(serviceId);\r\n\r\n  function onSubmitForm(e) {\r\n    e.preventDefault();\r\n    onServiceKeyChange(serviceKey);\r\n  }\r\n\r\n  function onClickDelete() {\r\n    setServiceKey(\"example\");\r\n    onDeleteStoredKey();\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n      <TextField\r\n        id=\"service-key\"\r\n        label=\"Service Key\"\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        required\r\n        name=\"service-key\"\r\n        onChange={(e) => setServiceKey(e.target.value)}\r\n        placeholder=\"example\"\r\n        value={serviceKey}\r\n        helperText=\"Omit the leading 's:'\"\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n      >\r\n        Save\r\n      </Button>\r\n\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={onClickDelete}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ServiceKeyForm;\r\n","const QueryEnums = {\r\n  Languages: [\"De\", \"En\", \"Es\", \"Fr\", \"It\"],\r\n  Operators: [\r\n    {\r\n      display: \"=\",\r\n      name: \"equals\",\r\n      title: \"Equals\",\r\n      value: \"=\",\r\n    },\r\n    {\r\n      display: \"≠\",\r\n      name: \"notEquals\",\r\n      title: \"Not Equals\",\r\n      value: \"=!\",\r\n    },\r\n    {\r\n      display: \"<\",\r\n      name: \"isLessThan\",\r\n      title: \"Is Less Than\",\r\n      value: \"=<\",\r\n    },\r\n    {\r\n      display: \"≤\",\r\n      name: \"isLessThanOrEquals\",\r\n      title: \"Is Less Than Or Equals\",\r\n      value: \"=[\",\r\n    },\r\n    {\r\n      display: \">\",\r\n      name: \"isGreaterThan\",\r\n      title: \"Is Greater Than\",\r\n      value: \"=>\",\r\n    },\r\n    {\r\n      display: \"≥\",\r\n      name: \"isGreaterThanOrEquals\",\r\n      title: \"Is Greater Than Or Equals\",\r\n      value: \"=]\",\r\n    },\r\n    {\r\n      display: \"Starts With\",\r\n      name: \"startsWith\",\r\n      title: \"Starts With\",\r\n      value: \"=^\",\r\n    },\r\n    {\r\n      display: \"Contains\",\r\n      name: \"contains\",\r\n      title: \"Contains\",\r\n      value: \"=*\",\r\n    },\r\n  ],\r\n  Collections: [\r\n    \"character\",\r\n    \"character_name\",\r\n    \"characters_achievement\",\r\n    \"characters_currency\",\r\n    \"characters_directive\",\r\n    \"characters_directive_objective\",\r\n    \"characters_directive_tier\",\r\n    \"characters_directive_tree\",\r\n    \"characters_skill\",\r\n    \"characters_stat\",\r\n    \"characters_stat_by_faction\",\r\n    \"characters_stat_history\",\r\n    \"characters_weapon_stat\",\r\n    \"characters_weapon_stat_by_faction\",\r\n    \"world_stat_history\",\r\n    \"characters_item\",\r\n    \"ability\",\r\n    \"ability_type\",\r\n    \"achievement\",\r\n    \"armor_facing\",\r\n    \"armor_info\",\r\n    \"currency\",\r\n    \"directive\",\r\n    \"directive_tier\",\r\n    \"directive_tree\",\r\n    \"directive_tree_category\",\r\n    \"effect\",\r\n    \"effect_type\",\r\n    \"empire_scores\",\r\n    \"experience\",\r\n    \"experience_rank\",\r\n    \"facility_link\",\r\n    \"facility_type\",\r\n    \"faction\",\r\n    \"fire_group\",\r\n    \"fire_group_to_fire_mode\",\r\n    \"fire_mode\",\r\n    \"fire_mode_2\",\r\n    \"fire_mode_to_projectile\",\r\n    \"fire_mode_type\",\r\n    \"image\",\r\n    \"image_set\",\r\n    \"image_set_default\",\r\n    \"item\",\r\n    \"item_attachment\",\r\n    \"item_category\",\r\n    \"item_profile\",\r\n    \"item_to_weapon\",\r\n    \"item_type\",\r\n    \"loadout\",\r\n    \"map_hex\",\r\n    \"map_region\",\r\n    \"marketing_bundle\",\r\n    \"marketing_bundle_item\",\r\n    \"marketing_bundle_with_1_item\",\r\n    \"metagame_event\",\r\n    \"metagame_event_state\",\r\n    \"objective\",\r\n    \"objective_set_to_objective\",\r\n    \"objective_type\",\r\n    \"player_state\",\r\n    \"player_state_group\",\r\n    \"player_state_group_2\",\r\n    \"profile\",\r\n    \"profile_2\",\r\n    \"profile_armor_map\",\r\n    \"profile_resist_map\",\r\n    \"projectile\",\r\n    \"projectile_flight_type\",\r\n    \"region\",\r\n    \"resist_info\",\r\n    \"resist_type\",\r\n    \"resource_type\",\r\n    \"reward\",\r\n    \"reward_group_to_reward\",\r\n    \"reward_set_to_reward_group\",\r\n    \"reward_type\",\r\n    \"single_character_by_id\",\r\n    \"skill\",\r\n    \"skill_category\",\r\n    \"skill_line\",\r\n    \"skill_set\",\r\n    \"target_type\",\r\n    \"title\",\r\n    \"vehicle\",\r\n    \"vehicle_attachment\",\r\n    \"vehicle_faction\",\r\n    \"vehicle_skill_set\",\r\n    \"weapon\",\r\n    \"weapon_ammo_slot\",\r\n    \"weapon_datasheet\",\r\n    \"weapon_to_attachment\",\r\n    \"weapon_to_fire_group\",\r\n    \"zone\",\r\n    \"zone_effect\",\r\n    \"zone_effect_type\",\r\n    \"characters_world\",\r\n    \"world\",\r\n    \"outfit\",\r\n    \"outfit_member\",\r\n    \"outfit_member_extended\",\r\n    \"outfit_rank\",\r\n    \"characters_online_status\",\r\n    \"map\",\r\n    \"characters_friend\",\r\n    \"leaderboard\",\r\n    \"characters_leaderboard\",\r\n    \"characters_event_grouped\",\r\n    \"characters_event\",\r\n    \"event\",\r\n    \"world_event\",\r\n  ],\r\n};\r\n\r\nexport default QueryEnums;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 250,\r\n  },\r\n}));\r\n\r\nexport default function CollectionSelector({ collection, onChange }) {\r\n  const classes = useStyles();\r\n\r\n  const [collections, setCollections] = useState([]);\r\n  useEffect(() => {\r\n    setCollections(QueryEnums.Collections);\r\n  }, []);\r\n\r\n  function handleChange(value) {\r\n    if (collections.includes(value)) {\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"collection-selector\"\r\n      options={collections}\r\n      value={collection}\r\n      autoSelect\r\n      required\r\n      onChange={(event, newValue) => handleChange(newValue)}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Collection\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n      )}\r\n      className={classes.selectControl}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: \"None\",\r\n  },\r\n  {\r\n    value: 10,\r\n    label: 10,\r\n  },\r\n  {\r\n    value: 20,\r\n    label: 100,\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1k\",\r\n  },\r\n  {\r\n    value: 40,\r\n    label: \"10k\",\r\n  },\r\n];\r\n\r\nconst getScaledValue = (x) => {\r\n  if (x === 0) {\r\n    return x;\r\n  } else if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 20) {\r\n    return (x - 10) * 10;\r\n  } else if (x <= 30) {\r\n    return (x - 20) * 100;\r\n  } else {\r\n    return (x - 30) * 1000;\r\n  }\r\n};\r\n\r\nconst getUnscaledValue = (x) => {\r\n  if (x === 0) {\r\n    return x;\r\n  } else if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 100) {\r\n    return x / 10 + 10;\r\n  } else if (x <= 1000) {\r\n    return x / 100 + 20;\r\n  } else {\r\n    return x / 1000 + 30;\r\n  }\r\n};\r\n\r\nexport default function LimitSlider({ value, onChange, label }) {\r\n  const classes = useStyles();\r\n\r\n  const sliderValue = getUnscaledValue(value);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    onChange(getScaledValue(newValue));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <InputLabel id=\"limit-input-slider-label\" htmlFor=\"limit-slider\">\r\n        Limit\r\n      </InputLabel>\r\n      <Slider\r\n        className={classes.root}\r\n        id=\"limit-slider\"\r\n        value={typeof sliderValue === \"number\" ? sliderValue : 0}\r\n        min={0}\r\n        step={1}\r\n        max={40}\r\n        defaultValue={10}\r\n        getAriaValueText={getScaledValue}\r\n        valueLabelFormat={getScaledValue}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"limit-input-slider-label\"\r\n        marks={marks}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, Select } from \"@material-ui/core\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 120,\r\n    width: 120,\r\n  },\r\n}));\r\n\r\nexport default function LanguageSelector({ language, onChange }) {\r\n  const classes = useStyles();\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLanguages(QueryEnums.Languages);\r\n  }, []);\r\n\r\n  const languageItems = languages.map((lang) => (\r\n    <option key={lang} value={lang} aria-label={lang}>\r\n      {lang}\r\n    </option>\r\n  ));\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"language-select\">Language</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label=\"Language\"\r\n        className={classes.selectControl}\r\n        value={language}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"language\",\r\n          id: \"language-select\",\r\n        }}\r\n      >\r\n        <option aria-label=\"All\" value=\"All\">\r\n          All\r\n        </option>\r\n        {languageItems}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  chipList: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function FieldsEntryForm({\r\n  label,\r\n  fields,\r\n  onAddField,\r\n  onRemoveField,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [inputField, setInputField] = useState(\"\");\r\n\r\n  function onSubmitForm(event) {\r\n    event.preventDefault();\r\n\r\n    if (isValidInput()) {\r\n      setInputField(\"\");\r\n      onAddField(inputField);\r\n    }\r\n  }\r\n\r\n  function handleRemoveField(field) {\r\n    const value = field;\r\n    onRemoveField(value);\r\n  }\r\n\r\n  function isValidInput() {\r\n    if (inputField === \"\") {\r\n      return false;\r\n    } else {\r\n      return !fields.includes(inputField);\r\n    }\r\n  }\r\n\r\n  const fieldItems = fields.map((field) => {\r\n    return (\r\n      <li key={field}>\r\n        <Chip\r\n          label={field}\r\n          onDelete={() => handleRemoveField(field)}\r\n          className={classes.chip}\r\n          size=\"small\"\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n          <TextField\r\n            id=\"add-show-field-input\"\r\n            label={label}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"show-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setInputField(e.target.value)}\r\n            placeholder=\"example\"\r\n            value={inputField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={!isValidInput()}\r\n                    aria-label=\"Add to shown fields\"\r\n                    className={classes.button}\r\n                  >\r\n                    <AddCircleOutline />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <ul className={classes.chipList}>{fieldItems}</ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TextField, IconButton, InputAdornment } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function TextFormWithSave({\r\n  label,\r\n  initValue,\r\n  onChange,\r\n  placeholder = \"\",\r\n  variant = \"outlined\",\r\n  ariaLabel = \"\",\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState(initValue);\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmit}>\r\n      <TextField\r\n        id={`${label}-field`}\r\n        label={label}\r\n        margin=\"dense\"\r\n        variant={variant}\r\n        name={`${label}-field`}\r\n        size=\"small\"\r\n        onChange={(event) => setValue(event.target.value)}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={value === initValue}\r\n                aria-label={ariaLabel}\r\n                className={classes.button}\r\n              >\r\n                <SaveIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport {\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function ConditionArgumentForm({\r\n  conditionData,\r\n  onDataChange,\r\n  onDelete,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [operators, setOperators] = useState([]);\r\n  useEffect(() => {\r\n    setOperators(QueryEnums.Operators);\r\n  }, []);\r\n\r\n  function handleOperatorChange(event) {\r\n    const value = event.target.value;\r\n    const operator = operators.find((o) => o.name === value);\r\n    onDataChange(conditionData.id, \"operator\", operator);\r\n  }\r\n\r\n  function onSubmitField(newValue) {\r\n    onDataChange(conditionData.id, \"field\", newValue);\r\n  }\r\n\r\n  function onSubmitValue(newValue) {\r\n    onDataChange(conditionData.id, \"value\", newValue);\r\n  }\r\n\r\n  function handleDeleteCondition() {\r\n    onDelete(conditionData.id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={4}>\r\n        <TextFormWithSave\r\n          label=\"Field\"\r\n          initValue={conditionData.field}\r\n          onChange={onSubmitField}\r\n          ariaLabel=\"Update the condition's field\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={3} md={3} className={classes.operatorGrid}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel htmlFor=\"operator-select\">Operator</InputLabel>\r\n          <Select\r\n            native\r\n            margin=\"dense\"\r\n            label=\"Operator\"\r\n            value={conditionData.operator.name}\r\n            onChange={handleOperatorChange}\r\n            inputProps={{\r\n              name: \"operator\",\r\n              id: \"operator-select\",\r\n            }}\r\n          >\r\n            <option key=\"equals\" value=\"equals\" title=\"Equals\">\r\n              {\"=\"}\r\n            </option>\r\n            <option key=\"notEquals\" value=\"notEquals\" title=\"Not Equals\">\r\n              {\"≠\"}\r\n            </option>\r\n            <option key=\"isLessThan\" value=\"isLessThan\" title=\"Is Less Than\">\r\n              {\"<\"}\r\n            </option>\r\n            <option\r\n              key=\"isLessThanOrEquals\"\r\n              value=\"isLessThanOrEquals\"\r\n              title=\"Is Less Than Or Equals\"\r\n            >\r\n              {\"≤\"}\r\n            </option>\r\n            <option\r\n              key=\"isGreaterThan\"\r\n              value=\"isGreaterThan\"\r\n              title=\"Is Greater Than\"\r\n            >\r\n              {\">\"}\r\n            </option>\r\n            <option\r\n              key=\"isGreaterThanOrEquals\"\r\n              value=\"isGreaterThanOrEquals\"\r\n              title=\"Is Greater Than Or Equals\"\r\n            >\r\n              {\"≥\"}\r\n            </option>\r\n            <option key=\"startsWith\" value=\"startsWith\">\r\n              Starts With\r\n            </option>\r\n            <option key=\"contains\" value=\"contains\">\r\n              Contains\r\n            </option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={8} md={4}>\r\n        <TextFormWithSave\r\n          label=\"Value\"\r\n          initValue={conditionData.value}\r\n          onChange={onSubmitValue}\r\n          ariaLabel=\"Update the condition's value\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={1} md={1}>\r\n        <IconButton\r\n          aria-label=\"Delete this query condition\"\r\n          title=\"Delete this query condition\"\r\n          onClick={handleDeleteCondition}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Paper, Grid, Button } from \"@material-ui/core\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerButtonContainer: {\r\n    textAlign: \"right\",\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  jsonView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  linearProgres: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function QueryResults({ data, isLoading }) {\r\n  const classes = useStyles();\r\n\r\n  function copyDataToClipboard() {\r\n    if (!!data) {\r\n      navigator.clipboard.writeText(JSON.stringify(data, null, 2));\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <h1>Query Results</h1>\r\n        <LinearProgress className={classes.linearProgres} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <h1 className={classes.header1}>Query Results</h1>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.headerButtonContainer}>\r\n          {!!data && (\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={copyDataToClipboard}\r\n              value=\"Copy\"\r\n              title=\"Copy the query results to the clipboard\"\r\n              startIcon={<AssignmentIcon />}\r\n            >\r\n              Copy\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {!!data ? (\r\n        <div className={classes.textView}>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Button, Grid, Link } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  urlBox: {\r\n    marginTop: theme.spacing(1),\r\n    backgroundColor: \"#1F2330\",\r\n    color: \"#fff\",\r\n    fontFamily: \"monospace\",\r\n    padding: theme.spacing(1),\r\n    borderRadius: 4,\r\n    wordWrap: \"anywhere\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  gridItem: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  button: {},\r\n  runButton: {\r\n    width: 120,\r\n  },\r\n  runButtonIcon: {\r\n    marginLeft: -8,\r\n  },\r\n  buttonWide: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  syntax: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  questionMark: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  ampersand: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  queryDelimiter: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  equals: {\r\n    color: \"#E752A1\",\r\n  },\r\n  equalsModifier: {\r\n    color: \"#E752A1\",\r\n  },\r\n  colon: {\r\n    color: \"#E752A1\",\r\n  },\r\n  parentheses: {\r\n    color: \"#50DFFE\",\r\n  },\r\n  comma: {\r\n    color: \"#97EE91\",\r\n  },\r\n}));\r\n\r\nexport default function QueryUrlContainer({ queryUrl, isLoading, onRunQuery }) {\r\n  const classes = useStyles();\r\n\r\n  function copyToClipboardExact() {\r\n    navigator.clipboard.writeText(unescape(queryUrl));\r\n  }\r\n\r\n  function copyToClipboardAnonymous() {\r\n    const anonymousUrl = anonymizeQueryUrl(queryUrl);\r\n    navigator.clipboard.writeText(unescape(anonymousUrl));\r\n  }\r\n\r\n  function anonymizeQueryUrl(url) {\r\n    const regex = new RegExp(\"(/s:)[A-z0-9]+/\");\r\n    return queryUrl.replace(regex, \"/s:example/\");\r\n  }\r\n\r\n  const operatorCharacters = [\"[\", \"]\", \"*\", \"!\", \"<\", \">\", \"^\"];\r\n\r\n  let queryUrlPieces = [];\r\n  \r\n  const unescapedUrl = unescape(queryUrl);\r\n\r\n  let splitAtQueryArray = unescapedUrl.split(\"?\");\r\n\r\n  const preQueryString = splitAtQueryArray[0];\r\n\r\n  queryUrlPieces.push(<span key={preQueryString}>{preQueryString}</span>);\r\n  \r\n  if (splitAtQueryArray.length > 1) {\r\n    queryUrlPieces.push(<span key=\"?\" className={ classes.syntax + \" \" + classes.questionMark }>?</span>);\r\n\r\n    let queryString = splitAtQueryArray[1];\r\n\r\n    let splitAtMod = queryString.split(\"c:\");\r\n\r\n    splitAtMod.forEach((modItem) => {\r\n      if (splitAtMod.indexOf(modItem) !== 0 && !!modItem) {\r\n        queryUrlPieces.push(<span key={uuidv1()} className={ classes.queryDelimiter }>c:</span>);\r\n      }      \r\n      \r\n      let splitAtAmpersand = modItem.split(\"&\");\r\n\r\n      splitAtAmpersand.forEach((amperItem) => {\r\n        if (splitAtAmpersand.indexOf(amperItem) !== 0) {\r\n          queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.ampersand }>&</span>);\r\n        }\r\n\r\n        let splitAtEquals = amperItem.split(\"=\");\r\n\r\n        splitAtEquals.forEach((equalsItem) => {\r\n          if (splitAtEquals.indexOf(equalsItem) !== 0) {\r\n            queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.equals }>=</span>);\r\n          }\r\n\r\n          const firstChar = equalsItem.charAt(0);\r\n          if (operatorCharacters.includes(firstChar)) {\r\n            queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.equalsModifier }>{firstChar}</span>);\r\n            equalsItem = equalsItem.substring(1);\r\n          }\r\n          \r\n          let splitAtColon = equalsItem.split(\":\");\r\n          \r\n          splitAtColon.forEach((colonItem) => {\r\n            if (splitAtColon.indexOf(colonItem) !== 0) {\r\n              queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.colon }>:</span>)\r\n            }\r\n\r\n            let splitAtOpenParen = colonItem.split(\"(\");\r\n\r\n            splitAtOpenParen.forEach((openParenItem) => {\r\n              if (splitAtOpenParen.indexOf(openParenItem) !== 0) {\r\n                queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.parentheses }>(</span>)\r\n              }\r\n\r\n              let splitAtCloseParen = openParenItem.split(\")\");\r\n\r\n              splitAtCloseParen.forEach((closeParenItem) => {\r\n                if (splitAtCloseParen.indexOf(closeParenItem) !== 0) {\r\n                  queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.parentheses }>)</span>)\r\n                }\r\n\r\n                let splitAtUpperComman = closeParenItem.split(\"^\");\r\n\r\n                splitAtUpperComman.forEach((upperCommaItem) => {\r\n                  if (splitAtUpperComman.indexOf(upperCommaItem) !== 0) {\r\n                    queryUrlPieces.push(<span key={uuidv1()}  className={ classes.syntax + \" \" + classes.comma }>^</span>)\r\n                  }\r\n  \r\n                  let splitAtComma = upperCommaItem.split(\",\");\r\n\r\n                  splitAtComma.forEach((commaItem) => {\r\n                    if (splitAtComma.indexOf(commaItem) !== 0) {\r\n                      queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.comma }>,</span>)\r\n                    }\r\n    \r\n                    if (!!commaItem) {\r\n                      queryUrlPieces.push(<span key={uuidv1()}>{commaItem}</span>);\r\n                    }\r\n                  });\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h1 className={classes.header1}>Query URL</h1>\r\n      <div className={classes.urlBox}>\r\n        {queryUrlPieces}\r\n      </div>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.container}\r\n      >\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={onRunQuery}\r\n            value=\"Run\"\r\n            className={classes.runButton}\r\n            startIcon={\r\n              isLoading ? null : (\r\n                <PlayArrowIcon className={classes.runButtonIcon} />\r\n              )\r\n            }\r\n            title=\"Run the query\"\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Run\"}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardExact}\r\n            value=\"Copy\"\r\n            className={classes.button}\r\n            title=\"Copy the query url to the clipboard\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardAnonymous}\r\n            value=\"Copy Anonymous\"\r\n            className={classes.buttonWide}\r\n            title=\"Copy the query url to the clipboard and replace your service ID with 'example'\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy Anon.\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Link to={queryUrl} href={queryUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              value=\"Open Query\"\r\n              className={classes.buttonWide}\r\n              title=\"Open the query URL in a new tab\"\r\n              startIcon={<OpenInNewIcon />}\r\n            >\r\n              Open\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport default function BinarySelector({\r\n  value,\r\n  label,\r\n  optionA,\r\n  optionB,\r\n  onChange,\r\n  className = null,\r\n}) {\r\n  \r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    onChange(event.target.value);\r\n  }\r\n  \r\n  return (\r\n    <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\r\n      <InputLabel htmlFor=\"binary-select\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label={label}\r\n        className={className}\r\n        value={value}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"binary-select\",\r\n          id: \"binary-select\",\r\n        }}\r\n      >\r\n        <option aria-label={optionA} value={optionA.toLowerCase()}>\r\n          {optionA}\r\n        </option>\r\n        <option aria-label={optionB} value={optionB.toLowerCase()}>\r\n          {optionB}\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport default function BooleanSelector({\r\n  value,\r\n  label,\r\n  trueLabel = \"Yes\",\r\n  falseLabel = \"No\",\r\n  onChange,\r\n  className = null,\r\n}) {\r\n  return (\r\n    <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\r\n      <InputLabel htmlFor=\"boolean-select\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label={label}\r\n        className={className}\r\n        value={value}\r\n        onChange={(event) => onChange(event.target.value)}\r\n        inputProps={{\r\n          name: \"boolean-select\",\r\n          id: \"boolean-select\",\r\n        }}\r\n      >\r\n        <option aria-label={trueLabel} value={true}>\r\n          {trueLabel}\r\n        </option>\r\n        <option aria-label={falseLabel} value={false}>\r\n          {falseLabel}\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { Grid, IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginBottom: -4,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n  },\r\n  header3: {\r\n    margin: 0,\r\n    fontSize: \"1.1em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginBottom: 2,\r\n  },\r\n  headerContainer: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  headerContainerCollapsed: {\r\n    paddingBottom: theme.spacing(1),\r\n    borderBottom: \"1px solid #919cb950\",\r\n  },\r\n  toggleContainer: {\r\n    textAlign: \"right\",\r\n    borderBottom: \"1px solid #919cb950\",\r\n  },\r\n  toggleButton: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  toggle: {\r\n    transition: \"transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n  },\r\n  toggleCollapsed: {\r\n    transform: \"rotateZ(180deg)\",\r\n  },\r\n  content: {\r\n    width: \"100%\",\r\n    display: \"none\",\r\n  },\r\n  contentOpen: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Collapsible({\r\n  headerLevel,\r\n  headerText,\r\n  defaultExtended,\r\n  children,\r\n  id,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  if (typeof headerLevel !== \"number\" || headerLevel < 0 || headerLevel > 6) {\r\n    throw new Error(\"headerLevel must be an integer between 1 and 6\");\r\n  }\r\n\r\n  const headerEl = React.createElement(\r\n    `h${headerLevel}`,\r\n    { className: classes[`header${headerLevel}`] },\r\n    headerText\r\n  );\r\n\r\n  const [extended, setExtended] = useState(defaultExtended);\r\n\r\n  function handleToggle() {\r\n    setExtended(!extended);\r\n  }\r\n\r\n  function getToggleLabel() {\r\n    return extended ? \"Collapse Section\" : \"Expand Section\";\r\n  }\r\n\r\n  function getToggleClassName() {\r\n    return extended\r\n      ? classes.toggle\r\n      : `${classes.toggle} ${classes.toggleCollapsed}`;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.headerContainer}\r\n      >\r\n        <Grid item xs={10} className={classes.headerContainerCollapsed}>\r\n          {headerEl}\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.toggleContainer}>\r\n          <IconButton\r\n            aria-label={getToggleLabel}\r\n            onClick={handleToggle}\r\n            className={classes.toggleButton}\r\n          >\r\n            <ExpandMoreIcon className={`${getToggleClassName()}`} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div\r\n        id={`collapsible-content-${id}`}\r\n        className={extended ? classes.contentOpen : classes.content}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst QueryJoin = (parentJoinId = null) => {\r\n  return {\r\n    id: uuidv4(),\r\n    parentId: parentJoinId,\r\n    collection: \"\",\r\n    injectAt: \"\",\r\n    isOuterJoin: false,\r\n    isList: false,\r\n    onField: \"\",\r\n    toField: \"\",\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    terms: [],\r\n    joins: [],\r\n  };\r\n};\r\n\r\nexport default QueryJoin;\r\n","import QueryEnums from \"./QueryEnums\";\r\n\r\nconst QueryOperator = (operatorName = \"equals\") => {\r\n  const operator = QueryEnums.Operators.find((op) => op.name === operatorName);\r\n\r\n  if (!operator) {\r\n    return new Error(`Operator named '${operatorName} not found`);\r\n  }\r\n\r\n  const name = operatorName;\r\n  const display = operator.display;\r\n  const title = operator.title;\r\n  const value = operator.value;\r\n\r\n  return {\r\n    name,\r\n    display,\r\n    title,\r\n    value,\r\n  };\r\n};\r\n\r\nexport default QueryOperator;\r\n","import QueryOperator from \"./QueryOperator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst QueryCondition = (defaultOperatorName = \"equals\") => {\r\n  return {\r\n    id: uuidv4(),\r\n    field: \"\",\r\n    value: \"\",\r\n    operator: QueryOperator(defaultOperatorName),\r\n    isValid: (field, operator, value) => !!field && !!operator && !!value,\r\n    toString: (field, operator, value) => `${field}${operator?.value}${value}`,\r\n  };\r\n};\r\n\r\nexport default QueryCondition;\r\n","import React from \"react\";\r\nimport { Paper, Grid, Button } from \"@material-ui/core\";\r\nimport ForwardIcon from \"@material-ui/icons/Forward\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CollectionSelector from \"./CollectionSelector\";\r\nimport FieldsEntryForm from \"./FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./ConditionArgumentForm\";\r\nimport BinarySelector from \"../BinarySelector\";\r\nimport BooleanSelector from \"../shared/BooleanSelector\";\r\nimport Collapsible from \"../shared/Collapsible\";\r\nimport QueryJoin from \"../../planetside/QueryJoin\";\r\nimport QueryCondition from \"../../planetside/QueryCondition\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#919cb930\",\r\n    width: \"100%\",\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function JoinForm({\r\n  joinData,\r\n  depth,\r\n  onDelete,\r\n  onInfoChange,\r\n  onAddArrayItem,\r\n  onRemoveArrayItem,\r\n  onChangeArrayItemWithId,\r\n  onRemoveArrayItemWithId,\r\n}) {\r\n  const classes = useStyles();\r\n  const maxDepth = 4;\r\n\r\n  function handleDeleteJoin() {\r\n    onDelete(joinData.id);\r\n  }\r\n\r\n  function handleChangeInfo(propertyName, value) {\r\n    let ancestry = [joinData.id];\r\n    onInfoChange(joinData.id, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleChildChangeInfo(targetId, propertyName, value, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onInfoChange(targetId, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleAddArrayItem(arrayName, item) {\r\n    let ancestry = [joinData.id];\r\n    onAddArrayItem(joinData.id, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChildAddArrayItem(targetId, arrayName, item, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onAddArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleRemoveArrayItem(arrayName, item) {\r\n    let ancestry = [joinData.id];\r\n    onRemoveArrayItem(joinData.id, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChildRemoveArrayItem(targetId, arrayName, item, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onRemoveArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChangeArrayItemWithId(arrayName, itemId, propertyName, value) {\r\n    let ancestry = [joinData.id];\r\n    onChangeArrayItemWithId(\r\n      joinData.id,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleChildChangeArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onChangeArrayItemWithId(\r\n      targetId,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleRemoveArrayItemWithId(arrayName, itemId) {\r\n    let ancestry = [joinData.id];\r\n    onRemoveArrayItemWithId(joinData.id, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  function handleChildRemoveArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    ancestry\r\n  ) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  function handleAddFilterField(value) {\r\n    handleAddArrayItem(\"filterFields\", value);\r\n  }\r\n\r\n  function handleRemoveFilterField(value) {\r\n    handleRemoveArrayItem(\"filterFields\", value);\r\n  }\r\n\r\n  function handleAddJoinTerm() {\r\n    let newTerm = QueryCondition();\r\n    handleAddArrayItem(\"terms\", newTerm);\r\n  }\r\n\r\n  function handleRemoveJoinTerm(id) {\r\n    handleRemoveArrayItemWithId(\"terms\", id);\r\n  }\r\n\r\n  function handleAddSubJoin() {\r\n    let newJoin = QueryJoin();\r\n    handleAddArrayItem(\"joins\", newJoin);\r\n  }\r\n\r\n  function handleRemoveSubJoin(id) {\r\n    handleRemoveArrayItemWithId(\"joins\", id);\r\n  }\r\n\r\n  const handleChangeCollection = (value) =>\r\n    handleChangeInfo(\"collection\", value);\r\n\r\n  const handleChangeInjectAt = (value) => handleChangeInfo(\"injectAt\", value);\r\n\r\n  const handleChangeOnField = (value) => handleChangeInfo(\"onField\", value);\r\n\r\n  const handleChangeToField = (value) => handleChangeInfo(\"toField\", value);\r\n\r\n  const handleChangeJoinType = (value) =>\r\n    handleChangeInfo(\"isOuterJoin\", value);\r\n\r\n  const handleChangeIsList = (value) => handleChangeInfo(\"isList\", value);\r\n\r\n  const handleChangeFilterType = (value) =>\r\n    handleChangeInfo(\"filterType\", value);\r\n\r\n  const handleChangeTermInfo = (id, propertyName, value) =>\r\n    handleChangeArrayItemWithId(\"terms\", id, propertyName, value);\r\n\r\n  const rootStyle = {\r\n    borderWidth: depth === 0 ? 1 : \"2px 0 0 1px\",\r\n    marginLeft: depth === 0 ? 0 : 8,\r\n  };\r\n\r\n  const showAddSubJoin = depth < maxDepth;\r\n  const disableAddSubJoin = depth === maxDepth || !joinData.collection;\r\n\r\n  return (\r\n    <Paper className={classes.paper} style={{ ...rootStyle }}>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        <Grid item xs={12} sm={8}>\r\n          <CollectionSelector\r\n            collection={joinData.collection}\r\n            onChange={handleChangeCollection}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextFormWithSave\r\n            label=\"Inject At\"\r\n            initValue={joinData.injectAt}\r\n            onChange={handleChangeInjectAt}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item xs={5}>\r\n          <TextFormWithSave\r\n            label=\"On Field\"\r\n            initValue={joinData.onField}\r\n            onChange={handleChangeOnField}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ textAlign: \"center\" }}>\r\n          <ForwardIcon style={{ marginTop: 8 }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <TextFormWithSave\r\n            label=\"To Field\"\r\n            initValue={joinData.toField}\r\n            onChange={handleChangeToField}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Join Type\"\r\n            value={joinData.isOuterJoin}\r\n            trueLabel=\"Outer\"\r\n            falseLabel=\"Inner\"\r\n            onChange={handleChangeJoinType}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Is List\"\r\n            value={joinData.isList}\r\n            onChange={handleChangeIsList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Collapsible\r\n        id=\"join-conditions\"\r\n        headerLevel={3}\r\n        headerText=\"Join Conditions\"\r\n        defaultExtended={true}\r\n      >\r\n        {joinData.terms.length > 0 && (\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            className={classes.gridRow}\r\n          >\r\n            {joinData.terms.map((condition) => {\r\n              return (\r\n                <ConditionArgumentForm\r\n                  key={condition.id}\r\n                  conditionData={condition}\r\n                  onDataChange={handleChangeTermInfo}\r\n                  onDelete={handleRemoveJoinTerm}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<AddIcon fontSize=\"small\" />}\r\n            size=\"small\"\r\n            onClick={handleAddJoinTerm}\r\n            className={classes.textButton}\r\n          >\r\n            New Condition\r\n          </Button>\r\n        </Grid>\r\n      </Collapsible>\r\n\r\n      <Collapsible\r\n        id=\"field-filters\"\r\n        headerLevel={3}\r\n        headerText=\"Filter Displayed Fields\"\r\n        defaultExtended={true}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={0}\r\n          className={classes.gridRow}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} className={classes.inlineSelectItem}>\r\n            <BinarySelector\r\n              label=\"Filter Type\"\r\n              onChange={handleChangeFilterType}\r\n              optionA=\"Show\"\r\n              optionB=\"Hide\"\r\n              value={joinData.filterType}\r\n              className={classes.filterSelect}\r\n            />\r\n          </Grid>\r\n          <FieldsEntryForm\r\n            label=\"Add Field\"\r\n            fields={joinData.filterFields}\r\n            onAddField={handleAddFilterField}\r\n            onRemoveField={handleRemoveFilterField}\r\n          />\r\n        </Grid>\r\n      </Collapsible>\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        className={classes.footer}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n        >\r\n          {showAddSubJoin && (\r\n            <Grid item>\r\n              <Button\r\n                disabled={disableAddSubJoin}\r\n                color=\"primary\"\r\n                startIcon={<AddIcon fontSize=\"small\" />}\r\n                size=\"small\"\r\n                onClick={handleAddSubJoin}\r\n              >\r\n                Sub Join\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          style={{ textAlign: \"right\" }}\r\n        >\r\n          <Grid item md={6}>\r\n            <Button\r\n              color=\"default\"\r\n              startIcon={<DeleteIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              onClick={handleDeleteJoin}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {joinData.joins.length > 0 && (\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          className={classes.gridRow}\r\n        >\r\n          {joinData.joins.map((join) => {\r\n            return (\r\n              <JoinForm\r\n                key={join.id}\r\n                joinData={join}\r\n                depth={depth + 1}\r\n                onDelete={handleRemoveSubJoin}\r\n                onInfoChange={handleChildChangeInfo}\r\n                onAddArrayItem={handleChildAddArrayItem}\r\n                onRemoveArrayItem={handleChildRemoveArrayItem}\r\n                onChangeArrayItemWithId={handleChildChangeArrayItemWithId}\r\n                onRemoveArrayItemWithId={handleChildRemoveArrayItemWithId}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport QueryJoin from \"../../planetside/QueryJoin\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function JoinsContainer({\r\n  joinsData,\r\n  onAddJoin,\r\n  onDeleteJoin,\r\n  onInfoChange,\r\n  onAddArrayItem,\r\n  onRemoveArrayItem,\r\n  onChangeArrayItemWithId,\r\n  onRemoveArrayItemWithId,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function handleAddJoin() {\r\n    const newJoin = QueryJoin();\r\n    onAddJoin(newJoin);\r\n  }\r\n\r\n  function handleDeleteJoin(id) {\r\n    onDeleteJoin(id);\r\n  }\r\n\r\n  function handleChangeInfo(targetId, propertyName, value, ancestry) {\r\n    onInfoChange(targetId, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleAddArrayItem(targetId, arrayName, item, ancestry) {\r\n    onAddArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleRemoveArrayItem(targetId, arrayName, item, ancestry) {\r\n    onRemoveArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChangeArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    onChangeArrayItemWithId(\r\n      targetId,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry) {\r\n    onRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.gridRow}\r\n      >\r\n        {joinsData.map((join) => {\r\n          return (\r\n            <JoinForm\r\n              key={join.id}\r\n              joinData={join}\r\n              depth={0}\r\n              onDelete={handleDeleteJoin}\r\n              onInfoChange={handleChangeInfo}\r\n              onAddArrayItem={handleAddArrayItem}\r\n              onRemoveArrayItem={handleRemoveArrayItem}\r\n              onChangeArrayItemWithId={handleChangeArrayItemWithId}\r\n              onRemoveArrayItemWithId={handleRemoveArrayItemWithId}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Button\r\n          color=\"primary\"\r\n          startIcon={<AddIcon fontSize=\"small\" />}\r\n          size=\"small\"\r\n          onClick={handleAddJoin}\r\n          className={classes.textButton}\r\n        >\r\n          New Join\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\nfunction HideOnScroll({ children }) {\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default HideOnScroll;\r\n","const userPreferenceStore = (() => {\r\n  const serviceIdKey = \"DaybreakGamesKey\";\r\n  const saveServiceId = (id) => localStorage.setItem(serviceIdKey, id);\r\n  const getServiceId = () => localStorage.getItem(serviceIdKey);\r\n  const removeServiceId = () => localStorage.removeItem(serviceIdKey);\r\n\r\n  const colorThemeKey = \"ColorTheme\";\r\n  const saveColorTheme = (theme) => localStorage.setItem(colorThemeKey, theme);\r\n  const getColorTheme = () => localStorage.getItem(colorThemeKey);\r\n  const removeColorTheme = () => localStorage.removeItem(colorThemeKey);\r\n\r\n  return {\r\n    saveServiceId,\r\n    getServiceId,\r\n    removeServiceId,\r\n    saveColorTheme,\r\n    getColorTheme,\r\n    removeColorTheme,\r\n  };\r\n})();\r\n\r\nexport default userPreferenceStore;\r\n","import React, { useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport userPreferenceStore from \"../../persistence/userPreferencesStore\";\r\nimport \"../../styles/ThemeToggle.css\";\r\n\r\nexport default function ThemeToggle({ theme, onChangeTheme }) {\r\n  function toggleTheme() {\r\n    if (theme === \"dark\") {\r\n      setLightTheme();\r\n    } else {\r\n      setDarkTheme();\r\n    }\r\n  }\r\n\r\n  const [twirl, setTwirl] = useState(false);\r\n\r\n  function setLightTheme() {\r\n    userPreferenceStore.saveColorTheme(\"light\");\r\n    setTwirl(true);\r\n    onChangeTheme(\"light\");\r\n  }\r\n\r\n  function setDarkTheme() {\r\n    userPreferenceStore.saveColorTheme(\"dark\");\r\n    setTwirl(true);\r\n    onChangeTheme(\"dark\");\r\n  }\r\n\r\n  const isDarkTheme = theme === \"dark\";\r\n\r\n  let iconClass = isDarkTheme ? \"toggle-dark\" : \"toggle-light\";\r\n  if (twirl) {\r\n    iconClass = `${iconClass} toggle-twirl`;\r\n  }\r\n\r\n  const icon = isDarkTheme ? (\r\n    <Brightness7Icon\r\n      className={iconClass}\r\n      onAnimationEnd={(event) => {\r\n        if (event.animationName === \"twirl\") {\r\n          setTwirl(false);\r\n        }\r\n      }}\r\n    />\r\n  ) : (\r\n    <Brightness4Icon\r\n      className={iconClass}\r\n      onAnimationEnd={(event) => {\r\n        if (event.animationName === \"twirl\") {\r\n          setTwirl(false);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"Toggle light/dark theme\"\r\n      title=\"Toggle light/dark theme\"\r\n      onClick={toggleTheme}\r\n    >\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport \"../../styles/ThemeToggle.css\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function GitHubLink() {\r\n  const theme = useTheme();\r\n\r\n  const gitHubUrl = \"https://github.com/eating-coleslaw/ps2-visual-query\";\r\n\r\n  const [isDarkTheme, setIsDarkTheme] = useState(theme.palette.type === \"dark\");\r\n  useEffect(() => {\r\n    setIsDarkTheme(theme.palette.type === \"dark\");\r\n  }, [theme.palette.type]);\r\n\r\n  let color = isDarkTheme ? \"rgba(0, 0, 0, 0.87)\" : \"#fff\";\r\n\r\n  return (\r\n    <Link to={gitHubUrl} href={gitHubUrl} target=\"_blank\" rel=\"noreferrer\">\r\n      <IconButton\r\n        aria-label=\"Go to GitHub repository\"\r\n        title=\"Go to GitHub repository\"\r\n      >\r\n        <GitHubIcon style={{ color: color }} />\r\n      </IconButton>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HideOnScroll from \"./shared/HideOnScroll\";\r\nimport ThemeToggle from \"./shared/ThemeToggle\";\r\nimport GitHubLink from \"./shared/GitHubLink\";\r\n\r\nexport default function HideAppBar(props) {\r\n  return (\r\n    <HideOnScroll {...props}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar variant=\"dense\">\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h6\">PS2 Query Editor</Typography>\r\n            </Grid>\r\n            <Grid item container xs={6} justifyContent=\"flex-end\">\r\n              <GitHubLink />\r\n              <ThemeToggle {...props} />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </HideOnScroll>\r\n  );\r\n}\r\n","const QueryTree = () => {\r\n  return {\r\n    treeField: \"\",\r\n    groupPrefix: \"\",\r\n    startField: \"\",\r\n    isList: false,\r\n  };\r\n};\r\n\r\nexport default QueryTree;\r\n","import QueryTree from \"./QueryTree\";\r\n\r\nconst QueryConfig = (\r\n  serviceId = \"example\",\r\n  defaultCollection = \"character\"\r\n) => {\r\n  return {\r\n    serviceKey: serviceId,\r\n    namespace: \"ps2:v2\",\r\n    collection: defaultCollection,\r\n    language: null,\r\n    limit: null,\r\n    conditions: [],\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    resolves: [],\r\n    joins: [],\r\n    tree: QueryTree(),\r\n    start: null,\r\n    sortFields: [],\r\n    sortDirection: -1,\r\n  };\r\n};\r\n\r\nexport default QueryConfig;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\nimport BooleanSelector from \"../shared/BooleanSelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TreeForm({ tree, onChange }) {\r\n  const classes = useStyles();\r\n\r\n  function handleChangeTreeField(value) {\r\n    onChange(\"treeField\", value);\r\n  }\r\n\r\n  function handleChangeStartField(value) {\r\n    onChange(\"startField\", value);\r\n  }\r\n\r\n  function handleChangePrefix(value) {\r\n    onChange(\"groupPrefix\", value);\r\n  }\r\n\r\n  function handleChangeIsList(value) {\r\n    onChange(\"isList\", value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item sm={12} md={6}>\r\n          <TextFormWithSave\r\n            label=\"Tree Field\"\r\n            initValue={tree.treeField}\r\n            onChange={handleChangeTreeField}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item sm={12} md={6}>\r\n          <TextFormWithSave\r\n            label=\"Start Field\"\r\n            initValue={tree.startField}\r\n            onChange={handleChangeStartField}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Is List\"\r\n            initValue={tree.isList}\r\n            onChange={handleChangeIsList}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={8}>\r\n          <TextFormWithSave\r\n            label=\"Group Prefix\"\r\n            initValue={tree.groupPrefix}\r\n            onChange={handleChangePrefix}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"../styles/App.css\";\r\nimport { pink, amber, orange, blue, cyan } from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ServiceKeyForm from \"./queries/ServiceKeyForm\";\r\nimport CollectionSelector from \"./queries/CollectionSelector\";\r\nimport LimitSlider from \"./queries/LimitSlider\";\r\nimport LanguageSelector from \"./queries/LanguageSelector\";\r\nimport FieldsEntryForm from \"./queries/FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./queries/ConditionArgumentForm\";\r\nimport QueryResults from \"./queries/QueryResults\";\r\nimport QueryUrlContainer from \"./queries/QueryUrlContainer\";\r\nimport JoinsContainer from \"./queries/JoinsContainer\";\r\nimport QueryCondition from \"../planetside/QueryCondition\";\r\nimport Collapsible from \"./shared/Collapsible\";\r\nimport HideAppBar from \"./HideAppBar\";\r\nimport QueryConfig from \"../planetside/QueryConfig\";\r\nimport TreeForm from \"./queries/TreeForm\";\r\n\r\nimport userPreferenceStore from \"../persistence/userPreferencesStore\";\r\n\r\nconst CensusQuery = require(\"dbgcensus\").Query;\r\nconst dbgcensus = require(\"dbgcensus\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    \"margin-top\": theme.spacing(2),\r\n  },\r\n  gridContainer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridContainerItem: {\r\n    \"padding-bottom\": theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    // color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    // color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  itemParagraph: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  splitQueryField: {\r\n    width: 250,\r\n  },\r\n  filterSelect: {\r\n    width: 120,\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"black\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  const [namespace, setNamespace] = useState(\"ps2:v2\");\r\n  useEffect(() => {\r\n    dbgcensus.SetGlobalNamespace(\"ps2:v2\");\r\n  }, [namespace]);\r\n\r\n  const [storeKey, setStoreKey] = useState(userPreferenceStore.getServiceId());\r\n  useEffect(() => {\r\n    const storedKey = userPreferenceStore.getServiceId();\r\n    if (storedKey !== null) {\r\n      dbgcensus.SetGlobalServiceKey(storedKey);\r\n      setStoreKey(storedKey);\r\n    }\r\n  }, [setStoreKey]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [query, setQuery] = useState(\r\n    QueryConfig(storeKey ?? \"example\", \"character\", namespace)\r\n  );\r\n\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n  const storedColorTheme = userPreferenceStore.getColorTheme();\r\n\r\n  const [colorTheme, setColorTheme] = useState(\r\n    !!storedColorTheme ? storedColorTheme : prefersDarkMode ? \"dark\" : \"light\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    const newTheme = !!storedColorTheme\r\n      ? storedColorTheme\r\n      : prefersDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n    setColorTheme(newTheme);\r\n  }, [storedColorTheme, prefersDarkMode]);\r\n\r\n  const useDarkMode = colorTheme === \"dark\";\r\n\r\n  const theme = React.useMemo(() => {\r\n    const theme = createTheme({\r\n      palette: {\r\n        type: useDarkMode ? \"dark\" : \"light\",\r\n        primary: useDarkMode ? { main: \"#E7ADFB\" } : pink, //24E8D8 cyan : pink, //\"#E34F8C\" : pink, //amber : pink,\r\n        secondary: orange, //amber,\r\n        background: {\r\n          paper: useDarkMode ? \"#27273A\" : \"#fff\",\r\n          default: useDarkMode ? \"#0F1320\" : \"#fafafa\",\r\n        },\r\n        text: {},\r\n      },\r\n      contrastThreshold: 5,\r\n    });\r\n\r\n    return theme;\r\n  }, [useDarkMode]);\r\n\r\n  function handleColorThemeChange(theme) {\r\n    userPreferenceStore.saveColorTheme(theme);\r\n    setColorTheme(theme);\r\n  }\r\n\r\n  function onServiceKeyChange(key) {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ serviceKey: key } };\r\n    });\r\n\r\n    dbgcensus.SetGlobalServiceKey(key);\r\n    userPreferenceStore.saveServiceId(key);\r\n  }\r\n\r\n  function onDeleteStoredServiceKey() {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ serviceKey: \"example\" } };\r\n    });\r\n\r\n    dbgcensus.SetGlobalServiceKey(\"example\");\r\n    userPreferenceStore.removeServiceId();\r\n  }\r\n\r\n  function onCollectionChange(value) {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ collection: value } };\r\n    });\r\n  }\r\n\r\n  function onLimitChange(value) {\r\n    const newLimit = value === 0 ? null : value;\r\n\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ limit: newLimit } };\r\n    });\r\n  }\r\n\r\n  function onLanguageChange(value) {\r\n    const newValue = value === \"All\" ? \"\" : value.toLowerCase();\r\n\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ language: newValue } };\r\n    });\r\n  }\r\n\r\n  function onFilterTypeChange(event) {\r\n    const value = event.target.value.toLowerCase();\r\n\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ filterType: value } };\r\n    });\r\n  }\r\n\r\n  function onAddSimpleArrayValue(arrayPropertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      const array = [...prevQuery[arrayPropertyName]];\r\n\r\n      if (value !== \"\" && !array.includes(value)) {\r\n        let updatedFields = array;\r\n        updatedFields.push(value);\r\n\r\n        return { ...prevQuery, ...{ [arrayPropertyName]: updatedFields } };\r\n      } else {\r\n        return prevQuery;\r\n      }\r\n    });\r\n  }\r\n\r\n  function onRemoveSimpleArrayValue(arrayPropertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      const array = [...prevQuery[arrayPropertyName]];\r\n\r\n      const index = array.indexOf(value);\r\n\r\n      if (index !== -1) {\r\n        let updatedFields = array;\r\n        updatedFields.splice(index, 1);\r\n\r\n        return { ...prevQuery, ...{ [arrayPropertyName]: updatedFields } };\r\n      }\r\n    });\r\n  }\r\n\r\n  function onConditionDataChange(id, propertyName, propertyValue) {\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = prevQuery.conditions.map((condition) => {\r\n        if (condition.id === id) {\r\n          return { ...condition, ...{ [propertyName]: propertyValue } };\r\n        }\r\n\r\n        return condition;\r\n      });\r\n\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function onAddNewCondition() {\r\n    const newCondition = QueryCondition();\r\n\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = [...prevQuery.conditions, newCondition];\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function onDeleteCondition(id) {\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = prevQuery.conditions.filter((condition) => {\r\n        return condition.id !== id;\r\n      });\r\n\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function handleAddJoin(join) {\r\n    setQuery((prevQuery) => {\r\n      let updatedJoins = [...prevQuery.joins, join];\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleDeleteJoin(joinId) {\r\n    setQuery((prevQuery) => {\r\n      let updatedJoins = prevQuery.joins.filter((join) => join.id !== joinId);\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleChangeJoinInfo(targetId, propertyName, value, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        propertyName,\r\n        value,\r\n        ancestry,\r\n        (join) => changeJoinPropertyValue(join, propertyName, value)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleAddJoinArrayItem(targetId, arrayName, item, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        item,\r\n        ancestry,\r\n        (targetJoin) => addArrayItemToJoin(targetJoin, arrayName, item)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleRemoveJoinArrayItem(targetId, arrayName, item, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        item,\r\n        ancestry,\r\n        (targetJoin) => removeArrayItemFromJoin(targetJoin, arrayName, item)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleChangeJoinArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        propertyName,\r\n        value,\r\n        ancestry,\r\n        (targetJoin) =>\r\n          updateArrayItemWithIdInJoin(\r\n            targetJoin,\r\n            arrayName,\r\n            itemId,\r\n            propertyName,\r\n            value\r\n          )\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleRemoveJoinArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    ancestry\r\n  ) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        itemId,\r\n        ancestry,\r\n        (targetJoin) =>\r\n          removeArrayItemWithIdFromJoin(targetJoin, arrayName, itemId)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function updateJoinAncestry(\r\n    joins,\r\n    targetId,\r\n    propertyName,\r\n    value,\r\n    ancestry,\r\n    updateFunction\r\n  ) {\r\n    const startJoinId = ancestry[0];\r\n    const childAncestry = [...ancestry];\r\n    childAncestry.splice(0, 1);\r\n\r\n    const updatedJoins = joins.map((join) => {\r\n      if (join.id === startJoinId) {\r\n        const updatedJoin = updateJoinAncestor(\r\n          join,\r\n          targetId,\r\n          propertyName,\r\n          value,\r\n          childAncestry,\r\n          updateFunction\r\n        );\r\n        return updatedJoin;\r\n      }\r\n      return join;\r\n    });\r\n\r\n    return updatedJoins;\r\n  }\r\n\r\n  function updateJoinAncestor(\r\n    join,\r\n    targetId,\r\n    propertyName,\r\n    value,\r\n    ancestry,\r\n    updateFunction\r\n  ) {\r\n    // If this is the target join, update the property's value\r\n    if (join.id === targetId) {\r\n      return updateFunction(join);\r\n    }\r\n\r\n    // If this is not the target join, dig down into children\r\n    const nextChildId = ancestry[0];\r\n    const childAncestry = [...ancestry];\r\n    childAncestry.splice(0, 1);\r\n\r\n    const updatedJoins = join.joins.map((j) => {\r\n      if (j.id === nextChildId) {\r\n        const updatedJoin = updateJoinAncestor(\r\n          j,\r\n          targetId,\r\n          propertyName,\r\n          value,\r\n          childAncestry,\r\n          updateFunction\r\n        );\r\n        return updatedJoin;\r\n      }\r\n\r\n      return j;\r\n    });\r\n\r\n    join = { ...join, ...{ joins: updatedJoins } };\r\n    return join;\r\n  }\r\n\r\n  function changeJoinPropertyValue(join, propertyName, value) {\r\n    return { ...join, ...{ [propertyName]: value } };\r\n  }\r\n\r\n  function addArrayItemToJoin(join, arrayName, item) {\r\n    const updatedArray = [...join[arrayName], item];\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function removeArrayItemFromJoin(join, arrayName, item) {\r\n    const updatedArray = join[arrayName].filter((i) => i !== item);\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function updateArrayItemWithIdInJoin(\r\n    join,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value\r\n  ) {\r\n    const updatedArray = join[arrayName].map((item) => {\r\n      if (item.id === itemId) {\r\n        return { ...item, ...{ [propertyName]: value } };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function removeArrayItemWithIdFromJoin(join, arrayName, itemId) {\r\n    const updatedArray = join[arrayName].filter((item) => item.id !== itemId);\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function handleChangeQueryTreeProperty(propertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      let updatedTree = { ...prevQuery.tree, ...{ [propertyName]: value } };\r\n\r\n      return { ...prevQuery, ...{ tree: updatedTree } };\r\n    });\r\n  }\r\n\r\n  const [queryUrl, setQueryUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    function convertToCensusQuery() {\r\n      let censusQuery = new CensusQuery(\r\n        query.collection,\r\n        query.namespace,\r\n        query.serviceKey\r\n      );\r\n\r\n      if (!!query.language && query.language !== \"All\") {\r\n        censusQuery.setLanguage(query.language.toLowerCase());\r\n      }\r\n\r\n      if (query.limit !== null && query.limit !== 0) {\r\n        censusQuery.setLimit(query.limit);\r\n      }\r\n\r\n      if (query.start !== null) {\r\n        censusQuery.setStart(query.start);\r\n      }\r\n\r\n      if (query.filterFields.length > 0) {\r\n        censusQuery[`${query.filterType}Fields`](query.filterFields);\r\n      }\r\n\r\n      if (query.resolves.length > 0) {\r\n        censusQuery.resolve(query.resolves);\r\n      }\r\n\r\n      if (query.sortFields.length > 0) {\r\n        censusQuery.sort(query.sortFields);\r\n      }\r\n\r\n      if (query.conditions.length > 0) {\r\n        query.conditions.forEach((condition) => {\r\n          const field = condition.field;\r\n          const operator = condition.operator;\r\n          const value = condition.value;\r\n\r\n          if (condition.isValid(field, operator, value)) {\r\n            censusQuery.where(field)[operator.name](value);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (query.joins.length > 0) {\r\n        censusQuery = addQueryJoins(censusQuery, query.joins);\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    function addQueryJoins(censusQuery, joinsArray, censusJoin = null) {\r\n      if (joinsArray.length > 0) {\r\n        joinsArray.forEach((join) => {\r\n          if (!!join.collection) {\r\n            let serviceJoin =\r\n              censusJoin !== null\r\n                ? censusJoin.joinService(join.collection)\r\n                : censusQuery.joinService(join.collection);\r\n\r\n            serviceJoin.isList(join.isList);\r\n            serviceJoin.isOuterJoin(join.isOuterJoin);\r\n\r\n            if (!!join.injectAt) {\r\n              serviceJoin.injectAt(join.injectAt);\r\n            }\r\n\r\n            if (!!join.onField) {\r\n              serviceJoin.onField(join.onField);\r\n            }\r\n\r\n            if (!!join.toField) {\r\n              serviceJoin.toField(join.toField);\r\n            }\r\n\r\n            if (join.filterFields.length > 0) {\r\n              serviceJoin[`${join.filterType}Fields`](join.filterFields);\r\n            }\r\n\r\n            if (join.terms.length > 0) {\r\n              join.terms.forEach((term) => {\r\n                const field = term.field;\r\n                const operator = term.operator;\r\n                const value = term.value;\r\n\r\n                if (term.isValid(field, operator, value)) {\r\n                  serviceJoin.where(field)[operator.name](value);\r\n                }\r\n              });\r\n            }\r\n\r\n            if (join.joins.length > 0) {\r\n              addQueryJoins(censusQuery, join.joins, serviceJoin);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    // The dbgcensus package doesn't process trees correctly, so we do it manually\r\n    function getTreeViewUrlString() {\r\n      const treeField = query.tree.treeField || query.tree.startField;\r\n\r\n      if (!!treeField) {\r\n        let treeViewString = `&c:tree=field:${treeField}`;\r\n\r\n        treeViewString = `${treeViewString}^isList:${query.tree.isList}`;\r\n\r\n        if (!!query.tree.groupPrefix) {\r\n          treeViewString = `${treeViewString}^prefix:${query.tree.groupPrefix}`;\r\n        }\r\n\r\n        if (!!query.tree.startField) {\r\n          treeViewString = `${treeViewString}^start:${query.tree.startField}`;\r\n        }\r\n\r\n        return treeViewString;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const censusQuery = convertToCensusQuery();\r\n      let url = censusQuery.toUrl();\r\n      url = url.replace(\"http://\", \"https://\");\r\n\r\n      let treeViewString = getTreeViewUrlString();\r\n\r\n      if (!!treeViewString) {\r\n        url = url + treeViewString;\r\n      }\r\n\r\n      setQueryUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error getting query URL: \", error);\r\n    }\r\n  }, [query]);\r\n\r\n  const [queryResult, setQueryResult] = useState(\"\");\r\n  async function onSubmitQuery() {\r\n    if (!!queryUrl && !loading) {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(queryUrl);\r\n        const responseJson = await response.json();\r\n        setQueryResult(responseJson);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"Error getting data from query: \", error);\r\n        setQueryResult(`Error getting data from query: ${error}`);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <HideAppBar theme={colorTheme} onChangeTheme={handleColorThemeChange} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container alignItems=\"flex-start\">\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <Collapsible\r\n                  id=\"service-id\"\r\n                  headerLevel={1}\r\n                  headerText=\"Service ID\"\r\n                  defaultExtended={!storeKey || storeKey === \"example\"}\r\n                >\r\n                  <p className={classes.itemParagraph}>\r\n                    Sign up for a service ID{\" \"}\r\n                    <a\r\n                      href=\"https://census.daybreakgames.com/#service-id\"\r\n                      aria-label=\"Service ID sign up page\"\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      style={{ color: \"#40afee\" }}\r\n                    >\r\n                      here\r\n                    </a>\r\n                    . The 'example' service ID allows up to 10 requests per\r\n                    minute. Saving your service ID will store it to this\r\n                    browser.\r\n                  </p>\r\n                  <ServiceKeyForm\r\n                    serviceId={query.serviceKey}\r\n                    onServiceKeyChange={onServiceKeyChange}\r\n                    onDeleteStoredKey={onDeleteStoredServiceKey}\r\n                  />\r\n                </Collapsible>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <h1 className={classes.header1}>Query Creator</h1>\r\n                <p className={classes.itemParagraph}>\r\n                  Refer to the{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#general\"\r\n                    aria-label=\"Official census API documentation page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    official documentation\r\n                  </a>{\" \"}\r\n                  or{\" \"}\r\n                  <a\r\n                    href=\"https://github.com/leonhard-s/auraxium/wiki/Census-API-Primer\"\r\n                    aria-label=\"Leonhard-s's Census API Primer wiki\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    leonhard-s's API primer\r\n                  </a>{\" \"}\r\n                  for more information on using the API.\r\n                </p>\r\n\r\n                <Collapsible\r\n                  id=\"collection\"\r\n                  headerLevel={2}\r\n                  headerText=\"Collection\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      sm={12}\r\n                      md={7}\r\n                      className={classes.splitQueryField}\r\n                    >\r\n                      <CollectionSelector\r\n                        collection={query.collection}\r\n                        onChange={onCollectionChange}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      item\r\n                      sm={12}\r\n                      md={4}\r\n                      className={classes.splitQueryField}\r\n                      style={{ marginTop: 4 }}\r\n                    >\r\n                      <LanguageSelector\r\n                        value={query.language}\r\n                        onChange={onLanguageChange}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} style={{ marginLeft: 16, marginTop: 8 }}>\r\n                      <LimitSlider\r\n                        value={query.limit}\r\n                        onChange={onLimitChange}\r\n                        label=\"Limit\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"search-conditions\"\r\n                  headerLevel={2}\r\n                  headerText=\"Search Conditions\"\r\n                  defaultExtended={true}\r\n                >\r\n                  {query.conditions.length > 0 && (\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      xs={12}\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      className={classes.gridRow}\r\n                    >\r\n                      {query.conditions.map((condition) => {\r\n                        return (\r\n                          <ConditionArgumentForm\r\n                            key={condition.id}\r\n                            conditionData={condition}\r\n                            onDataChange={onConditionDataChange}\r\n                            onDelete={onDeleteCondition}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      startIcon={<AddIcon fontSize=\"small\" />}\r\n                      size=\"small\"\r\n                      onClick={onAddNewCondition}\r\n                      className={classes.textButton}\r\n                    >\r\n                      New Condition\r\n                    </Button>\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"field-filters\"\r\n                  headerLevel={2}\r\n                  headerText=\"Filter Displayed Fields\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                      lg={3}\r\n                      className={classes.inlineSelectItem}\r\n                    >\r\n                      <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"filter-type-select\">\r\n                          Filter Type\r\n                        </InputLabel>\r\n                        <Select\r\n                          native\r\n                          margin=\"dense\"\r\n                          label=\"Filter Type\"\r\n                          className={classes.filterSelect}\r\n                          value={query.filterType}\r\n                          onChange={onFilterTypeChange}\r\n                          inputProps={{\r\n                            name: \"filter-type\",\r\n                            id: \"filter-type-select\",\r\n                          }}\r\n                        >\r\n                          <option aria-label=\"Show\" value=\"show\">\r\n                            Show\r\n                          </option>\r\n                          <option aira-label=\"Hide\" value=\"hide\">\r\n                            Hide\r\n                          </option>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n\r\n                    <FieldsEntryForm\r\n                      label=\"Add Field\"\r\n                      fields={query.filterFields}\r\n                      onAddField={(value) =>\r\n                        onAddSimpleArrayValue(\"filterFields\", value)\r\n                      }\r\n                      onRemoveField={(value) =>\r\n                        onRemoveSimpleArrayValue(\"filterFields\", value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"resolves-container\"\r\n                  headerLevel={2}\r\n                  headerText=\"Resolves\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    spacing={0}\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <FieldsEntryForm\r\n                      label=\"Resolves\"\r\n                      fields={query.resolves}\r\n                      onAddField={(value) =>\r\n                        onAddSimpleArrayValue(\"resolves\", value)\r\n                      }\r\n                      onRemoveField={(value) =>\r\n                        onRemoveSimpleArrayValue(\"resolves\", value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"joins-container\"\r\n                  headerLevel={2}\r\n                  headerText=\"Joins\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <JoinsContainer\r\n                    joinsData={query.joins}\r\n                    onAddJoin={handleAddJoin}\r\n                    onDeleteJoin={handleDeleteJoin}\r\n                    onInfoChange={handleChangeJoinInfo}\r\n                    onAddArrayItem={handleAddJoinArrayItem}\r\n                    onRemoveArrayItem={handleRemoveJoinArrayItem}\r\n                    onChangeArrayItemWithId={handleChangeJoinArrayItemWithId}\r\n                    onRemoveArrayItemWithId={handleRemoveJoinArrayItemWithId}\r\n                  />\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"tree-form\"\r\n                  headerLevel={2}\r\n                  headerText=\"Tree View\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <TreeForm\r\n                    tree={query.tree}\r\n                    onChange={handleChangeQueryTreeProperty}\r\n                  />\r\n                </Collapsible>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryUrlContainer\r\n                queryUrl={queryUrl}\r\n                isLoading={loading}\r\n                onRunQuery={onSubmitQuery}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryResults data={queryResult} isLoading={loading} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}