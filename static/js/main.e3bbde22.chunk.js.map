{"version":3,"sources":["components/queries/ServiceKeyForm.js","planetside/QueryEnums.js","components/queries/CollectionSelector.js","components/queries/LimitSlider.js","components/queries/LanguageSelector.js","components/queries/FieldsEntryForm.js","components/queries/ConditionArgumentForm.js","components/queries/QueryResults.js","components/queries/QueryUrlContainer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","ServiceKeyForm","serviceId","onServiceKeyChange","onDeleteStoredKey","classes","useState","serviceKey","setServiceKey","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","required","name","onChange","target","value","placeholder","helperText","Button","type","color","size","className","startIcon","onClick","QueryEnums","Languages","Operators","display","title","Collections","selectControl","minWidth","width","CollectionSelector","collection","collections","setCollections","useEffect","collectionItems","map","c","FormControl","InputLabel","htmlFor","Select","native","event","inputProps","root","marks","getScaledValue","x","LimitSlider","sliderValue","Fragment","Slider","min","step","max","defaultValue","getAriaValueText","valueLabelFormat","valueLabelDisplay","newValue","LanguageSelector","language","languages","setLanguages","languageItems","padding","chipList","justifyContent","flexWrap","listStyle","chip","FieldsEntryForm","fields","onAddField","onRemoveField","inputField","setInputField","isValidInput","includes","toLowerCase","fieldItems","field","Chip","onDelete","handleRemoveField","Grid","item","xs","sm","md","InputProps","endAdornment","InputAdornment","position","IconButton","disabled","fieldGridItem","marginTop","marginBottom","marginLeft","operatorGrid","ConditionArgumentForm","conditionData","onDataChange","setField","setValue","operators","setOperators","operatorItems","o","fontSize","operator","find","header1","palette","text","primary","fontWeight","paper","jsonView","maxHeight","overflow","lineHeight","textView","linearProgres","QueryResults","data","isLoading","Paper","LinearProgress","JSON","stringify","urlBox","backgroundColor","fontFamily","borderRadius","container","gridItem","marginRight","runButton","buttonWide","whiteSpace","QueryUrlContainer","queryUrl","onRunQuery","alignItems","navigator","clipboard","writeText","anonymousUrl","url","regex","RegExp","replace","anonymizeQueryUrl","Link","to","href","rel","CensusQuery","require","Query","dbgcensus","flexGrow","gridContainer","gridContainerItem","gridRow","header2","itemParagraph","splitQueryField","filterSelect","inlineSelectItem","textButton","buttonWrapper","buttonProgress","top","left","App","SetGlobalNamespace","localStorage","getItem","storeKey","setStoreKey","storedKey","SetGlobalServiceKey","loading","setLoading","namespace","conditions","limit","start","filterType","filterFields","resolves","joins","trees","lang","sort","query","setQuery","prefersDarkMode","useMediaQuery","React","useMemo","createTheme","pink","secondary","amber","contrastThreshold","onAddSimpleArrayValue","arrayPropertyName","array","updatedFields","push","onRemoveSimpleArrayValue","index","indexOf","splice","onConditionDataChange","fieldName","fieldvalue","updatedConditions","condition","onDeleteCondition","filter","setQueryUrl","setDbgQuery","censusQuery","setLanguage","setLimit","setStart","length","resolve","forEach","where","convertToCensusQuery","console","log","toUrl","error","queryResult","setQueryResult","a","fetch","response","json","responseJson","ThemeProvider","CssBaseline","Container","maxWidth","key","setItem","removeItem","style","newCondition","uuidv4","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kxBAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QA4DXC,MAxDf,YAA+E,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,kBACjDC,EAAUV,IAEhB,EAAoCW,mBAASJ,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAYA,OACE,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAXtC,SAAsBC,GACpBA,EAAEC,iBACFV,EAAmBI,IASnB,UACE,cAACO,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,cACNjB,OAAO,QACPkB,QAAQ,WACRC,UAAQ,EACRC,KAAK,cACLC,SAAU,SAACR,GAAD,OAAOJ,EAAcI,EAAES,OAAOC,QACxCC,YAAY,UACZD,MAAOf,EACPiB,WAAW,0BAGb,cAACC,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,WACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IANb,kBAWA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,WACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IACXC,QAtCN,WACEvB,EAAc,WACdJ,KA6BE,wBCkHS4B,EAvKI,CACjBC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MACpCC,UAAW,CACT,CACEC,QAAS,IACThB,KAAM,SACNiB,MAAO,SACPd,MAAO,KAET,CACEa,QAAS,SACThB,KAAM,YACNiB,MAAO,aACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,aACNiB,MAAO,eACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,qBACNiB,MAAO,yBACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,gBACNiB,MAAO,kBACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,wBACNiB,MAAO,4BACPd,MAAO,MAET,CACEa,QAAS,cACThB,KAAM,aACNiB,MAAO,cACPd,MAAO,MAET,CACEa,QAAS,WACThB,KAAM,WACNiB,MAAO,WACPd,MAAO,OAGXe,YAAa,CACX,YACA,iBACA,yBACA,sBACA,uBACA,iCACA,4BACA,4BACA,mBACA,kBACA,6BACA,0BACA,yBACA,oCACA,qBACA,kBACA,UACA,eACA,cACA,eACA,aACA,WACA,YACA,iBACA,iBACA,0BACA,SACA,cACA,gBACA,aACA,kBACA,gBACA,gBACA,UACA,aACA,0BACA,YACA,cACA,0BACA,iBACA,QACA,YACA,oBACA,OACA,kBACA,gBACA,eACA,iBACA,YACA,UACA,UACA,aACA,mBACA,wBACA,+BACA,iBACA,uBACA,YACA,6BACA,iBACA,eACA,qBACA,uBACA,UACA,YACA,oBACA,qBACA,aACA,yBACA,SACA,cACA,cACA,gBACA,SACA,yBACA,6BACA,cACA,yBACA,QACA,iBACA,aACA,YACA,cACA,QACA,UACA,qBACA,kBACA,oBACA,SACA,mBACA,mBACA,uBACA,uBACA,OACA,cACA,mBACA,mBACA,QACA,SACA,gBACA,yBACA,cACA,2BACA,MACA,oBACA,cACA,yBACA,2BACA,mBACA,QACA,gBC9JE1C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyC,cAAe,CACbC,SAAU,IACVC,MAAO,SAII,SAASC,EAAT,GAAuD,IAAzBC,EAAwB,EAAxBA,WAAYtB,EAAY,EAAZA,SACjDf,EAAUV,IAChB,EAAsCW,mBAAS,IAA/C,mBAAOqC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRD,EAAeZ,EAAWK,eACzB,IAEH,IAAMS,EAAkBH,EAAYI,KAAI,SAACC,GAAD,OACtC,wBAAgB1B,MAAO0B,EAAvB,SACGA,GADUA,MAUf,OACE,eAACC,EAAA,EAAD,CAAahC,QAAQ,WAArB,UACE,cAACiC,EAAA,EAAD,CAAYC,QAAQ,oBAApB,wBACA,cAACC,EAAA,EAAD,CACEC,QAAM,EACNtD,OAAO,QACPiB,MAAM,aACNa,UAAWxB,EAAQiC,cACnBhB,MAAOoB,EACPtB,SAdN,SAAsBkC,GACpB,IAAMhC,EAAQgC,EAAMjC,OAAOC,MAC3BF,EAASE,IAaLiC,WAAY,CA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","file":"static/js/main.e3bbde22.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ServiceKeyForm({ serviceId, onServiceKeyChange, onDeleteStoredKey }) {\r\n  const classes = useStyles();\r\n\r\n  const [serviceKey, setServiceKey] = useState(serviceId);\r\n\r\n  function onSubmitForm(e) {\r\n    e.preventDefault();\r\n    onServiceKeyChange(serviceKey);\r\n  }\r\n\r\n  function onClickDelete() {\r\n    setServiceKey(\"example\");\r\n    onDeleteStoredKey();\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n      <TextField\r\n        id=\"service-key\"\r\n        label=\"Service Key\"\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        required\r\n        name=\"service-key\"\r\n        onChange={(e) => setServiceKey(e.target.value)}\r\n        placeholder=\"example\"\r\n        value={serviceKey}\r\n        helperText=\"Omit the leading 's:'\"\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n      >\r\n        Save\r\n      </Button>\r\n      \r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={onClickDelete}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ServiceKeyForm;\r\n","const QueryEnums = {\r\n  Languages: [\"De\", \"En\", \"Es\", \"Fr\", \"It\"],\r\n  Operators: [\r\n    {\r\n      display: \"=\",\r\n      name: \"equals\",\r\n      title: \"Equals\",\r\n      value: \"=\",\r\n    },\r\n    {\r\n      display: \"≠\",\r\n      name: \"notEquals\",\r\n      title: \"Not Equals\",\r\n      value: \"=!\",\r\n    },\r\n    {\r\n      display: \"<\",\r\n      name: \"isLessThan\",\r\n      title: \"Is Less Than\",\r\n      value: \"=<\",\r\n    },\r\n    {\r\n      display: \"≤\",\r\n      name: \"isLessThanOrEquals\",\r\n      title: \"Is Less Than Or Equals\",\r\n      value: \"=[\",\r\n    },\r\n    {\r\n      display: \">\",\r\n      name: \"isGreaterThan\",\r\n      title: \"Is Greater Than\",\r\n      value: \"=>\",\r\n    },\r\n    {\r\n      display: \"≥\",\r\n      name: \"isGreaterThanOrEquals\",\r\n      title: \"Is Greater Than Or Equals\",\r\n      value: \"=]\",\r\n    },\r\n    {\r\n      display: \"Starts With\",\r\n      name: \"startsWith\",\r\n      title: \"Starts With\",\r\n      value: \"=^\",\r\n    },\r\n    {\r\n      display: \"Contains\",\r\n      name: \"contains\",\r\n      title: \"Contains\",\r\n      value: \"=*\",\r\n    },\r\n  ],\r\n  Collections: [\r\n    \"character\",\r\n    \"character_name\",\r\n    \"characters_achievement\",\r\n    \"characters_currency\",\r\n    \"characters_directive\",\r\n    \"characters_directive_objective\",\r\n    \"characters_directive_tier\",\r\n    \"characters_directive_tree\",\r\n    \"characters_skill\",\r\n    \"characters_stat\",\r\n    \"characters_stat_by_faction\",\r\n    \"characters_stat_history\",\r\n    \"characters_weapon_stat\",\r\n    \"characters_weapon_stat_by_faction\",\r\n    \"world_stat_history\",\r\n    \"characters_item\",\r\n    \"ability\",\r\n    \"ability_type\",\r\n    \"achievement\",\r\n    \"armor_facing\",\r\n    \"armor_info\",\r\n    \"currency\",\r\n    \"directive\",\r\n    \"directive_tier\",\r\n    \"directive_tree\",\r\n    \"directive_tree_category\",\r\n    \"effect\",\r\n    \"effect_type\",\r\n    \"empire_scores\",\r\n    \"experience\",\r\n    \"experience_rank\",\r\n    \"facility_link\",\r\n    \"facility_type\",\r\n    \"faction\",\r\n    \"fire_group\",\r\n    \"fire_group_to_fire_mode\",\r\n    \"fire_mode\",\r\n    \"fire_mode_2\",\r\n    \"fire_mode_to_projectile\",\r\n    \"fire_mode_type\",\r\n    \"image\",\r\n    \"image_set\",\r\n    \"image_set_default\",\r\n    \"item\",\r\n    \"item_attachment\",\r\n    \"item_category\",\r\n    \"item_profile\",\r\n    \"item_to_weapon\",\r\n    \"item_type\",\r\n    \"loadout\",\r\n    \"map_hex\",\r\n    \"map_region\",\r\n    \"marketing_bundle\",\r\n    \"marketing_bundle_item\",\r\n    \"marketing_bundle_with_1_item\",\r\n    \"metagame_event\",\r\n    \"metagame_event_state\",\r\n    \"objective\",\r\n    \"objective_set_to_objective\",\r\n    \"objective_type\",\r\n    \"player_state\",\r\n    \"player_state_group\",\r\n    \"player_state_group_2\",\r\n    \"profile\",\r\n    \"profile_2\",\r\n    \"profile_armor_map\",\r\n    \"profile_resist_map\",\r\n    \"projectile\",\r\n    \"projectile_flight_type\",\r\n    \"region\",\r\n    \"resist_info\",\r\n    \"resist_type\",\r\n    \"resource_type\",\r\n    \"reward\",\r\n    \"reward_group_to_reward\",\r\n    \"reward_set_to_reward_group\",\r\n    \"reward_type\",\r\n    \"single_character_by_id\",\r\n    \"skill\",\r\n    \"skill_category\",\r\n    \"skill_line\",\r\n    \"skill_set\",\r\n    \"target_type\",\r\n    \"title\",\r\n    \"vehicle\",\r\n    \"vehicle_attachment\",\r\n    \"vehicle_faction\",\r\n    \"vehicle_skill_set\",\r\n    \"weapon\",\r\n    \"weapon_ammo_slot\",\r\n    \"weapon_datasheet\",\r\n    \"weapon_to_attachment\",\r\n    \"weapon_to_fire_group\",\r\n    \"zone\",\r\n    \"zone_effect\",\r\n    \"zone_effect_type\",\r\n    \"characters_world\",\r\n    \"world\",\r\n    \"outfit\",\r\n    \"outfit_member\",\r\n    \"outfit_member_extended\",\r\n    \"outfit_rank\",\r\n    \"characters_online_status\",\r\n    \"map\",\r\n    \"characters_friend\",\r\n    \"leaderboard\",\r\n    \"characters_leaderboard\",\r\n    \"characters_event_grouped\",\r\n    \"characters_event\",\r\n    \"event\",\r\n    \"world_event\",\r\n  ],\r\n};\r\n\r\nexport default QueryEnums;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, Select } from \"@material-ui/core\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 120,\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nexport default function CollectionSelector({ collection, onChange }) {\r\n  const classes = useStyles();\r\n  const [collections, setCollections] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCollections(QueryEnums.Collections);\r\n  }, []);\r\n\r\n  const collectionItems = collections.map((c) => (\r\n    <option key={c} value={c}>\r\n      {c}\r\n    </option>\r\n  ));\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"collection-select\">Collection</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label=\"Collection\"\r\n        className={classes.selectControl}\r\n        value={collection}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"collection\",\r\n          id: \"collection-select\",\r\n        }}\r\n      >\r\n        {collectionItems}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 10,\r\n    label: 10,\r\n  },\r\n  {\r\n    value: 20,\r\n    label: 100,\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1k\",\r\n  },\r\n  {\r\n    value: 40,\r\n    label: \"10k\",\r\n  },\r\n];\r\n\r\nconst getScaledValue = (x) => {\r\n  if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 20) {\r\n    return (x - 10) * 10;\r\n  } else if (x <= 30) {\r\n    return (x - 20) * 100;\r\n  } else {\r\n    return (x - 30) * 1000;\r\n  }\r\n}\r\n\r\nconst getUnscaledValue = (x) => {\r\n  if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 100) {\r\n    return (x / 10)  + 10;\r\n  } else if (x <= 1000) {\r\n    return (x / 100) + 20;\r\n  } else {\r\n    return (x / 1000) + 30;\r\n  }\r\n}\r\n\r\nexport default function LimitSlider({ value,  onChange, label }) {\r\n  const classes = useStyles();\r\n  \r\n  const sliderValue = getUnscaledValue(value);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    onChange(getScaledValue(newValue));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <InputLabel id=\"limit-input-slider-label\" htmlFor=\"limit-slider\">Limit</InputLabel>\r\n      <Slider\r\n        className={classes.root}\r\n        id=\"limit-slider\"\r\n        value={typeof sliderValue === 'number' ? sliderValue : 0}\r\n        min={1}\r\n        step={1}\r\n        max={40}\r\n        defaultValue={10}\r\n        getAriaValueText={getScaledValue}\r\n        valueLabelFormat={getScaledValue}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"limit-input-slider-label\"\r\n        marks={marks}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, Select } from \"@material-ui/core\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 120,\r\n    width: 120,\r\n  },\r\n}));\r\n\r\nexport default function LanguageSelector({ language, onChange }) {\r\n  const classes = useStyles();\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLanguages(QueryEnums.Languages);\r\n  }, []);\r\n\r\n  const languageItems = languages.map((c) => (\r\n    <option key={c} value={c} aria-label={c}>\r\n      {c}\r\n    </option>\r\n  ));\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"language-select\">Language</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label=\"Language\"\r\n        className={classes.selectControl}\r\n        value={language}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"language\",\r\n          id: \"language-select\",\r\n        }}\r\n      >\r\n        <option aria-label=\"All\" value=\"All\">\r\n          All\r\n        </option>\r\n        {languageItems}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  chipList: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function FieldsEntryForm({\r\n  label,\r\n  fields,\r\n  onAddField,\r\n  onRemoveField,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [inputField, setInputField] = useState(\"\");\r\n\r\n  function onSubmitForm(event) {\r\n    event.preventDefault();\r\n\r\n    if (isValidInput()) {\r\n      setInputField(\"\");\r\n      onAddField(inputField.toLowerCase());\r\n    }\r\n  }\r\n\r\n  function handleRemoveField(field) {\r\n    const value = field;\r\n    onRemoveField(value);\r\n  }\r\n\r\n  function isValidInput() {\r\n    if (inputField === \"\") {\r\n      return false;\r\n    } else {\r\n      return !fields.includes(inputField.toLowerCase());\r\n    }\r\n  }\r\n\r\n  const fieldItems = fields.map((field) => {\r\n    return (\r\n      <li key={field}>\r\n        <Chip\r\n          label={field}\r\n          onDelete={() => handleRemoveField(field)}\r\n          className={classes.chip}\r\n          size=\"small\"\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n          <TextField\r\n            id=\"add-show-field-input\"\r\n            label={label}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"show-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setInputField(e.target.value)}\r\n            placeholder=\"example\"\r\n            value={inputField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={!isValidInput()}\r\n                    aria-label=\"Add to shown fields\"\r\n                    className={classes.button}\r\n                  >\r\n                    <AddCircleOutline />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <ul className={classes.chipList}>{fieldItems}</ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport {\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function ConditionArgumentForm({\r\n  conditionData,\r\n  onDataChange,\r\n  onDelete,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [field, setField] = useState(conditionData.field);\r\n  const [value, setValue] = useState(conditionData.value);\r\n\r\n  const [operators, setOperators] = useState([]);\r\n  useEffect(() => {\r\n    setOperators(QueryEnums.Operators);\r\n  }, []);\r\n\r\n  const operatorItems = operators.map((o) => (\r\n    <option key={o.name} value={o.value} title={o.title}>\r\n      {o.display}\r\n    </option>\r\n  ));\r\n\r\n  function isValidInput(value) {\r\n    return value !== \"\";\r\n  }\r\n\r\n  function handleOperatorChange(event) {\r\n    const value = event.target.value;\r\n    const operator = operators.find((o) => o.value === value);\r\n    onDataChange(conditionData.id, \"operator\", operator);\r\n  }\r\n\r\n  function onSubmitField(event) {\r\n    event.preventDefault();\r\n    onDataChange(conditionData.id, \"field\", field);\r\n  }\r\n\r\n  function onSubmitValue(event) {\r\n    event.preventDefault();\r\n    onDataChange(conditionData.id, \"value\", value);\r\n  }\r\n\r\n  function handleDeleteCondition() {\r\n    onDelete(conditionData.id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitField}>\r\n          <TextField\r\n            id=\"condition-field\"\r\n            label=\"Field\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"condition-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setField(e.target.value)}\r\n            value={field}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={\r\n                      !isValidInput(field) || field === conditionData.field\r\n                    }\r\n                    aria-label=\"Update the condition's field\"\r\n                    className={classes.button}\r\n                  >\r\n                    <SaveIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={3} md={3} className={classes.operatorGrid}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel htmlFor=\"operator-select\">Operator</InputLabel>\r\n          <Select\r\n            native\r\n            margin=\"dense\"\r\n            label=\"Operator\"\r\n            value={conditionData.operator.value}\r\n            onChange={handleOperatorChange}\r\n            inputProps={{\r\n              name: \"operator\",\r\n              id: \"operator-select\",\r\n            }}\r\n          >\r\n            {operatorItems}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={8} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitValue}>\r\n          <TextField\r\n            id=\"condition-value\"\r\n            label=\"Value\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"condition-value\"\r\n            size=\"small\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={\r\n                      !isValidInput(value) || value === conditionData.value\r\n                    }\r\n                    aria-label=\"Update the condition's filter value\"\r\n                    className={classes.button}\r\n                  >\r\n                    <SaveIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={1} md={1}>\r\n        <IconButton\r\n          aria-label=\"Delete this query condition\"\r\n          title=\"Delete this query condition\"\r\n          onClick={handleDeleteCondition}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Paper } from \"@material-ui/core\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  jsonView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  linearProgres: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function QueryResults({ data, isLoading }) {\r\n  const classes = useStyles();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <h1>Query Results</h1>\r\n        <LinearProgress className={classes.linearProgres}/>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h1 className={classes.header1}>Query Results</h1>\r\n      {!!data ? (\r\n        <div className={classes.textView}>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n        /*{/* <ReactJson\r\n          src={data}\r\n          enableDelete={true}\r\n          iconStyle=\"circle\"\r\n          displayObjectSize={false}\r\n          displayDataTypes={false}\r\n          style={{\r\n            maxHeight: \"600px\",\r\n            overflow: \"auto\",\r\n            lineHeight: \"1.1\",\r\n            marginTop: 8,\r\n          }}\r\n        /> }*/\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Button, Grid, Link } from \"@material-ui/core\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  urlBox: {\r\n    marginTop: theme.spacing(1),\r\n    backgroundColor: \"#303030\",\r\n    color: \"#fff\",\r\n    fontFamily: \"monospace\",\r\n    padding: theme.spacing(1),\r\n    borderRadius: 4,\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  gridItem: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  button: {\r\n    // marginTop: theme.spacing(2),\r\n  },\r\n  runButton: {\r\n    width: 120,\r\n  },\r\n  buttonWide: {\r\n    // marginTop: theme.spacing(2),\r\n    whiteSpace: 'nowrap',\r\n  },\r\n}));\r\n\r\nexport default function QueryUrlContainer({ queryUrl, isLoading, onRunQuery }) {\r\n  const classes = useStyles();\r\n\r\n  function copyToClipboardExact() {\r\n    navigator.clipboard.writeText(queryUrl);\r\n  }\r\n  \r\n  function copyToClipboardAnonymous() {\r\n    const anonymousUrl = anonymizeQueryUrl(queryUrl);\r\n    navigator.clipboard.writeText(anonymousUrl);\r\n  }\r\n  \r\n  function anonymizeQueryUrl(url) {\r\n    const regex = new RegExp('(/s:)[A-z0-9]+/');\r\n    return queryUrl.replace(regex, '/s:example/');\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h1 className={classes.header1}>Query String</h1>\r\n      <div className={classes.urlBox}>{queryUrl}</div>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\" spacing={1} className={classes.container}>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={onRunQuery}\r\n            value=\"Run\"\r\n            className={classes.runButton}\r\n            startIcon={isLoading ? null : <PlayArrowIcon />}\r\n            title=\"Run the query\"\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Run\" }\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={copyToClipboardExact}\r\n              value=\"Copy\"\r\n              className={classes.button}\r\n              title=\"Copy the query url to the clipboard\"\r\n              startIcon={<AssignmentIcon />}\r\n            >\r\n              Copy\r\n            </Button>\r\n        </Grid>\r\n        \r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={copyToClipboardAnonymous}\r\n              value=\"Copy Anonymous\"\r\n              className={classes.buttonWide}\r\n              title=\"Copy the query url to the clipboard and replace your service ID with 'example'\"\r\n              startIcon={<AssignmentIcon />}\r\n            >\r\n              Copy Anon.\r\n            </Button>\r\n        </Grid>\r\n        \r\n        <Grid item className={classes.gridItem}>\r\n          <Link to={queryUrl} href={queryUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                value=\"Open Query\"\r\n                className={classes.buttonWide}\r\n                title=\"Open the query URL in a new tab\"\r\n                startIcon={<OpenInNewIcon />}\r\n              >\r\n                Open\r\n              </Button>\r\n          </Link>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"../styles/App.css\";\r\nimport { pink, amber } from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ServiceKeyForm from \"./queries/ServiceKeyForm\";\r\nimport CollectionSelector from \"./queries/CollectionSelector\";\r\nimport LimitSlider from \"./queries/LimitSlider\";\r\nimport LanguageSelector from \"./queries/LanguageSelector\";\r\n\r\nimport FieldsEntryForm from \"./queries/FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./queries/ConditionArgumentForm\";\r\nimport QueryResults from \"./queries/QueryResults\";\r\nimport QueryUrlContainer from \"./queries/QueryUrlContainer\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst CensusQuery = require(\"dbgcensus\").Query;\r\nconst dbgcensus = require(\"dbgcensus\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    \"margin-top\": theme.spacing(3),\r\n  },\r\n  gridContainer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridContainerItem: {\r\n    \"padding-bottom\": theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  itemParagraph: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  splitQueryField: {\r\n    width: 250,\r\n  },\r\n  filterSelect: {\r\n    width: 120,\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  buttonProgress: {\r\n    color: 'black',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dbgcensus.SetGlobalNamespace(\"ps2:v2\");\r\n  }, []);\r\n\r\n  const [storeKey, setStoreKey] = useState(localStorage.getItem('DaybreakGamesKey'));\r\n  useEffect(() => {\r\n    const storedKey = localStorage.getItem('DaybreakGamesKey');\r\n    if (storedKey !== null) {\r\n      dbgcensus.SetGlobalServiceKey(storedKey);\r\n      setStoreKey(storedKey);\r\n    }\r\n  }, [setStoreKey]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [query, setQuery] = useState({\r\n    serviceKey: storeKey || \"example\",\r\n    namespace: \"ps2:v2\",\r\n    collection: \"character\",\r\n    language: \"All\",\r\n    conditions: [],\r\n    limit: 10,\r\n    start: null,\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    resolves: [],\r\n    joins: [],\r\n    trees: [],\r\n    lang: null,\r\n    sort: [],\r\n  });\r\n\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          type: \"light\", //prefersDarkMode ? \"dark\" : \"light\",\r\n          primary: pink,\r\n          secondary: amber,\r\n        },\r\n        contrastThreshold: 5,\r\n      }),\r\n    [prefersDarkMode]\r\n  );\r\n\r\n  function onServiceKeyChange(key) {\r\n    setQuery({ ...query, ...{ serviceKey: key } });\r\n    dbgcensus.SetGlobalServiceKey(key);\r\n    localStorage.setItem('DaybreakGamesKey', key);\r\n  }\r\n\r\n  function onDeleteStoredServiceKey() {\r\n    setQuery({ ...query, ...{ serviceKey: 'example' } });\r\n    dbgcensus.SetGlobalServiceKey('example');\r\n    localStorage.removeItem('DaybreakGamesKey');\r\n  }\r\n\r\n  function onCollectionChange(value) {\r\n    setQuery({\r\n      ...query,\r\n      ...{\r\n        collection: value,\r\n      },\r\n    });\r\n  }\r\n\r\n  function onLimitChange(value) {\r\n    setQuery({ ...query, ...{ limit: value } });\r\n  }\r\n\r\n  function onLanguageChange(value) {\r\n    setQuery({ ...query, ...{ language: value.toLowerCase() } });\r\n  }\r\n\r\n  function onFilterTypeChange(event) {\r\n    const isChecked = event.target.checked;\r\n    const value = isChecked ? \"show\" : \"hide\";\r\n\r\n    setQuery({ ...query, ...{ filterType: value } });\r\n  }\r\n\r\n  function onAddSimpleArrayValue(arrayPropertyName, value) {\r\n    const array = query[arrayPropertyName];\r\n\r\n    if (value !== \"\" && !array.includes(value)) {\r\n      let updatedFields = array;\r\n      updatedFields.push(value);\r\n      setQuery({ ...query, ...{ [arrayPropertyName]: updatedFields } });\r\n    }\r\n  }\r\n\r\n  function onRemoveSimpleArrayValue(arrayPropertyName, value) {\r\n    const array = query[arrayPropertyName];\r\n\r\n    const index = array.indexOf(value);\r\n\r\n    if (index !== -1) {\r\n      let updatedFields = array;\r\n      updatedFields.splice(index, 1);\r\n      setQuery({ ...query, ...{ [arrayPropertyName]: updatedFields } });\r\n    }\r\n  }\r\n\r\n  function onConditionDataChange(id, fieldName, fieldvalue) {\r\n    const updatedConditions = query.conditions.map((condition) => {\r\n      if (condition.id === id) {\r\n        condition[fieldName] = fieldvalue;\r\n      }\r\n\r\n      return condition;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ conditions: updatedConditions } });\r\n  }\r\n\r\n  function onAddNewCondition() {\r\n    const newCondition = {\r\n      id: uuidv4(),\r\n      field: \"\",\r\n      value: \"\",\r\n      operator: {\r\n        display: \"=\",\r\n        name: \"equals\",\r\n        title: \"Equals\",\r\n        value: \"=\",\r\n      },\r\n    };\r\n\r\n    setQuery({\r\n      ...query,\r\n      ...{ conditions: [...query.conditions, newCondition] },\r\n    });\r\n  }\r\n\r\n  function onDeleteCondition(id) {\r\n    const updatedConditions = query.conditions.filter((condition) => {\r\n      return condition.id !== id;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ conditions: updatedConditions } });\r\n  }\r\n\r\n  const [queryUrl, setQueryUrl] = useState(\"\");\r\n  const [dbgQuery, setDbgQuery] = useState(\r\n    new CensusQuery(query.collection, query.namespace, query.serviceKey)\r\n  );\r\n  useEffect(() => {\r\n    function convertToCensusQuery() {\r\n      let censusQuery = new CensusQuery(\r\n        query.collection,\r\n        query.namespace,\r\n        query.serviceKey\r\n      );\r\n\r\n      if (!!query.language && query.language !== \"All\") {\r\n        censusQuery.setLanguage(query.language.toLowerCase());\r\n      }\r\n\r\n      if (query.limit !== null) {\r\n        censusQuery.setLimit(query.limit);\r\n      }\r\n\r\n      if (query.start !== null) {\r\n        censusQuery.setStart(query.start);\r\n      }\r\n\r\n      if (query.filterFields.length > 0) {\r\n        censusQuery[`${query.filterType}Fields`](query.filterFields);\r\n      }\r\n\r\n      if (query.resolves.length > 0) {\r\n        censusQuery.resolve(query.resolves);\r\n      }\r\n\r\n      if (query.sort.length > 0) {\r\n        censusQuery.sort(query.sort);\r\n      }\r\n\r\n      if (query.conditions.length > 0) {\r\n        query.conditions.forEach((condition) => {\r\n          if (\r\n            condition.field !== \"\" &&\r\n            !!condition.operator &&\r\n            condition.value !== \"\"\r\n          ) {\r\n            censusQuery\r\n              .where(condition.field)\r\n              [condition.operator.name](condition.value);\r\n          }\r\n        });\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    try {\r\n      const censusQuery = convertToCensusQuery();\r\n      setDbgQuery(censusQuery);\r\n\r\n      console.log('CensusQuery: ', censusQuery);\r\n\r\n      let url = censusQuery().toUrl();\r\n      url = url.replace('http://', 'https://');\r\n      console.log('Set Query URL: ', queryUrl);\r\n      setQueryUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error getting query URL: \", error);\r\n    }\r\n  }, [query]);\r\n\r\n  const [queryResult, setQueryResult] = useState(\"\");\r\n  async function onSubmitQuery() {\r\n    if (!!queryUrl && !loading) {\r\n      setLoading(true);\r\n\r\n      try {\r\n        console.log('Fetch Query URL: ', queryUrl);\r\n        const response = await fetch(queryUrl);\r\n        const responseJson = await response.json();\r\n        setQueryResult(responseJson);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"Error getting data from query: \", error);\r\n        setQueryResult(`Error getting data from query: ${error}`);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container alignItems=\"flex-start\">\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <h1 className={classes.header1}>Set Service ID</h1>\r\n                <p className={classes.itemParagraph}>\r\n                  Sign up for a service ID{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#service-id\"\r\n                    aria-label=\"Service ID sign up page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    here\r\n                  </a>\r\n                  . The 'example' service ID allows up to 10 requests per\r\n                  minute. Saving your service ID will store it to this browser.\r\n                </p>\r\n                <ServiceKeyForm serviceId={query.serviceKey} onServiceKeyChange={onServiceKeyChange} onDeleteStoredKey={onDeleteStoredServiceKey}/>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <h1 className={classes.header1}>Query Creator</h1>\r\n                <p className={classes.itemParagraph}>\r\n                  Refer to the{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#general\"\r\n                    aria-label=\"Official census API documentation page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    official documentation\r\n                  </a>{\" \"}\r\n                  for more information on using the API.\r\n                </p>\r\n\r\n                <h2 className={classes.header2}>Collection</h2>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  alignItems=\"flex-start\"\r\n                  className={classes.gridRow}\r\n                >\r\n                  <Grid item sm={12} md={6} className={classes.splitQueryField}>\r\n                    <CollectionSelector\r\n                      collection={query.collection}\r\n                      onChange={onCollectionChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item sm={12} md={6} className={classes.splitQueryField}>\r\n                    <LanguageSelector\r\n                      value={query.language}\r\n                      onChange={onLanguageChange}\r\n                    />\r\n                  </Grid>\r\n                  \r\n                  <Grid item sm={12} style={{ marginLeft: 4, marginTop: 8 }}>\r\n                    <LimitSlider\r\n                      value={query.limit}\r\n                      onChange={onLimitChange}\r\n                      label=\"Limit\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Search Conditions</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                  className={classes.gridRow}\r\n                >\r\n                  {query.conditions.map((condition) => {\r\n                    return (\r\n                      <ConditionArgumentForm\r\n                        key={condition.id}\r\n                        conditionData={condition}\r\n                        onDataChange={onConditionDataChange}\r\n                        onDelete={onDeleteCondition}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon fontSize=\"small\" />}\r\n                    size=\"small\"\r\n                    onClick={onAddNewCondition}\r\n                    className={classes.textButton}\r\n                  >\r\n                    New Condition\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Filter Displayed Fields</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={0}\r\n                  className={classes.gridRow}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={3}\r\n                    className={classes.inlineSelectItem}\r\n                  >\r\n                    <FormControl variant=\"outlined\">\r\n                      <InputLabel htmlFor=\"filter-type-select\">\r\n                        Filter Type\r\n                      </InputLabel>\r\n                      <Select\r\n                        native\r\n                        margin=\"dense\"\r\n                        label=\"Filter Type\"\r\n                        className={classes.filterSelect}\r\n                        value={query.filterType}\r\n                        onChange={onFilterTypeChange}\r\n                        inputProps={{\r\n                          name: \"filter-type\",\r\n                          id: \"filter-type-select\",\r\n                        }}\r\n                      >\r\n                        <option aria-label=\"Show\" value=\"show\">\r\n                          Show\r\n                        </option>\r\n                        <option aira-label=\"Hide\" value=\"hide\">\r\n                          Hide\r\n                        </option>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <FieldsEntryForm\r\n                    label=\"Add Field\"\r\n                    fields={query.filterFields}\r\n                    onAddField={(value) =>\r\n                      onAddSimpleArrayValue(\"filterFields\", value)\r\n                    }\r\n                    onRemoveField={(value) =>\r\n                      onRemoveSimpleArrayValue(\"filterFields\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Resolves & Joins</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={0}\r\n                  className={classes.gridRow}\r\n                >\r\n                  <FieldsEntryForm\r\n                    label=\"Resolves\"\r\n                    fields={query.resolves}\r\n                    onAddField={(value) =>\r\n                      onAddSimpleArrayValue(\"resolves\", value)\r\n                    }\r\n                    onRemoveField={(value) =>\r\n                      onRemoveSimpleArrayValue(\"resolves\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryUrlContainer queryUrl={queryUrl} isLoading={loading} onRunQuery={onSubmitQuery}/>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryResults data={queryResult} isLoading={loading}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}