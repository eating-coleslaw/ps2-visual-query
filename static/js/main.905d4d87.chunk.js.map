{"version":3,"sources":["components/queries/ServiceKeyForm.js","planetside/QueryEnums.js","components/queries/CollectionSelector.js","components/queries/LimitSlider.js","components/queries/LanguageSelector.js","components/queries/FieldsEntryForm.js","components/shared/TextFormWithSave.js","components/queries/ConditionArgumentForm.js","components/queries/QueryResults.js","components/queries/QueryUrlContainer.js","components/shared/BinarySelector.js","components/shared/BooleanSelector.js","components/shared/Collapsible.js","planetside/QueryJoin.js","planetside/QueryOperator.js","planetside/QueryCondition.js","components/queries/JoinForm.js","components/queries/JoinsContainer.js","persistence/userPreferencesStore.js","components/shared/ThemeToggle.js","components/shared/GitHubLink.js","persistence/queryStore.js","components/menu/MenuDrawer.js","components/menu/QuerySelector.js","components/menu/MenuDrawerContainer.js","components/StaticAppBar.js","planetside/QueryTree.js","planetside/QueryConfig.js","components/queries/TreeForm.js","components/queries/queryOptions/QueryMenu.js","components/shared/ConfirmationDialog.js","components/queries/queryOptions/DeleteDialog.js","components/queries/queryOptions/NewQueryDialog.js","components/queries/queryOptions/SaveWithDialog.js","components/queries/queryOptions/RenameDialog.js","components/queries/queryOptions/SaveAsDialog.js","components/queries/queryOptions/SaveNewDialog.js","components/queries/queryOptions/QueryOptionsContainer.js","components/queries/QueryCreatorHeader.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","ServiceKeyForm","serviceId","onServiceKeyChange","onDeleteStoredKey","classes","useState","serviceKey","setServiceKey","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","required","name","onChange","target","value","placeholder","helperText","Button","type","color","size","className","startIcon","onClick","QueryEnums","Languages","Operators","display","title","Collections","selectControl","minWidth","listbox","padding","overflow","listStyle","maxHeight","border","boxSizing","CollectionSelector","collection","collections","setCollections","handleChange","includes","useEffect","Autocomplete","options","autoSelect","disableClearable","event","newValue","ListboxProps","renderInput","params","root","width","marks","getScaledValue","x","LimitSlider","sliderValue","Fragment","InputLabel","htmlFor","Slider","min","step","max","defaultValue","getAriaValueText","valueLabelFormat","valueLabelDisplay","LanguageSelector","language","optionItems","setOptionItems","allItem","languageItems","map","lang","FormControl","Select","native","inputProps","chipList","justifyContent","flexWrap","chip","FieldsEntryForm","fields","onAddField","onRemoveField","inputField","setInputField","isValidInput","fieldItems","field","Chip","onDelete","handleRemoveField","Grid","item","xs","sm","md","InputProps","endAdornment","InputAdornment","position","IconButton","disabled","fieldGridItem","marginTop","marginBottom","marginLeft","operatorGrid","TextFormWithSave","initValue","ariaLabel","allowBlank","setValue","fontSize","ConditionArgumentForm","conditionData","onDataChange","operators","setOperators","operator","find","o","headerButtonContainer","textAlign","header1","fontWeight","paper","jsonView","lineHeight","textView","linearProgres","QueryResults","data","isLoading","Paper","LinearProgress","container","alignItems","navigator","clipboard","writeText","JSON","stringify","urlBox","backgroundColor","fontFamily","borderRadius","wordWrap","gridItem","marginRight","runButton","runButtonIcon","buttonWide","whiteSpace","syntax","questionMark","ampersand","queryDelimiter","equals","equalsModifier","colon","parentheses","comma","QueryUrlContainer","queryUrl","onRunQuery","operatorCharacters","queryUrlPieces","splitAtQueryArray","unescape","split","preQueryString","push","length","splitAtMod","forEach","modItem","indexOf","uuidv1","splitAtAmpersand","amperItem","splitAtEquals","equalsItem","firstChar","charAt","substring","splitAtColon","colonItem","splitAtOpenParen","openParenItem","splitAtCloseParen","closeParenItem","splitAtUpperComman","upperCommaItem","splitAtComma","commaItem","anonymousUrl","url","regex","RegExp","replace","anonymizeQueryUrl","Link","to","href","rel","BinarySelector","optionA","optionB","style","toLowerCase","BooleanSelector","trueLabel","falseLabel","header2","header3","headerContainer","headerContainerCollapsed","paddingBottom","borderBottom","toggleContainer","toggleButton","toggle","transition","toggleCollapsed","transform","content","contentOpen","Collapsible","headerLevel","headerText","defaultExtended","children","Error","headerEl","React","createElement","extended","setExtended","QueryJoin","parentJoinId","uuidv4","parentId","injectAt","isOuterJoin","isList","onField","toField","filterType","filterFields","terms","joins","QueryOperator","operatorName","op","QueryCondition","defaultOperatorName","borderStyle","borderColor","gridRow","textButton","footer","inlineSelectItem","JoinForm","joinData","depth","onInfoChange","onAddArrayItem","onRemoveArrayItem","onChangeArrayItemWithId","onRemoveArrayItemWithId","handleChangeInfo","propertyName","ancestry","handleChildChangeInfo","targetId","handleAddArrayItem","arrayName","handleChildAddArrayItem","handleChildRemoveArrayItem","handleChildChangeArrayItemWithId","itemId","handleRemoveArrayItemWithId","handleChildRemoveArrayItemWithId","handleRemoveJoinTerm","handleRemoveSubJoin","handleChangeTermInfo","handleChangeArrayItemWithId","rootStyle","borderWidth","showAddSubJoin","disableAddSubJoin","condition","filterSelect","handleRemoveArrayItem","join","JoinsContainer","joinsData","onAddJoin","onDeleteJoin","handleDeleteJoin","newJoin","userPreferenceStore","serviceIdKey","colorThemeKey","saveServiceId","localStorage","setItem","getServiceId","getItem","removeServiceId","removeItem","saveColorTheme","getColorTheme","removeColorTheme","ThemeToggle","onChangeTheme","twirl","setTwirl","isDarkTheme","iconClass","icon","onAnimationEnd","animationName","GitHubLink","useTheme","gitHubUrl","palette","setIsDarkTheme","queryStoreName","dbPromise","openDB","upgrade","db","oldVersion","isSupported","queryStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","window","console","log","upsertQuery","query","a","addQuery","updateQuery","nowUTC","Date","now","dateCreated","dateLastModified","dateLastOpened","parse","tx","transaction","store","objectStore","add","result","done","warn","put","getQuery","get","deleteQuery","delete","getAllSortedByName","getAllFromIndex","results","getLastModified","take","count","startIndex","endIndex","slice","sort","b","zIndex","inset","backdrop","opacity","top","left","right","bottom","height","flex","outline","overflowY","flexDirection","MenuDrawer","open","onClose","menuPaper","document","querySelector","handleBackdropClick","currentTarget","classList","handleKeyDown","key","stopPropagation","body","addEventListener","removeEventListener","QuerySelector","onSelectQuery","setOpen","setOptions","loading","active","queries","onOpen","getOptionSelected","option","getOptionLabel","CircularProgress","menuButtonContainer","maxWidth","divider","list","recentListItem","subHeader","secondary","main","listSubheader","MenuDrawerContainer","onLoadQuery","isStoreSupported","setIsStoreSupported","isOpen","setIsOpen","toggleDrawer","state","recentQueryItems","setRecentQueryItems","setIsLoading","getRecentlyModified","then","recentQueries","listItems","timestamp","toLocaleString","subText","ListItem","ListItemText","primary","primaryTypographyProps","Divider","List","subheader","ListSubheader","component","StaticAppBar","onMenuClicked","props","AppBar","Toolbar","Typography","QueryTree","treeField","groupPrefix","startField","QueryConfig","defaultCollection","defaultNamespace","namespace","limit","conditions","resolves","tree","start","sortFields","sortDirection","isFavorite","TreeForm","QueryMenu","onClickSaveNew","onClickSave","onClickSaveAs","onClickNewQuery","onClickDelete","onClickRename","anchorEl","setAnchorEl","Boolean","isNewQuery","setIsNewQuery","handleCloseMenu","keepMounted","MenuItem","ConfirmationDialog","text","confirmLabel","onCancel","onConfirm","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","DeleteDialog","NewQueryDialog","SaveWithDialog","queryName","setQueryName","isValidName","autoFocus","fullWidth","RenameDialog","SaveAsDialog","SaveNewDialog","QueryOptionsContainer","onSaveNew","onSave","onSaveAs","onNewQuery","onRename","openDialog","setOpenDialog","handleCloseDialog","tryOpenDialog","dialogName","header","QueryCreatorHeader","CensusQuery","require","Query","dbgcensus","flexGrow","gridContainer","gridContainerItem","itemParagraph","splitQueryField","buttonWrapper","buttonProgress","App","SetGlobalNamespace","storeKey","setStoreKey","storedKey","SetGlobalServiceKey","setLoading","setQuery","prefersDarkMode","useMediaQuery","storedColorTheme","colorTheme","setColorTheme","useDarkMode","useMemo","createTheme","pink","background","default","contrastThreshold","loadedQueryId","setLoadedQueryId","handleSaveQuery","currentQuery","queryId","handleLoadQuery","copyName","prevQuery","loadedQuery","handleNewQuery","onAddSimpleArrayValue","arrayPropertyName","array","updatedFields","onRemoveSimpleArrayValue","index","splice","onConditionDataChange","propertyValue","updatedConditions","onDeleteCondition","filter","updateJoinAncestry","updateFunction","startJoinId","childAncestry","updateJoinAncestor","nextChildId","updatedJoins","j","setQueryUrl","addQueryJoins","censusQuery","joinsArray","censusJoin","serviceJoin","joinService","term","where","setLanguage","setLimit","setStart","resolve","convertToCensusQuery","toUrl","treeViewString","getTreeViewUrlString","error","queryResult","setQueryResult","fetch","response","json","responseJson","ThemeProvider","CssBaseline","Container","newLimit","newCondition","lg","joinId","changeJoinPropertyValue","targetJoin","updatedArray","addArrayItemToJoin","i","removeArrayItemFromJoin","updateArrayItemWithIdInJoin","removeArrayItemWithIdFromJoin","updatedTree","ReactDOM","render","StrictMode","getElementById"],"mappings":"+yBAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QA4DXC,MAxDf,YAA+E,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,kBACjDC,EAAUV,IAEhB,EAAoCW,mBAASJ,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAYA,OACE,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAXtC,SAAsBC,GACpBA,EAAEC,iBACFV,EAAmBI,IASnB,UACE,cAACO,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,cACNjB,OAAO,QACPkB,QAAQ,WACRC,UAAQ,EACRC,KAAK,cACLC,SAAU,SAACR,GAAD,OAAOJ,EAAcI,EAAES,OAAOC,QACxCC,YAAY,UACZD,MAAOf,EACPiB,WAAW,0BAGb,cAACC,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,YACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IANb,kBAWA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,WACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IACXC,QAtCN,WACEvB,EAAc,WACdJ,KA6BE,wB,SCkHS4B,EAvKI,CACjBC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MACpCC,UAAW,CACT,CACEC,QAAS,IACThB,KAAM,SACNiB,MAAO,SACPd,MAAO,KAET,CACEa,QAAS,SACThB,KAAM,YACNiB,MAAO,aACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,aACNiB,MAAO,eACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,qBACNiB,MAAO,yBACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,gBACNiB,MAAO,kBACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,wBACNiB,MAAO,4BACPd,MAAO,MAET,CACEa,QAAS,cACThB,KAAM,aACNiB,MAAO,cACPd,MAAO,MAET,CACEa,QAAS,WACThB,KAAM,WACNiB,MAAO,WACPd,MAAO,OAGXe,YAAa,CACX,YACA,iBACA,yBACA,sBACA,uBACA,iCACA,4BACA,4BACA,mBACA,kBACA,6BACA,0BACA,yBACA,oCACA,qBACA,kBACA,UACA,eACA,cACA,eACA,aACA,WACA,YACA,iBACA,iBACA,0BACA,SACA,cACA,gBACA,aACA,kBACA,gBACA,gBACA,UACA,aACA,0BACA,YACA,cACA,0BACA,iBACA,QACA,YACA,oBACA,OACA,kBACA,gBACA,eACA,iBACA,YACA,UACA,UACA,aACA,mBACA,wBACA,+BACA,iBACA,uBACA,YACA,6BACA,iBACA,eACA,qBACA,uBACA,UACA,YACA,oBACA,qBACA,aACA,yBACA,SACA,cACA,cACA,gBACA,SACA,yBACA,6BACA,cACA,yBACA,QACA,iBACA,aACA,YACA,cACA,QACA,UACA,qBACA,kBACA,oBACA,SACA,mBACA,mBACA,uBACA,uBACA,OACA,cACA,mBACA,mBACA,QACA,SACA,gBACA,yBACA,cACA,2BACA,MACA,oBACA,cACA,yBACA,2BACA,mBACA,QACA,gBC7JE1C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyC,cAAe,CACbC,SAAU,KAEZC,QAAS,CACPzC,OAAQ,EACR0C,QAAS,QACTC,SAAU,OACVC,UAAW,OACXC,UAAW,OACXC,OAAQ,oBACRC,UAAW,kBAIA,SAASC,EAAT,GAAuD,IAAzBC,EAAwB,EAAxBA,WAAY5B,EAAY,EAAZA,SACjDf,EAAUV,IAEhB,EAAsCW,mBAAS,IAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KAKA,SAASC,EAAa7B,GAChB2B,EAAYG,SAAS9B,IACvBF,EAASE,GAIb,OAVA+B,qBAAU,WACRH,EAAelB,EAAWK,eACzB,IASD,cAACiB,EAAA,EAAD,CACEvC,GAAG,sBACHwC,QAASN,EACT3B,MAAO0B,EACPQ,YAAU,EACVtC,UAAQ,EACRuC,kBAAgB,EAChBrC,SAAU,SAACsC,EAAOC,GAAR,OAAqBR,EAAaQ,IAC5CC,aAAc,CAAE/B,UAAU,GAAD,OAAKxB,EAAQmC,UACtCqB,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","file":"static/js/main.905d4d87.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ServiceKeyForm({ serviceId, onServiceKeyChange, onDeleteStoredKey }) {\r\n  const classes = useStyles();\r\n\r\n  const [serviceKey, setServiceKey] = useState(serviceId);\r\n\r\n  function onSubmitForm(e) {\r\n    e.preventDefault();\r\n    onServiceKeyChange(serviceKey);\r\n  }\r\n\r\n  function onClickDelete() {\r\n    setServiceKey(\"example\");\r\n    onDeleteStoredKey();\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n      <TextField\r\n        id=\"service-key\"\r\n        label=\"Service Key\"\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        required\r\n        name=\"service-key\"\r\n        onChange={(e) => setServiceKey(e.target.value)}\r\n        placeholder=\"example\"\r\n        value={serviceKey}\r\n        helperText=\"Omit the leading 's:'\"\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n      >\r\n        Save\r\n      </Button>\r\n\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={onClickDelete}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ServiceKeyForm;\r\n","const QueryEnums = {\r\n  Languages: [\"De\", \"En\", \"Es\", \"Fr\", \"It\"],\r\n  Operators: [\r\n    {\r\n      display: \"=\",\r\n      name: \"equals\",\r\n      title: \"Equals\",\r\n      value: \"=\",\r\n    },\r\n    {\r\n      display: \"≠\",\r\n      name: \"notEquals\",\r\n      title: \"Not Equals\",\r\n      value: \"=!\",\r\n    },\r\n    {\r\n      display: \"<\",\r\n      name: \"isLessThan\",\r\n      title: \"Is Less Than\",\r\n      value: \"=<\",\r\n    },\r\n    {\r\n      display: \"≤\",\r\n      name: \"isLessThanOrEquals\",\r\n      title: \"Is Less Than Or Equals\",\r\n      value: \"=[\",\r\n    },\r\n    {\r\n      display: \">\",\r\n      name: \"isGreaterThan\",\r\n      title: \"Is Greater Than\",\r\n      value: \"=>\",\r\n    },\r\n    {\r\n      display: \"≥\",\r\n      name: \"isGreaterThanOrEquals\",\r\n      title: \"Is Greater Than Or Equals\",\r\n      value: \"=]\",\r\n    },\r\n    {\r\n      display: \"Starts With\",\r\n      name: \"startsWith\",\r\n      title: \"Starts With\",\r\n      value: \"=^\",\r\n    },\r\n    {\r\n      display: \"Contains\",\r\n      name: \"contains\",\r\n      title: \"Contains\",\r\n      value: \"=*\",\r\n    },\r\n  ],\r\n  Collections: [\r\n    \"character\",\r\n    \"character_name\",\r\n    \"characters_achievement\",\r\n    \"characters_currency\",\r\n    \"characters_directive\",\r\n    \"characters_directive_objective\",\r\n    \"characters_directive_tier\",\r\n    \"characters_directive_tree\",\r\n    \"characters_skill\",\r\n    \"characters_stat\",\r\n    \"characters_stat_by_faction\",\r\n    \"characters_stat_history\",\r\n    \"characters_weapon_stat\",\r\n    \"characters_weapon_stat_by_faction\",\r\n    \"world_stat_history\",\r\n    \"characters_item\",\r\n    \"ability\",\r\n    \"ability_type\",\r\n    \"achievement\",\r\n    \"armor_facing\",\r\n    \"armor_info\",\r\n    \"currency\",\r\n    \"directive\",\r\n    \"directive_tier\",\r\n    \"directive_tree\",\r\n    \"directive_tree_category\",\r\n    \"effect\",\r\n    \"effect_type\",\r\n    \"empire_scores\",\r\n    \"experience\",\r\n    \"experience_rank\",\r\n    \"facility_link\",\r\n    \"facility_type\",\r\n    \"faction\",\r\n    \"fire_group\",\r\n    \"fire_group_to_fire_mode\",\r\n    \"fire_mode\",\r\n    \"fire_mode_2\",\r\n    \"fire_mode_to_projectile\",\r\n    \"fire_mode_type\",\r\n    \"image\",\r\n    \"image_set\",\r\n    \"image_set_default\",\r\n    \"item\",\r\n    \"item_attachment\",\r\n    \"item_category\",\r\n    \"item_profile\",\r\n    \"item_to_weapon\",\r\n    \"item_type\",\r\n    \"loadout\",\r\n    \"map_hex\",\r\n    \"map_region\",\r\n    \"marketing_bundle\",\r\n    \"marketing_bundle_item\",\r\n    \"marketing_bundle_with_1_item\",\r\n    \"metagame_event\",\r\n    \"metagame_event_state\",\r\n    \"objective\",\r\n    \"objective_set_to_objective\",\r\n    \"objective_type\",\r\n    \"player_state\",\r\n    \"player_state_group\",\r\n    \"player_state_group_2\",\r\n    \"profile\",\r\n    \"profile_2\",\r\n    \"profile_armor_map\",\r\n    \"profile_resist_map\",\r\n    \"projectile\",\r\n    \"projectile_flight_type\",\r\n    \"region\",\r\n    \"resist_info\",\r\n    \"resist_type\",\r\n    \"resource_type\",\r\n    \"reward\",\r\n    \"reward_group_to_reward\",\r\n    \"reward_set_to_reward_group\",\r\n    \"reward_type\",\r\n    \"single_character_by_id\",\r\n    \"skill\",\r\n    \"skill_category\",\r\n    \"skill_line\",\r\n    \"skill_set\",\r\n    \"target_type\",\r\n    \"title\",\r\n    \"vehicle\",\r\n    \"vehicle_attachment\",\r\n    \"vehicle_faction\",\r\n    \"vehicle_skill_set\",\r\n    \"weapon\",\r\n    \"weapon_ammo_slot\",\r\n    \"weapon_datasheet\",\r\n    \"weapon_to_attachment\",\r\n    \"weapon_to_fire_group\",\r\n    \"zone\",\r\n    \"zone_effect\",\r\n    \"zone_effect_type\",\r\n    \"characters_world\",\r\n    \"world\",\r\n    \"outfit\",\r\n    \"outfit_member\",\r\n    \"outfit_member_extended\",\r\n    \"outfit_rank\",\r\n    \"characters_online_status\",\r\n    \"map\",\r\n    \"characters_friend\",\r\n    \"leaderboard\",\r\n    \"characters_leaderboard\",\r\n    \"characters_event_grouped\",\r\n    \"characters_event\",\r\n    \"event\",\r\n    \"world_event\",\r\n  ],\r\n};\r\n\r\nexport default QueryEnums;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 250,\r\n  },\r\n  listbox: {\r\n    margin: 0,\r\n    padding: \"8px 0\",\r\n    overflow: \"auto\",\r\n    listStyle: \"none\",\r\n    maxHeight: \"40vh\",\r\n    border: \"1px solid #414152\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n}));\r\n\r\nexport default function CollectionSelector({ collection, onChange }) {\r\n  const classes = useStyles();\r\n\r\n  const [collections, setCollections] = useState([]);\r\n  useEffect(() => {\r\n    setCollections(QueryEnums.Collections);\r\n  }, []);\r\n\r\n  function handleChange(value) {\r\n    if (collections.includes(value)) {\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"collection-selector\"\r\n      options={collections}\r\n      value={collection}\r\n      autoSelect\r\n      required\r\n      disableClearable\r\n      onChange={(event, newValue) => handleChange(newValue)}\r\n      ListboxProps={{ className: `${classes.listbox}` }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Collection\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n      )}\r\n      className={classes.selectControl}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: \"None\",\r\n  },\r\n  {\r\n    value: 10,\r\n    label: 10,\r\n  },\r\n  {\r\n    value: 20,\r\n    label: 100,\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1k\",\r\n  },\r\n  {\r\n    value: 40,\r\n    label: \"10k\",\r\n  },\r\n];\r\n\r\nconst getScaledValue = (x) => {\r\n  if (x === 0) {\r\n    return x;\r\n  } else if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 20) {\r\n    return (x - 10) * 10;\r\n  } else if (x <= 30) {\r\n    return (x - 20) * 100;\r\n  } else {\r\n    return (x - 30) * 1000;\r\n  }\r\n};\r\n\r\nconst getUnscaledValue = (x) => {\r\n  if (x === 0) {\r\n    return x;\r\n  } else if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 100) {\r\n    return x / 10 + 10;\r\n  } else if (x <= 1000) {\r\n    return x / 100 + 20;\r\n  } else {\r\n    return x / 1000 + 30;\r\n  }\r\n};\r\n\r\nexport default function LimitSlider({ value, onChange, label }) {\r\n  const classes = useStyles();\r\n\r\n  const sliderValue = getUnscaledValue(value);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    onChange(getScaledValue(newValue));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <InputLabel id=\"limit-input-slider-label\" htmlFor=\"limit-slider\">\r\n        Limit\r\n      </InputLabel>\r\n      <Slider\r\n        className={classes.root}\r\n        id=\"limit-slider\"\r\n        value={typeof sliderValue === \"number\" ? sliderValue : 0}\r\n        min={0}\r\n        step={1}\r\n        max={40}\r\n        defaultValue={10}\r\n        getAriaValueText={getScaledValue}\r\n        valueLabelFormat={getScaledValue}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"limit-input-slider-label\"\r\n        marks={marks}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, Select } from \"@material-ui/core\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 120,\r\n    width: 120,\r\n  },\r\n}));\r\n\r\nexport default function LanguageSelector({ language, onChange }) {\r\n  const classes = useStyles();\r\n\r\n  const [optionItems, setOptionItems] = useState([]);\r\n  useEffect(() => {\r\n    const allItem = (\r\n      <option key=\"All\" aria-label=\"All\" value=\"All\">\r\n        All\r\n      </option>\r\n    );\r\n\r\n    const languageItems = QueryEnums.Languages.map((lang) => (\r\n      <option key={lang} value={lang} aria-label={lang}>\r\n        {lang}\r\n      </option>\r\n    ));\r\n\r\n    setOptionItems([allItem, ...languageItems]);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"language-select\">Language</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label=\"Language\"\r\n        className={classes.selectControl}\r\n        value={language}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"language\",\r\n          id: \"language-select\",\r\n        }}\r\n      >\r\n        {optionItems}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  chipList: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function FieldsEntryForm({\r\n  label,\r\n  fields,\r\n  onAddField,\r\n  onRemoveField,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [inputField, setInputField] = useState(\"\");\r\n\r\n  function onSubmitForm(event) {\r\n    event.preventDefault();\r\n\r\n    if (isValidInput()) {\r\n      setInputField(\"\");\r\n      onAddField(inputField);\r\n    }\r\n  }\r\n\r\n  function handleRemoveField(field) {\r\n    const value = field;\r\n    onRemoveField(value);\r\n  }\r\n\r\n  function isValidInput() {\r\n    if (inputField === \"\") {\r\n      return false;\r\n    } else {\r\n      return !fields.includes(inputField);\r\n    }\r\n  }\r\n\r\n  const fieldItems = fields.map((field) => {\r\n    return (\r\n      <li key={field}>\r\n        <Chip\r\n          label={field}\r\n          onDelete={() => handleRemoveField(field)}\r\n          className={classes.chip}\r\n          size=\"small\"\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n          <TextField\r\n            id=\"add-show-field-input\"\r\n            label={label}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"show-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setInputField(e.target.value)}\r\n            placeholder=\"example\"\r\n            value={inputField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={!isValidInput()}\r\n                    aria-label=\"Add to shown fields\"\r\n                    className={classes.button}\r\n                  >\r\n                    <AddCircleOutline />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <ul className={classes.chipList}>{fieldItems}</ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TextField, IconButton, InputAdornment } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function TextFormWithSave({\r\n  label,\r\n  initValue,\r\n  onChange,\r\n  placeholder = \"\",\r\n  variant = \"outlined\",\r\n  ariaLabel = \"\",\r\n  allowBlank = true, // TODO: replace this with validation function\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState(initValue);\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    onChange(value);\r\n  }\r\n\r\n  function isValid() {\r\n    if (value === \"\") {\r\n      return allowBlank && (value !== initValue);\r\n    } else {\r\n      return value !== initValue;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmit}>\r\n      <TextField\r\n        id={`${label}-field`}\r\n        label={label}\r\n        margin=\"dense\"\r\n        variant={variant}\r\n        name={`${label}-field`}\r\n        size=\"small\"\r\n        onChange={(event) => setValue(event.target.value)}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                // disabled={value === initValue}\r\n                disabled={!isValid()}\r\n                aria-label={ariaLabel}\r\n                className={classes.button}\r\n              >\r\n                <SaveIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport {\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function ConditionArgumentForm({\r\n  conditionData,\r\n  onDataChange,\r\n  onDelete,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [operators, setOperators] = useState([]);\r\n  useEffect(() => {\r\n    setOperators(QueryEnums.Operators);\r\n  }, []);\r\n\r\n  function handleOperatorChange(event) {\r\n    const value = event.target.value;\r\n    const operator = operators.find((o) => o.name === value);\r\n    onDataChange(conditionData.id, \"operator\", operator);\r\n  }\r\n\r\n  function onSubmitField(newValue) {\r\n    onDataChange(conditionData.id, \"field\", newValue);\r\n  }\r\n\r\n  function onSubmitValue(newValue) {\r\n    onDataChange(conditionData.id, \"value\", newValue);\r\n  }\r\n\r\n  function handleDeleteCondition() {\r\n    onDelete(conditionData.id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={4}>\r\n        <TextFormWithSave\r\n          label=\"Field\"\r\n          initValue={conditionData.field}\r\n          onChange={onSubmitField}\r\n          ariaLabel=\"Update the condition's field\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={3} md={3} className={classes.operatorGrid}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel htmlFor=\"operator-select\">Operator</InputLabel>\r\n          <Select\r\n            native\r\n            margin=\"dense\"\r\n            label=\"Operator\"\r\n            value={conditionData.operator.name}\r\n            onChange={handleOperatorChange}\r\n            inputProps={{\r\n              name: \"operator\",\r\n              id: \"operator-select\",\r\n            }}\r\n          >\r\n            <option key=\"equals\" value=\"equals\" title=\"Equals\">\r\n              {\"=\"}\r\n            </option>\r\n            <option key=\"notEquals\" value=\"notEquals\" title=\"Not Equals\">\r\n              {\"≠\"}\r\n            </option>\r\n            <option key=\"isLessThan\" value=\"isLessThan\" title=\"Is Less Than\">\r\n              {\"<\"}\r\n            </option>\r\n            <option\r\n              key=\"isLessThanOrEquals\"\r\n              value=\"isLessThanOrEquals\"\r\n              title=\"Is Less Than Or Equals\"\r\n            >\r\n              {\"≤\"}\r\n            </option>\r\n            <option\r\n              key=\"isGreaterThan\"\r\n              value=\"isGreaterThan\"\r\n              title=\"Is Greater Than\"\r\n            >\r\n              {\">\"}\r\n            </option>\r\n            <option\r\n              key=\"isGreaterThanOrEquals\"\r\n              value=\"isGreaterThanOrEquals\"\r\n              title=\"Is Greater Than Or Equals\"\r\n            >\r\n              {\"≥\"}\r\n            </option>\r\n            <option key=\"startsWith\" value=\"startsWith\">\r\n              Starts With\r\n            </option>\r\n            <option key=\"contains\" value=\"contains\">\r\n              Contains\r\n            </option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={8} md={4}>\r\n        <TextFormWithSave\r\n          label=\"Value\"\r\n          initValue={conditionData.value}\r\n          onChange={onSubmitValue}\r\n          ariaLabel=\"Update the condition's value\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={1} md={1}>\r\n        <IconButton\r\n          aria-label=\"Delete this query condition\"\r\n          title=\"Delete this query condition\"\r\n          onClick={handleDeleteCondition}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Paper, Grid, Button } from \"@material-ui/core\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerButtonContainer: {\r\n    textAlign: \"right\",\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  jsonView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  linearProgres: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function QueryResults({ data, isLoading }) {\r\n  const classes = useStyles();\r\n\r\n  function copyDataToClipboard() {\r\n    if (!!data) {\r\n      navigator.clipboard.writeText(JSON.stringify(data, null, 2));\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <h1>Query Results</h1>\r\n        <LinearProgress className={classes.linearProgres} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <h1 className={classes.header1}>Query Results</h1>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.headerButtonContainer}>\r\n          {!!data && (\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={copyDataToClipboard}\r\n              value=\"Copy\"\r\n              title=\"Copy the query results to the clipboard\"\r\n              startIcon={<AssignmentIcon />}\r\n            >\r\n              Copy\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {!!data ? (\r\n        <div className={classes.textView}>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Button, Grid, Link } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  urlBox: {\r\n    marginTop: theme.spacing(1),\r\n    backgroundColor: \"#1F2330\",\r\n    color: \"#fff\",\r\n    fontFamily: \"monospace\",\r\n    padding: theme.spacing(1),\r\n    borderRadius: 4,\r\n    wordWrap: \"anywhere\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  gridItem: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  button: {},\r\n  runButton: {\r\n    width: 120,\r\n  },\r\n  runButtonIcon: {\r\n    marginLeft: -8,\r\n  },\r\n  buttonWide: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  syntax: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  questionMark: {\r\n    color: \"#F8C275\",\r\n  },\r\n  ampersand: {\r\n    color: \"#F8C275\",\r\n  },\r\n  queryDelimiter: {\r\n    color: \"#F8C275\",\r\n  },\r\n  equals: {\r\n    color: \"#E752A1\",\r\n  },\r\n  equalsModifier: {\r\n    color: \"#E752A1\",\r\n  },\r\n  colon: {\r\n    color: \"#E752A1\",\r\n  },\r\n  parentheses: {\r\n    color: \"#50DFFE\",\r\n  },\r\n  comma: {\r\n    color: \"#97EE91\",\r\n  },\r\n}));\r\n\r\nexport default function QueryUrlContainer({ queryUrl, isLoading, onRunQuery }) {\r\n  const classes = useStyles();\r\n\r\n  function copyToClipboardExact() {\r\n    navigator.clipboard.writeText(unescape(queryUrl));\r\n  }\r\n\r\n  function copyToClipboardAnonymous() {\r\n    const anonymousUrl = anonymizeQueryUrl(queryUrl);\r\n    navigator.clipboard.writeText(unescape(anonymousUrl));\r\n  }\r\n\r\n  function anonymizeQueryUrl(url) {\r\n    const regex = new RegExp(\"(/s:)[A-z0-9]+/\");\r\n    return queryUrl.replace(regex, \"/s:example/\");\r\n  }\r\n\r\n  const operatorCharacters = [\"[\", \"]\", \"*\", \"!\", \"<\", \">\", \"^\"];\r\n\r\n  let queryUrlPieces = [];\r\n  \r\n  const unescapedUrl = unescape(queryUrl);\r\n\r\n  let splitAtQueryArray = unescapedUrl.split(\"?\");\r\n\r\n  const preQueryString = splitAtQueryArray[0];\r\n\r\n  queryUrlPieces.push(<span key={preQueryString}>{preQueryString}</span>);\r\n  \r\n  if (splitAtQueryArray.length > 1) {\r\n    queryUrlPieces.push(<span key=\"?\" className={ classes.syntax + \" \" + classes.questionMark }>?</span>);\r\n\r\n    let queryString = splitAtQueryArray[1];\r\n\r\n    let splitAtMod = queryString.split(\"c:\");\r\n\r\n    splitAtMod.forEach((modItem) => {\r\n      if (splitAtMod.indexOf(modItem) !== 0 && !!modItem) {\r\n        queryUrlPieces.push(<span key={uuidv1()} className={ classes.queryDelimiter }>c:</span>);\r\n      }      \r\n      \r\n      let splitAtAmpersand = modItem.split(\"&\");\r\n\r\n      splitAtAmpersand.forEach((amperItem) => {\r\n        if (splitAtAmpersand.indexOf(amperItem) !== 0) {\r\n          queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.ampersand }>&</span>);\r\n        }\r\n\r\n        let splitAtEquals = amperItem.split(\"=\");\r\n\r\n        splitAtEquals.forEach((equalsItem) => {\r\n          if (splitAtEquals.indexOf(equalsItem) !== 0) {\r\n            queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.equals }>=</span>);\r\n          }\r\n\r\n          const firstChar = equalsItem.charAt(0);\r\n          if (operatorCharacters.includes(firstChar)) {\r\n            queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.equalsModifier }>{firstChar}</span>);\r\n            equalsItem = equalsItem.substring(1);\r\n          }\r\n          \r\n          let splitAtColon = equalsItem.split(\":\");\r\n          \r\n          splitAtColon.forEach((colonItem) => {\r\n            if (splitAtColon.indexOf(colonItem) !== 0) {\r\n              queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.colon }>:</span>)\r\n            }\r\n\r\n            let splitAtOpenParen = colonItem.split(\"(\");\r\n\r\n            splitAtOpenParen.forEach((openParenItem) => {\r\n              if (splitAtOpenParen.indexOf(openParenItem) !== 0) {\r\n                queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.parentheses }>(</span>)\r\n              }\r\n\r\n              let splitAtCloseParen = openParenItem.split(\")\");\r\n\r\n              splitAtCloseParen.forEach((closeParenItem) => {\r\n                if (splitAtCloseParen.indexOf(closeParenItem) !== 0) {\r\n                  queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.parentheses }>)</span>)\r\n                }\r\n\r\n                let splitAtUpperComman = closeParenItem.split(\"^\");\r\n\r\n                splitAtUpperComman.forEach((upperCommaItem) => {\r\n                  if (splitAtUpperComman.indexOf(upperCommaItem) !== 0) {\r\n                    queryUrlPieces.push(<span key={uuidv1()}  className={ classes.syntax + \" \" + classes.comma }>^</span>)\r\n                  }\r\n  \r\n                  let splitAtComma = upperCommaItem.split(\",\");\r\n\r\n                  splitAtComma.forEach((commaItem) => {\r\n                    if (splitAtComma.indexOf(commaItem) !== 0) {\r\n                      queryUrlPieces.push(<span key={uuidv1()} className={ classes.syntax + \" \" + classes.comma }>,</span>)\r\n                    }\r\n    \r\n                    if (!!commaItem) {\r\n                      queryUrlPieces.push(<span key={uuidv1()}>{commaItem}</span>);\r\n                    }\r\n                  });\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h1 className={classes.header1}>Query URL</h1>\r\n      <div className={classes.urlBox}>\r\n        {queryUrlPieces}\r\n      </div>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.container}\r\n      >\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={onRunQuery}\r\n            value=\"Run\"\r\n            className={classes.runButton}\r\n            startIcon={\r\n              isLoading ? null : (\r\n                <PlayArrowIcon className={classes.runButtonIcon} />\r\n              )\r\n            }\r\n            title=\"Run the query\"\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Run\"}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardExact}\r\n            value=\"Copy\"\r\n            className={classes.button}\r\n            title=\"Copy the query url to the clipboard\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardAnonymous}\r\n            value=\"Copy Anonymous\"\r\n            className={classes.buttonWide}\r\n            title=\"Copy the query url to the clipboard and replace your service ID with 'example'\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy Anon.\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Link to={queryUrl} href={queryUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              value=\"Open Query\"\r\n              className={classes.buttonWide}\r\n              title=\"Open the query URL in a new tab\"\r\n              startIcon={<OpenInNewIcon />}\r\n            >\r\n              Open\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport default function BinarySelector({\r\n  value,\r\n  label,\r\n  optionA,\r\n  optionB,\r\n  onChange,\r\n  className = null,\r\n}) {\r\n  \r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    onChange(event.target.value);\r\n  }\r\n  \r\n  return (\r\n    <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\r\n      <InputLabel htmlFor=\"binary-select\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label={label}\r\n        className={className}\r\n        value={value}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"binary-select\",\r\n          id: \"binary-select\",\r\n        }}\r\n      >\r\n        <option aria-label={optionA} value={optionA.toLowerCase()}>\r\n          {optionA}\r\n        </option>\r\n        <option aria-label={optionB} value={optionB.toLowerCase()}>\r\n          {optionB}\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport default function BooleanSelector({\r\n  value,\r\n  label,\r\n  trueLabel = \"Yes\",\r\n  falseLabel = \"No\",\r\n  onChange,\r\n  className = null,\r\n}) {\r\n  return (\r\n    <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\r\n      <InputLabel htmlFor=\"boolean-select\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label={label}\r\n        className={className}\r\n        value={value}\r\n        onChange={(event) => onChange(event.target.value)}\r\n        inputProps={{\r\n          name: \"boolean-select\",\r\n          id: \"boolean-select\",\r\n        }}\r\n      >\r\n        <option aria-label={trueLabel} value={true}>\r\n          {trueLabel}\r\n        </option>\r\n        <option aria-label={falseLabel} value={false}>\r\n          {falseLabel}\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { Grid, IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginBottom: -4,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n  },\r\n  header3: {\r\n    margin: 0,\r\n    fontSize: \"1.1em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginBottom: 2,\r\n  },\r\n  headerContainer: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  headerContainerCollapsed: {\r\n    paddingBottom: theme.spacing(1),\r\n    borderBottom: \"1px solid #919cb950\",\r\n  },\r\n  toggleContainer: {\r\n    textAlign: \"right\",\r\n    borderBottom: \"1px solid #919cb950\",\r\n  },\r\n  toggleButton: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  toggle: {\r\n    transition: \"transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n  },\r\n  toggleCollapsed: {\r\n    transform: \"rotateZ(180deg)\",\r\n  },\r\n  content: {\r\n    width: \"100%\",\r\n    display: \"none\",\r\n  },\r\n  contentOpen: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Collapsible({\r\n  headerLevel,\r\n  headerText,\r\n  defaultExtended,\r\n  children,\r\n  id,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  if (typeof headerLevel !== \"number\" || headerLevel < 0 || headerLevel > 6) {\r\n    throw new Error(\"headerLevel must be an integer between 1 and 6\");\r\n  }\r\n\r\n  const headerEl = React.createElement(\r\n    `h${headerLevel}`,\r\n    { className: classes[`header${headerLevel}`] },\r\n    headerText\r\n  );\r\n\r\n  const [extended, setExtended] = useState(defaultExtended);\r\n\r\n  function handleToggle() {\r\n    setExtended(!extended);\r\n  }\r\n\r\n  function getToggleLabel() {\r\n    return extended ? \"Collapse Section\" : \"Expand Section\";\r\n  }\r\n\r\n  function getToggleClassName() {\r\n    return extended\r\n      ? classes.toggle\r\n      : `${classes.toggle} ${classes.toggleCollapsed}`;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.headerContainer}\r\n      >\r\n        <Grid item xs={10} className={classes.headerContainerCollapsed}>\r\n          {headerEl}\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.toggleContainer}>\r\n          <IconButton\r\n            aria-label={getToggleLabel}\r\n            onClick={handleToggle}\r\n            className={classes.toggleButton}\r\n          >\r\n            <ExpandMoreIcon className={`${getToggleClassName()}`} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div\r\n        id={`collapsible-content-${id}`}\r\n        className={extended ? classes.contentOpen : classes.content}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst QueryJoin = (parentJoinId = null) => {\r\n  return {\r\n    id: uuidv4(),\r\n    parentId: parentJoinId,\r\n    collection: \"\",\r\n    injectAt: \"\",\r\n    isOuterJoin: false,\r\n    isList: false,\r\n    onField: \"\",\r\n    toField: \"\",\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    terms: [],\r\n    joins: [],\r\n  };\r\n};\r\n\r\nexport default QueryJoin;\r\n","import QueryEnums from \"./QueryEnums\";\r\n\r\nconst QueryOperator = (operatorName = \"equals\") => {\r\n  const operator = QueryEnums.Operators.find((op) => op.name === operatorName);\r\n\r\n  if (!operator) {\r\n    return new Error(`Operator named '${operatorName} not found`);\r\n  }\r\n\r\n  const name = operatorName;\r\n  const display = operator.display;\r\n  const title = operator.title;\r\n  const value = operator.value;\r\n\r\n  return {\r\n    name,\r\n    display,\r\n    title,\r\n    value,\r\n  };\r\n};\r\n\r\nexport default QueryOperator;\r\n","import QueryOperator from \"./QueryOperator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst QueryCondition = (defaultOperatorName = \"equals\") => {\r\n  return {\r\n    id: uuidv4(),\r\n    field: \"\",\r\n    value: \"\",\r\n    operator: QueryOperator(defaultOperatorName),\r\n    // isValid: (field, operator, value) => !!field && !!operator && !!value,\r\n    // toString: (field, operator, value) => `${field}${operator?.value}${value}`,\r\n  };\r\n};\r\n\r\nexport default QueryCondition;\r\n","import React from \"react\";\r\nimport { Paper, Grid, Button } from \"@material-ui/core\";\r\nimport ForwardIcon from \"@material-ui/icons/Forward\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CollectionSelector from \"./CollectionSelector\";\r\nimport FieldsEntryForm from \"./FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./ConditionArgumentForm\";\r\nimport BinarySelector from \"../shared/BinarySelector\";\r\nimport BooleanSelector from \"../shared/BooleanSelector\";\r\nimport Collapsible from \"../shared/Collapsible\";\r\nimport QueryJoin from \"../../planetside/QueryJoin\";\r\nimport QueryCondition from \"../../planetside/QueryCondition\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#919cb930\",\r\n    width: \"100%\",\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function JoinForm({\r\n  joinData,\r\n  depth,\r\n  onDelete,\r\n  onInfoChange,\r\n  onAddArrayItem,\r\n  onRemoveArrayItem,\r\n  onChangeArrayItemWithId,\r\n  onRemoveArrayItemWithId,\r\n}) {\r\n  const classes = useStyles();\r\n  const maxDepth = 4;\r\n\r\n  function handleDeleteJoin() {\r\n    onDelete(joinData.id);\r\n  }\r\n\r\n  function handleChangeInfo(propertyName, value) {\r\n    let ancestry = [joinData.id];\r\n    onInfoChange(joinData.id, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleChildChangeInfo(targetId, propertyName, value, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onInfoChange(targetId, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleAddArrayItem(arrayName, item) {\r\n    let ancestry = [joinData.id];\r\n    onAddArrayItem(joinData.id, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChildAddArrayItem(targetId, arrayName, item, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onAddArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleRemoveArrayItem(arrayName, item) {\r\n    let ancestry = [joinData.id];\r\n    onRemoveArrayItem(joinData.id, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChildRemoveArrayItem(targetId, arrayName, item, ancestry) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onRemoveArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChangeArrayItemWithId(arrayName, itemId, propertyName, value) {\r\n    let ancestry = [joinData.id];\r\n    onChangeArrayItemWithId(\r\n      joinData.id,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleChildChangeArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onChangeArrayItemWithId(\r\n      targetId,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleRemoveArrayItemWithId(arrayName, itemId) {\r\n    let ancestry = [joinData.id];\r\n    onRemoveArrayItemWithId(joinData.id, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  function handleChildRemoveArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    ancestry\r\n  ) {\r\n    ancestry = [joinData.id, ...ancestry];\r\n    onRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  function handleAddFilterField(value) {\r\n    handleAddArrayItem(\"filterFields\", value);\r\n  }\r\n\r\n  function handleRemoveFilterField(value) {\r\n    handleRemoveArrayItem(\"filterFields\", value);\r\n  }\r\n\r\n  function handleAddJoinTerm() {\r\n    let newTerm = QueryCondition();\r\n    handleAddArrayItem(\"terms\", newTerm);\r\n  }\r\n\r\n  function handleRemoveJoinTerm(id) {\r\n    handleRemoveArrayItemWithId(\"terms\", id);\r\n  }\r\n\r\n  function handleAddSubJoin() {\r\n    let newJoin = QueryJoin();\r\n    handleAddArrayItem(\"joins\", newJoin);\r\n  }\r\n\r\n  function handleRemoveSubJoin(id) {\r\n    handleRemoveArrayItemWithId(\"joins\", id);\r\n  }\r\n\r\n  const handleChangeCollection = (value) =>\r\n    handleChangeInfo(\"collection\", value);\r\n\r\n  const handleChangeInjectAt = (value) => handleChangeInfo(\"injectAt\", value);\r\n\r\n  const handleChangeOnField = (value) => handleChangeInfo(\"onField\", value);\r\n\r\n  const handleChangeToField = (value) => handleChangeInfo(\"toField\", value);\r\n\r\n  const handleChangeJoinType = (value) =>\r\n    handleChangeInfo(\"isOuterJoin\", value);\r\n\r\n  const handleChangeIsList = (value) => handleChangeInfo(\"isList\", value);\r\n\r\n  const handleChangeFilterType = (value) =>\r\n    handleChangeInfo(\"filterType\", value);\r\n\r\n  const handleChangeTermInfo = (id, propertyName, value) =>\r\n    handleChangeArrayItemWithId(\"terms\", id, propertyName, value);\r\n\r\n  const rootStyle = {\r\n    borderWidth: depth === 0 ? 1 : \"2px 0 0 1px\",\r\n    marginLeft: depth === 0 ? 0 : 8,\r\n  };\r\n\r\n  const showAddSubJoin = depth < maxDepth;\r\n  const disableAddSubJoin = depth === maxDepth || !joinData.collection;\r\n\r\n  return (\r\n    <Paper className={classes.paper} style={{ ...rootStyle }}>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        <Grid item xs={12} sm={8}>\r\n          <CollectionSelector\r\n            collection={joinData.collection}\r\n            onChange={handleChangeCollection}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextFormWithSave\r\n            label=\"Inject At\"\r\n            initValue={joinData.injectAt}\r\n            onChange={handleChangeInjectAt}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item xs={5}>\r\n          <TextFormWithSave\r\n            label=\"On Field\"\r\n            initValue={joinData.onField}\r\n            onChange={handleChangeOnField}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ textAlign: \"center\" }}>\r\n          <ForwardIcon style={{ marginTop: 8 }} />\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <TextFormWithSave\r\n            label=\"To Field\"\r\n            initValue={joinData.toField}\r\n            onChange={handleChangeToField}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Join Type\"\r\n            value={joinData.isOuterJoin}\r\n            trueLabel=\"Outer\"\r\n            falseLabel=\"Inner\"\r\n            onChange={handleChangeJoinType}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Is List\"\r\n            value={joinData.isList}\r\n            onChange={handleChangeIsList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Collapsible\r\n        id=\"join-conditions\"\r\n        headerLevel={3}\r\n        headerText=\"Join Conditions\"\r\n        defaultExtended={true}\r\n      >\r\n        {joinData.terms.length > 0 && (\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            className={classes.gridRow}\r\n          >\r\n            {joinData.terms.map((condition) => {\r\n              return (\r\n                <ConditionArgumentForm\r\n                  key={condition.id}\r\n                  conditionData={condition}\r\n                  onDataChange={handleChangeTermInfo}\r\n                  onDelete={handleRemoveJoinTerm}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<AddIcon fontSize=\"small\" />}\r\n            size=\"small\"\r\n            onClick={handleAddJoinTerm}\r\n            className={classes.textButton}\r\n          >\r\n            New Condition\r\n          </Button>\r\n        </Grid>\r\n      </Collapsible>\r\n\r\n      <Collapsible\r\n        id=\"field-filters\"\r\n        headerLevel={3}\r\n        headerText=\"Filter Displayed Fields\"\r\n        defaultExtended={true}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={0}\r\n          className={classes.gridRow}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} className={classes.inlineSelectItem}>\r\n            <BinarySelector\r\n              label=\"Filter Type\"\r\n              onChange={handleChangeFilterType}\r\n              optionA=\"Show\"\r\n              optionB=\"Hide\"\r\n              value={joinData.filterType}\r\n              className={classes.filterSelect}\r\n            />\r\n          </Grid>\r\n          <FieldsEntryForm\r\n            label=\"Add Field\"\r\n            fields={joinData.filterFields}\r\n            onAddField={handleAddFilterField}\r\n            onRemoveField={handleRemoveFilterField}\r\n          />\r\n        </Grid>\r\n      </Collapsible>\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        className={classes.footer}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n        >\r\n          {showAddSubJoin && (\r\n            <Grid item>\r\n              <Button\r\n                disabled={disableAddSubJoin}\r\n                color=\"primary\"\r\n                startIcon={<AddIcon fontSize=\"small\" />}\r\n                size=\"small\"\r\n                onClick={handleAddSubJoin}\r\n              >\r\n                Sub Join\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          style={{ textAlign: \"right\" }}\r\n        >\r\n          <Grid item md={6}>\r\n            <Button\r\n              color=\"default\"\r\n              startIcon={<DeleteIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              onClick={handleDeleteJoin}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {joinData.joins.length > 0 && (\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          className={classes.gridRow}\r\n        >\r\n          {joinData.joins.map((join) => {\r\n            return (\r\n              <JoinForm\r\n                key={join.id}\r\n                joinData={join}\r\n                depth={depth + 1}\r\n                onDelete={handleRemoveSubJoin}\r\n                onInfoChange={handleChildChangeInfo}\r\n                onAddArrayItem={handleChildAddArrayItem}\r\n                onRemoveArrayItem={handleChildRemoveArrayItem}\r\n                onChangeArrayItemWithId={handleChildChangeArrayItemWithId}\r\n                onRemoveArrayItemWithId={handleChildRemoveArrayItemWithId}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport QueryJoin from \"../../planetside/QueryJoin\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function JoinsContainer({\r\n  joinsData,\r\n  onAddJoin,\r\n  onDeleteJoin,\r\n  onInfoChange,\r\n  onAddArrayItem,\r\n  onRemoveArrayItem,\r\n  onChangeArrayItemWithId,\r\n  onRemoveArrayItemWithId,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function handleAddJoin() {\r\n    const newJoin = QueryJoin();\r\n    onAddJoin(newJoin);\r\n  }\r\n\r\n  function handleDeleteJoin(id) {\r\n    onDeleteJoin(id);\r\n  }\r\n\r\n  function handleChangeInfo(targetId, propertyName, value, ancestry) {\r\n    onInfoChange(targetId, propertyName, value, ancestry);\r\n  }\r\n\r\n  function handleAddArrayItem(targetId, arrayName, item, ancestry) {\r\n    onAddArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleRemoveArrayItem(targetId, arrayName, item, ancestry) {\r\n    onRemoveArrayItem(targetId, arrayName, item, ancestry);\r\n  }\r\n\r\n  function handleChangeArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    onChangeArrayItemWithId(\r\n      targetId,\r\n      arrayName,\r\n      itemId,\r\n      propertyName,\r\n      value,\r\n      ancestry\r\n    );\r\n  }\r\n\r\n  function handleRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry) {\r\n    onRemoveArrayItemWithId(targetId, arrayName, itemId, ancestry);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.gridRow}\r\n      >\r\n        {joinsData.map((join) => {\r\n          return (\r\n            <JoinForm\r\n              key={join.id}\r\n              joinData={join}\r\n              depth={0}\r\n              onDelete={handleDeleteJoin}\r\n              onInfoChange={handleChangeInfo}\r\n              onAddArrayItem={handleAddArrayItem}\r\n              onRemoveArrayItem={handleRemoveArrayItem}\r\n              onChangeArrayItemWithId={handleChangeArrayItemWithId}\r\n              onRemoveArrayItemWithId={handleRemoveArrayItemWithId}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Button\r\n          color=\"primary\"\r\n          startIcon={<AddIcon fontSize=\"small\" />}\r\n          size=\"small\"\r\n          onClick={handleAddJoin}\r\n          className={classes.textButton}\r\n        >\r\n          New Join\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const userPreferenceStore = (() => {\r\n  const serviceIdKey = \"DaybreakGamesKey\";\r\n  const saveServiceId = (id) => localStorage.setItem(serviceIdKey, id);\r\n  const getServiceId = () => localStorage.getItem(serviceIdKey);\r\n  const removeServiceId = () => localStorage.removeItem(serviceIdKey);\r\n\r\n  const colorThemeKey = \"ColorTheme\";\r\n  const saveColorTheme = (theme) => localStorage.setItem(colorThemeKey, theme);\r\n  const getColorTheme = () => localStorage.getItem(colorThemeKey);\r\n  const removeColorTheme = () => localStorage.removeItem(colorThemeKey);\r\n\r\n  return {\r\n    saveServiceId,\r\n    getServiceId,\r\n    removeServiceId,\r\n    saveColorTheme,\r\n    getColorTheme,\r\n    removeColorTheme,\r\n  };\r\n})();\r\n\r\nexport default userPreferenceStore;\r\n","import React, { useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport userPreferenceStore from \"../../persistence/userPreferencesStore\";\r\nimport \"../../styles/ThemeToggle.css\";\r\n\r\nexport default function ThemeToggle({ theme, onChangeTheme }) {\r\n  function toggleTheme() {\r\n    if (theme === \"dark\") {\r\n      setLightTheme();\r\n    } else {\r\n      setDarkTheme();\r\n    }\r\n  }\r\n\r\n  const [twirl, setTwirl] = useState(false);\r\n\r\n  function setLightTheme() {\r\n    userPreferenceStore.saveColorTheme(\"light\");\r\n    setTwirl(true);\r\n    onChangeTheme(\"light\");\r\n  }\r\n\r\n  function setDarkTheme() {\r\n    userPreferenceStore.saveColorTheme(\"dark\");\r\n    setTwirl(true);\r\n    onChangeTheme(\"dark\");\r\n  }\r\n\r\n  const isDarkTheme = theme === \"dark\";\r\n\r\n  let iconClass = isDarkTheme ? \"toggle-dark\" : \"toggle-light\";\r\n  if (twirl) {\r\n    iconClass = `${iconClass} toggle-twirl`;\r\n  }\r\n\r\n  const icon = isDarkTheme ? (\r\n    <Brightness7Icon\r\n      className={iconClass}\r\n      onAnimationEnd={(event) => {\r\n        if (event.animationName === \"twirl\") {\r\n          setTwirl(false);\r\n        }\r\n      }}\r\n    />\r\n  ) : (\r\n    <Brightness4Icon\r\n      className={iconClass}\r\n      onAnimationEnd={(event) => {\r\n        if (event.animationName === \"twirl\") {\r\n          setTwirl(false);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"Toggle light/dark theme\"\r\n      title=\"Toggle light/dark theme\"\r\n      onClick={toggleTheme}\r\n    >\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport \"../../styles/ThemeToggle.css\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function GitHubLink() {\r\n  const theme = useTheme();\r\n\r\n  const gitHubUrl = \"https://github.com/eating-coleslaw/ps2-visual-query\";\r\n\r\n  const [isDarkTheme, setIsDarkTheme] = useState(theme.palette.type === \"dark\");\r\n  useEffect(() => {\r\n    setIsDarkTheme(theme.palette.type === \"dark\");\r\n  }, [theme.palette.type]);\r\n\r\n  let color = isDarkTheme ? \"rgba(0, 0, 0, 0.87)\" : \"#fff\";\r\n\r\n  return (\r\n    <Link to={gitHubUrl} href={gitHubUrl} target=\"_blank\" rel=\"noreferrer\">\r\n      <IconButton\r\n        aria-label=\"Go to GitHub repository\"\r\n        title=\"Go to GitHub repository\"\r\n      >\r\n        <GitHubIcon style={{ color: color }} />\r\n      </IconButton>\r\n    </Link>\r\n  );\r\n}\r\n","import { openDB } from \"idb\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst appDbName = \"ps2QueryDb\";\r\nconst queryStoreName = \"queries\";\r\n\r\nconst dbPromise = openDB(appDbName, 1, {\r\n  upgrade(db, oldVersion) {\r\n    if (!isSupported()) {\r\n      return;\r\n    }\r\n\r\n    switch (oldVersion) {\r\n      case 0:\r\n        const queryStore = db.createObjectStore(queryStoreName, {\r\n          keyPath: \"id\",\r\n          autoIncrement: false,\r\n        });\r\n\r\n        queryStore.createIndex(\"isFavorite\", \"isFavorite\", {\r\n          unique: false,\r\n        });\r\n\r\n        queryStore.createIndex(\"dateLastModified\", \"dateLastModified\");\r\n\r\n        queryStore.createIndex(\"name\", \"name\");\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n});\r\n\r\nexport function isSupported() {\r\n  if (!(\"indexedDB\" in window)) {\r\n    console.log(\"This browser doesn't support IndexedDB\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport async function upsertQuery(query) {\r\n  try {\r\n    if (query.id === null) {\r\n      return await addQuery(query);\r\n    } else {\r\n      return await updateQuery(query);\r\n    }\r\n  } catch (error) {\r\n    throw new Error(\"Error upsert query\");\r\n  }\r\n}\r\n\r\nexport async function addQuery(query) {\r\n  try {\r\n    if (query.id !== null) {\r\n      throw new Error(`Query ${query.id} violates primary key contraint`);\r\n    }\r\n\r\n    query.id = uuidv4();\r\n\r\n    const nowUTC = Date.now();\r\n\r\n    query.dateCreated = nowUTC;\r\n    query.dateLastModified = nowUTC;\r\n    query.dateLastOpened = nowUTC;\r\n\r\n    const item = JSON.parse(JSON.stringify(query));\r\n\r\n    const db = await dbPromise;\r\n    const tx = db.transaction(queryStoreName, \"readwrite\");\r\n    const store = tx.objectStore(queryStoreName);\r\n    const result = await store.add(item);\r\n    await tx.done;\r\n    return result;\r\n  } catch (error) {\r\n    console.warn(\"Error adding query to database:\", error);\r\n  }\r\n}\r\n\r\nexport async function updateQuery(query) {\r\n  try {\r\n    if (query.id === null) {\r\n      throw new Error(`Cannot update query with a null ID`);\r\n    }\r\n\r\n    const nowUTC = Date.now();\r\n    query.dateLastModified = nowUTC;\r\n    query.dateLastOpened = nowUTC;\r\n\r\n    const db = await dbPromise;\r\n    const tx = db.transaction(queryStoreName, \"readwrite\");\r\n    const store = tx.objectStore(queryStoreName);\r\n\r\n    const item = JSON.parse(JSON.stringify(query));\r\n    const result = await store.put(item);\r\n\r\n    await tx.done;\r\n    return result;\r\n  } catch (error) {\r\n    console.warn(\"Error adding query to database:\", error);\r\n  }\r\n}\r\n\r\nexport async function getQuery(id) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(queryStoreName, \"readwrite\");\r\n  const store = tx.objectStore(queryStoreName);\r\n  const query = await store.get(id);\r\n  await tx.done;\r\n  return query;\r\n}\r\n\r\nexport async function deleteQuery(id) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(queryStoreName, \"readwrite\");\r\n  const store = tx.objectStore(queryStoreName);\r\n  const result = await store.delete(id);\r\n  await tx.done;\r\n  return result;\r\n}\r\n\r\nexport async function getAllQueries() {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction(queryStoreName, \"readwrite\");\r\n  const store = tx.objectStore(queryStoreName);\r\n  const queries = await store.getAll();\r\n  await tx.done;\r\n  return queries;\r\n}\r\n\r\nexport async function getFavorites() {\r\n  const db = await dbPromise;\r\n  const results = await db.getAllFromIndex(queryStoreName, \"favorites\", true);\r\n  return results;\r\n}\r\n\r\nexport async function getAllSortedByName() {\r\n  const db = await dbPromise;\r\n  const results = await db.getAllFromIndex(queryStoreName, \"name\");\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport async function getLastModified(take = 5, start = 0) {\r\n  const db = await dbPromise;\r\n  const results = await db.getAllFromIndex(queryStoreName, \"dateLastModified\");\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n\r\n  if (results.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const count = results.length;\r\n\r\n  const startIndex = count > take ? count - take : 0;\r\n  const endIndex = count;\r\n\r\n  return results.slice(startIndex, endIndex).sort((a, b) => {\r\n    return b.dateLastModified - a.dateLastModified;\r\n  });\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/MenuDrawer.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    zIndex: 1300,\r\n    inset: 0,\r\n    transition: \"none\",\r\n  },\r\n  backdrop: {\r\n    opacity: 1,\r\n    transition: \"opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    zIndex: -1,\r\n    position: \"fixed\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    top: 0,\r\n    flex: \"1 0 auto\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    outline: 0,\r\n    zIndex: 1200,\r\n    position: \"fixed\",\r\n    overflowY: \"auto\",\r\n    flexDirection: \"column\",\r\n    left: 0,\r\n    right: \"auto\",\r\n    borderRadius: 0,\r\n    width: 300,\r\n    transform: \"translateX(-300px)\",\r\n    transition: \"transform 250ms cubic-bezier(.18,.89,.33,1) 0ms\",\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MenuDrawer({ open, children, onClose, ...props }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const menuPaper = document.querySelector(\"#menu-drawer-paper\");\r\n    const backdrop = document.querySelector(\"#menu-drawer-backdrop\");\r\n\r\n    function handleBackdropClick(event) {\r\n      if (event.target !== event.currentTarget) {\r\n        return;\r\n      }\r\n\r\n      if (onClose) {\r\n        menuPaper.classList.toggle(\"menu-drawer-transition\");\r\n        onClose(\"backdropClick\");\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n      if (event.key !== \"Escape\") {\r\n        return;\r\n      }\r\n\r\n      // Swallow the event, in case someone is listening for the escape key on the body.\r\n      event.stopPropagation();\r\n\r\n      if (onClose) {\r\n        menuPaper.classList.toggle(\"menu-drawer-transition\");\r\n        onClose(\"escapeKeyDown\");\r\n      }\r\n    }\r\n\r\n    if (open) {\r\n      menuPaper.classList.toggle(\"menu-drawer-transition\");\r\n\r\n      // Prevent background scrolling when menu is open\r\n      document.body.style.overflowY = \"hidden\";\r\n\r\n      backdrop.addEventListener(\"click\", handleBackdropClick);\r\n      document.addEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      menuPaper?.classList.toggle(\"menu-drawer-transition\");\r\n\r\n      document.body.style.overflowY = \"\";\r\n\r\n      backdrop?.removeEventListener(\"click\", handleBackdropClick);\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [open, onClose]);\r\n\r\n  if (!open) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div id=\"menu-drawer-backdrop\" className={classes.backdrop}></div>\r\n      <Paper\r\n        id=\"menu-drawer-paper\"\r\n        className={classes.paper}\r\n        style={{ transform: \"translateX(-300px)\" }}\r\n      >\r\n        {children}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { getAllSortedByName } from \"../../persistence/queryStore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  listbox: {\r\n    margin: 0,\r\n    padding: \"8px 0\",\r\n    overflow: \"auto\",\r\n    listStyle: \"none\",\r\n    maxHeight: \"40vh\",\r\n    border: \"1px solid #414152\",\r\n    boxSizing: \"border-box\",\r\n    lineHeight: 1.25,\r\n  },\r\n}));\r\n\r\nexport default function QuerySelector({ onSelectQuery }) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const queries = await getAllSortedByName();\r\n\r\n        if (!!queries) {\r\n          setOptions([]);\r\n        }\r\n\r\n        if (active) {\r\n          setOptions(queries);\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Error loading queries:\", error);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"query-selector\"\r\n      className={classes.root}\r\n      open={open}\r\n      onChange={(event, newValue) => onSelectQuery(newValue.id)}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      ListboxProps={{ className: `${classes.listbox}` }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Query Search\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { isSupported, getLastModified } from \"../../persistence/queryStore\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { IconButton, ListSubheader } from \"@material-ui/core\";\r\nimport MenuDrawer from \"./MenuDrawer\";\r\nimport QuerySelector from \"./QuerySelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  menuButtonContainer: {\r\n    maxWidth: 20,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  divider: {\r\n    margin: \"8px 0\",\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n  },\r\n  recentListItem: {\r\n    padding: \"0 0 0 8px\",\r\n  },\r\n  subHeader: {\r\n    color: theme.palette.secondary.main,\r\n    lineHeight: 2,\r\n    padding: \"8px 0 0 0\",\r\n    fontSize: \"0.875rem\",\r\n    boxSizing: \"border-box\",\r\n    fontWeight: 500,\r\n    margin: \"0 0 4px 0\",\r\n  },\r\n  listSubheader: {\r\n    color: theme.palette.secondary.main,\r\n    lineHeight: 2,\r\n    padding: \"8px 0 0 0\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MenuDrawerContainer({ onLoadQuery, ...props }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [isStoreSupported, setIsStoreSupported] = useState(false);\r\n  useEffect(() => {\r\n    setIsStoreSupported(isSupported());\r\n  }, []);\r\n\r\n  const [isDarkTheme, setIsDarkTheme] = useState(theme.palette.type === \"dark\");\r\n  useEffect(() => {\r\n    setIsDarkTheme(theme.palette.type === \"dark\");\r\n  }, [theme.palette.type]);\r\n\r\n  let color = isDarkTheme ? \"rgba(0, 0, 0, 0.87)\" : \"#fff\";\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  function handleMenuClicked(event) {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    toggleDrawer(true);\r\n  }\r\n\r\n  function toggleDrawer(state) {\r\n    setIsOpen(state);\r\n  }\r\n\r\n  const [recentQueryItems, setRecentQueryItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    async function getRecentlyModified() {\r\n      try {\r\n        return await getLastModified(10);\r\n      } catch (error) {\r\n        console.warn(\r\n          \"Error getting recently modified queries:\",\r\n          getRecentlyModified\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    function handleLoadQuery(id) {\r\n      onLoadQuery(id);\r\n      setIsOpen(false);\r\n    }\r\n\r\n    if (isOpen && !isLoading) {\r\n      setIsLoading(true);\r\n\r\n      getRecentlyModified().then((recentQueries) => {\r\n        if (!!recentQueries && recentQueries.length > 0) {\r\n          const listItems = recentQueries.map((query) => {\r\n            const timestamp = new Date(query.dateLastModified).toLocaleString();\r\n            const subText = `Modified: ${timestamp}`;\r\n\r\n            return (\r\n              <ListItem\r\n                button\r\n                key={query.id}\r\n                onClick={() => handleLoadQuery(query.id)}\r\n                className={classes.recentListItem}\r\n              >\r\n                <ListItemText\r\n                  primary={query.name}\r\n                  primaryTypographyProps={{ variant: \"body2\" }}\r\n                  secondary={subText}\r\n                />\r\n              </ListItem>\r\n            );\r\n          });\r\n\r\n          setRecentQueryItems(listItems);\r\n        }\r\n\r\n        setIsLoading(false);\r\n      });\r\n\r\n      setIsLoading(false);\r\n    }\r\n\r\n    return () => {\r\n      setIsLoading(false);\r\n    };\r\n  }, [isOpen, isLoading, onLoadQuery, classes.recentListItem]);\r\n\r\n  function handleSelectQuery(id) {\r\n    onLoadQuery(id);\r\n    setIsOpen(false);\r\n  }\r\n\r\n  if (!isStoreSupported) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={1} className={classes.menuButtonContainer}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          aria-label=\"Menu\"\r\n          className={classes.button}\r\n          onClick={handleMenuClicked}\r\n        >\r\n          <MenuIcon style={{ color: color }} />\r\n        </IconButton>\r\n      </Grid>\r\n\r\n      <MenuDrawer open={isOpen} onClose={() => toggleDrawer(false)}>\r\n        <h1 className={classes.header1}>PS2 Query Editor</h1>\r\n\r\n        <Divider className={classes.divider} />\r\n\r\n        <h2 className={classes.subHeader}>Open a Query</h2>\r\n        <QuerySelector onSelectQuery={handleSelectQuery} />\r\n\r\n        <List\r\n          className={classes.list}\r\n          subheader={\r\n            <ListSubheader\r\n              component=\"div\"\r\n              id=\"recent-queries-subheader\"\r\n              className={classes.listSubheader}\r\n            >\r\n              Recent Queries\r\n            </ListSubheader>\r\n          }\r\n        >\r\n          {recentQueryItems}\r\n        </List>\r\n        <Divider />\r\n      </MenuDrawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ThemeToggle from \"./shared/ThemeToggle\";\r\nimport GitHubLink from \"./shared/GitHubLink\";\r\nimport MenuDrawerContainer from \"./menu/MenuDrawerContainer\";\r\n\r\nexport default function StaticAppBar({ onMenuClicked, ...props }) {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar variant=\"dense\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item container xs={8} sm={6} alignItems=\"center\">\r\n            <MenuDrawerContainer {...props} />\r\n\r\n            <Grid item xs={10}>\r\n              <Typography variant=\"h6\">PS2 Query Editor</Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={6} container alignItems=\"center\">\r\n            <Grid item container xs={12} justifyContent=\"flex-end\">\r\n              <GitHubLink />\r\n              <ThemeToggle {...props} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","const QueryTree = () => {\r\n  return {\r\n    treeField: \"\",\r\n    groupPrefix: \"\",\r\n    startField: \"\",\r\n    isList: false,\r\n  };\r\n};\r\n\r\nexport default QueryTree;\r\n","import QueryTree from \"./QueryTree\";\r\n\r\nconst QueryConfig = (\r\n  defaultCollection = \"character\",\r\n  defaultNamespace = \"ps2:v2\"\r\n) => {\r\n  return {\r\n    namespace: defaultNamespace,\r\n    collection: defaultCollection,\r\n    language: \"All\",\r\n    limit: 0,\r\n    conditions: [],\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    resolves: [],\r\n    joins: [],\r\n    tree: QueryTree(),\r\n    start: null,\r\n    sortFields: [],\r\n    sortDirection: -1,\r\n    // Persistence Properties\r\n    id: null,\r\n    name: \"\",\r\n    dateCreated: null,\r\n    dateLastModified: null,\r\n    dateLastOpened: null,\r\n    isFavorite: false,\r\n  };\r\n};\r\n\r\nexport default QueryConfig;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextFormWithSave from \"../shared/TextFormWithSave\";\r\nimport BooleanSelector from \"../shared/BooleanSelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TreeForm({ tree, onChange }) {\r\n  const classes = useStyles();\r\n\r\n  function handleChangeTreeField(value) {\r\n    onChange(\"treeField\", value);\r\n  }\r\n\r\n  function handleChangeStartField(value) {\r\n    onChange(\"startField\", value);\r\n  }\r\n\r\n  function handleChangePrefix(value) {\r\n    onChange(\"groupPrefix\", value);\r\n  }\r\n\r\n  function handleChangeIsList(value) {\r\n    onChange(\"isList\", value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item sm={12} md={6}>\r\n          <TextFormWithSave\r\n            label=\"Tree Field\"\r\n            initValue={tree.treeField}\r\n            onChange={handleChangeTreeField}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item sm={12} md={6}>\r\n          <TextFormWithSave\r\n            label=\"Start Field\"\r\n            initValue={tree.startField}\r\n            onChange={handleChangeStartField}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        className={classes.gridRow}\r\n      >\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <BooleanSelector\r\n            label=\"Is List\"\r\n            initValue={tree.isList}\r\n            onChange={handleChangeIsList}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={8}>\r\n          <TextFormWithSave\r\n            label=\"Group Prefix\"\r\n            initValue={tree.groupPrefix}\r\n            onChange={handleChangePrefix}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nexport default function QueryMenu({\r\n  query,\r\n  onClickSaveNew,\r\n  onClickSave,\r\n  onClickSaveAs,\r\n  onClickNewQuery,\r\n  onClickDelete,\r\n  onClickRename,\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const [isNewQuery, setIsNewQuery] = useState(query.id === null);\r\n  useEffect(() => {\r\n    setIsNewQuery(query.id === null);\r\n  }, [query.id]);\r\n\r\n  function handleIconClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleCloseMenu() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleClickSaveNew() {\r\n    handleCloseMenu();\r\n    onClickSaveNew();\r\n  }\r\n\r\n  function handleClickSaveAs() {\r\n    handleCloseMenu();\r\n    onClickSaveAs();\r\n  }\r\n\r\n  function handleClickNewQuery() {\r\n    handleCloseMenu();\r\n    onClickNewQuery();\r\n  }\r\n\r\n  function handleClickDelete() {\r\n    handleCloseMenu();\r\n    onClickDelete();\r\n  }\r\n\r\n  function handleClickRename() {\r\n    handleCloseMenu();\r\n    onClickRename();\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      xs={5}\r\n      sm={5}\r\n      md={5}\r\n      justifyContent=\"flex-end\"\r\n      alignItems=\"center\"\r\n      style={{ textAlign: \"right\" }}\r\n    >\r\n      {isNewQuery && (\r\n        <React.Fragment>\r\n          <Button\r\n            onClick={handleClickSaveNew}\r\n            style={{ color: theme.palette.primary.main }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </React.Fragment>\r\n      )}\r\n      {!isNewQuery && (\r\n        <React.Fragment>\r\n          <Grid item>\r\n            <Button\r\n              onClick={() => onClickSave(\"\")}\r\n              style={{ color: theme.palette.primary.main }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          \r\n          <Grid item>\r\n            <IconButton\r\n              aria-label=\"More query options\"\r\n              aria-controls=\"query-options-menu\"\r\n              aria-haspopup={true}\r\n              onClick={handleIconClick}\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"query-options-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}\r\n              onClose={handleCloseMenu}\r\n            >\r\n              <MenuItem key=\"SaveAs\" onClick={handleClickSaveAs}>\r\n                Save As...\r\n              </MenuItem>\r\n              <MenuItem key=\"New\" onClick={handleClickNewQuery}>\r\n                New\r\n              </MenuItem>\r\n              <MenuItem key=\"Rename\" onClick={handleClickRename}>\r\n                Rename\r\n              </MenuItem>\r\n              <MenuItem key=\"Delete\" onClick={handleClickDelete}>\r\n                Delete\r\n              </MenuItem>\r\n            </Menu>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function ConfirmationDialog({\r\n  open,\r\n  title,\r\n  text,\r\n  confirmLabel,\r\n  onCancel,\r\n  onConfirm,\r\n}) {\r\n  return (\r\n    <Dialog open={open} onClose={onCancel} maxWidth=\"md\">\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onConfirm} color=\"primary\">\r\n          {confirmLabel}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ConfirmationDialog from \"../../shared/ConfirmationDialog\";\r\n\r\nexport default function DeleteDialog({ open, onClose, onSubmit }) {\r\n  const contentText =\r\n    \"Are you sure you want to delete this query? This action is permanent and cannot be undone.\";\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      open={open}\r\n      title=\"Delete Query\"\r\n      text={contentText}\r\n      confirmLabel=\"Delete\"\r\n      onCancel={onClose}\r\n      onConfirm={onSubmit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ConfirmationDialog from \"../../shared/ConfirmationDialog\";\r\n\r\nexport default function NewQueryDialog({ open, onClose, onSubmit }) {\r\n  const contentText =\r\n    \"Opening a new query will erase all unsaved changes. Are you sure you want to continue?\";\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      open={open}\r\n      title=\"New Query\"\r\n      text={contentText}\r\n      confirmLabel=\"Open New\"\r\n      onCancel={onClose}\r\n      onConfirm={onSubmit}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function SaveWithDialog({\r\n  open,\r\n  title,\r\n  text,\r\n  label,\r\n  onClose,\r\n  onSubmit,\r\n}) {\r\n  const [queryName, setQueryName] = useState(\"\");\r\n\r\n  function isValidName() {\r\n    return !!queryName;\r\n  }\r\n\r\n  function handleSubmit() {\r\n    if (isValidName) {\r\n      onSubmit(queryName);\r\n      setQueryName(\"\");\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label={label}\r\n          type=\"text\"\r\n          required\r\n          fullWidth\r\n          value={queryName}\r\n          onChange={(event) => setQueryName(event.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          disabled={!isValidName()}\r\n          color=\"primary\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SaveWithDialog from \"./SaveWithDialog\";\r\n\r\nexport default function RenameDialog({ open, onClose, onSubmit }) {\r\n  return (\r\n    <SaveWithDialog\r\n      open={open}\r\n      title=\"Rename Query\"\r\n      text=\"Enter a new name for the query\"\r\n      label=\"Query Name\"\r\n      onClose={onClose}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SaveWithDialog from \"./SaveWithDialog\";\r\n\r\nexport default function SaveAsDialog({ open, onClose, onSubmit }) {\r\n  return (\r\n    <SaveWithDialog\r\n      open={open}\r\n      title=\"Save Query As...\"\r\n      text=\"Enter a name for the copied query.\"\r\n      label=\"Query Name\"\r\n      onClose={onClose}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SaveWithDialog from \"./SaveWithDialog\";\r\n\r\nexport default function SaveNewDialog({ open, onClose, onSubmit }) {\r\n  return (\r\n    <SaveWithDialog\r\n      open={open}\r\n      title=\"Save New Query\"\r\n      text=\"Enter a name for the new query.\"\r\n      label=\"Query Name\"\r\n      onClose={onClose}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport QueryMenu from \"./QueryMenu\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport NewQueryDialog from \"./NewQueryDialog\";\r\nimport RenameDialog from \"./RenameDialog\";\r\nimport SaveAsDialog from \"./SaveAsDialog\";\r\nimport SaveNewDialog from \"./SaveNewDialog\";\r\n\r\nexport default function QueryOptionsContainer({\r\n  query,\r\n  onSaveNew,\r\n  onSave,\r\n  onSaveAs,\r\n  onNewQuery,\r\n  onDelete,\r\n  onRename,\r\n}) {\r\n  const [openDialog, setOpenDialog] = useState(\"\");\r\n\r\n  function handleCloseDialog() {\r\n    setOpenDialog(\"\");\r\n  }\r\n\r\n  function tryOpenDialog(dialogName) {\r\n    if (!openDialog) {\r\n      setOpenDialog(dialogName);\r\n    }\r\n  }\r\n\r\n  const handleSave = () => onSave();\r\n\r\n  const handleSaveNew = () => tryOpenDialog(\"SaveNew\");\r\n  const handleSaveAs = () => tryOpenDialog(\"SaveAs\");\r\n  const handleOpenNew = () => tryOpenDialog(\"OpenNew\");\r\n  const handleDelete = () => tryOpenDialog(\"Delete\");\r\n  const handleRename = () => tryOpenDialog(\"Rename\");\r\n\r\n  const handleSaveNewSubmit = (queryName) => {\r\n    handleCloseDialog();\r\n    onSaveNew(queryName);\r\n  };\r\n\r\n  const handleSaveAsSubmit = (queryName) => {\r\n    handleCloseDialog();\r\n    onSaveAs(queryName);\r\n  };\r\n\r\n  const handleOpenNewSubmit = () => {\r\n    handleCloseDialog();\r\n    onNewQuery();\r\n  };\r\n\r\n  const handleDeleteSubmit = () => {\r\n    handleCloseDialog();\r\n    onDelete(query.id);\r\n  };\r\n\r\n  const handleRenameSubmit = (queryName) => {\r\n    handleCloseDialog();\r\n    onRename(queryName);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <QueryMenu\r\n        query={query}\r\n        onClickSaveNew={handleSaveNew}\r\n        onClickSave={handleSave}\r\n        onClickSaveAs={handleSaveAs}\r\n        onClickNewQuery={handleOpenNew}\r\n        onClickDelete={handleDelete}\r\n        onClickRename={handleRename}\r\n      />\r\n      <SaveNewDialog\r\n        open={openDialog === \"SaveNew\"}\r\n        onClose={handleCloseDialog}\r\n        onSubmit={handleSaveNewSubmit}\r\n      />\r\n      <SaveAsDialog\r\n        open={openDialog === \"SaveAs\"}\r\n        onClose={handleCloseDialog}\r\n        onSubmit={handleSaveAsSubmit}\r\n      />\r\n      <NewQueryDialog\r\n        open={openDialog === \"OpenNew\"}\r\n        onClose={handleCloseDialog}\r\n        onSubmit={handleOpenNewSubmit}\r\n      />\r\n      <DeleteDialog\r\n        open={openDialog === \"Delete\"}\r\n        onClose={handleCloseDialog}\r\n        onSubmit={handleDeleteSubmit}\r\n      />\r\n      <RenameDialog\r\n        open={openDialog === \"Rename\"}\r\n        onClose={handleCloseDialog}\r\n        onSubmit={handleRenameSubmit}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  subHeader: {\r\n    margin: 0,\r\n    fontSize: \"1.05em\",\r\n    fontWeight: 400,\r\n    color: theme.palette.secondary.main,\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function QueryCreatorHeader({ queryName }) {\r\n  const classes = useStyles();\r\n\r\n  const title = !!queryName ? queryName : \"Query Creator\";\r\n\r\n  return (\r\n    <Grid item container xs={7} sm={7} md={7} justifyContent=\"flex-start\">\r\n      {queryName === \"\" && (\r\n        <h1 className={classes.header} title=\"Query Creator\">\r\n          Query Creator\r\n        </h1>\r\n      )}\r\n\r\n      {!!queryName && (\r\n        <div>\r\n          <h1 className={classes.header} title=\"Query Creator\">\r\n            Query Creator\r\n          </h1>\r\n          <h2 className={classes.subHeader} title={title}>\r\n            {title}\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"../styles/App.css\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ServiceKeyForm from \"./queries/ServiceKeyForm\";\r\nimport CollectionSelector from \"./queries/CollectionSelector\";\r\nimport LimitSlider from \"./queries/LimitSlider\";\r\nimport LanguageSelector from \"./queries/LanguageSelector\";\r\nimport FieldsEntryForm from \"./queries/FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./queries/ConditionArgumentForm\";\r\nimport QueryResults from \"./queries/QueryResults\";\r\nimport QueryUrlContainer from \"./queries/QueryUrlContainer\";\r\nimport JoinsContainer from \"./queries/JoinsContainer\";\r\nimport QueryCondition from \"../planetside/QueryCondition\";\r\nimport Collapsible from \"./shared/Collapsible\";\r\nimport StaticAppBar from \"./StaticAppBar\";\r\nimport QueryConfig from \"../planetside/QueryConfig\";\r\nimport TreeForm from \"./queries/TreeForm\";\r\n\r\nimport userPreferenceStore from \"../persistence/userPreferencesStore\";\r\nimport {\r\n  upsertQuery,\r\n  isSupported,\r\n  getQuery,\r\n  deleteQuery,\r\n} from \"../persistence/queryStore\";\r\nimport QueryOptionsContainer from \"./queries/queryOptions/QueryOptionsContainer\";\r\nimport QueryCreatorHeader from \"./queries/QueryCreatorHeader\";\r\n\r\nconst CensusQuery = require(\"dbgcensus\").Query;\r\nconst dbgcensus = require(\"dbgcensus\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    \"margin-top\": theme.spacing(2),\r\n  },\r\n  gridContainer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridContainerItem: {\r\n    \"padding-bottom\": theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  itemParagraph: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  splitQueryField: {\r\n    width: 250,\r\n  },\r\n  filterSelect: {\r\n    width: 120,\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"black\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  const [namespace, setNamespace] = useState(\"ps2:v2\");\r\n  useEffect(() => {\r\n    dbgcensus.SetGlobalNamespace(\"ps2:v2\");\r\n  }, [namespace]);\r\n\r\n  const [storeKey, setStoreKey] = useState(userPreferenceStore.getServiceId());\r\n  const [serviceKey, setServiceKey] = useState(\"example\");\r\n  useEffect(() => {\r\n    const storedKey = userPreferenceStore.getServiceId();\r\n    if (storedKey !== null) {\r\n      dbgcensus.SetGlobalServiceKey(storedKey);\r\n      setStoreKey(storedKey);\r\n      setServiceKey(storedKey);\r\n    }\r\n  }, []);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [query, setQuery] = useState(QueryConfig(\"character\", namespace));\r\n\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n  const storedColorTheme = userPreferenceStore.getColorTheme();\r\n\r\n  const [colorTheme, setColorTheme] = useState(\r\n    !!storedColorTheme ? storedColorTheme : prefersDarkMode ? \"dark\" : \"light\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    const newTheme = !!storedColorTheme\r\n      ? storedColorTheme\r\n      : prefersDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n    setColorTheme(newTheme);\r\n  }, [storedColorTheme, prefersDarkMode]);\r\n\r\n  const useDarkMode = colorTheme === \"dark\";\r\n\r\n  const theme = React.useMemo(() => {\r\n    const theme = createTheme({\r\n      palette: {\r\n        type: useDarkMode ? \"dark\" : \"light\",\r\n        primary: useDarkMode ? { main: \"#E7ADFB\" } : pink,\r\n        secondary: useDarkMode ? { main: \"#F8C275\" } : { main: \"#5700FE\" },\r\n        background: {\r\n          paper: useDarkMode ? \"#27273A\" : \"#fff\",\r\n          default: useDarkMode ? \"#0F1320\" : \"#fafafa\",\r\n        },\r\n        text: {},\r\n      },\r\n      contrastThreshold: 5,\r\n    });\r\n\r\n    return theme;\r\n  }, [useDarkMode]);\r\n\r\n  function handleColorThemeChange(theme) {\r\n    userPreferenceStore.saveColorTheme(theme);\r\n    setColorTheme(theme);\r\n  }\r\n\r\n  const [loadedQueryId, setLoadedQueryId] = useState();\r\n\r\n  const [isStoreSupported, setIsStoreSupported] = useState(false);\r\n  useEffect(() => {\r\n    setIsStoreSupported(isSupported());\r\n  }, []);\r\n\r\n  async function handleSaveNewQuery(queryName) {\r\n    if (!queryName) {\r\n      console.warn(\"Invalid query name\");\r\n      return;\r\n    }\r\n\r\n    await handleSaveQuery(queryName);\r\n  }\r\n\r\n  async function handleSaveQuery(queryName) {\r\n    const currentQuery = { ...query };\r\n\r\n    if (!!queryName) {\r\n      currentQuery.name = queryName;\r\n    }\r\n\r\n    try {\r\n      await upsertQuery(currentQuery);\r\n\r\n      const queryId = currentQuery.id;\r\n\r\n      await handleLoadQuery(queryId);\r\n    } catch (error) {\r\n      console.warn(\"Error saving query:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleSaveQueryAs(copyName = \"\") {\r\n    try {\r\n      const currentQuery = { ...query };\r\n\r\n      if (!copyName) {\r\n        copyName = `${currentQuery.name} (copy)`;\r\n      }\r\n\r\n      currentQuery.id = null;\r\n      currentQuery.name = copyName;\r\n\r\n      const result = await upsertQuery(currentQuery);\r\n\r\n      if (!!result) {\r\n        setQuery((prevQuery) => {\r\n          return { ...prevQuery, ...currentQuery };\r\n        });\r\n\r\n        setLoadedQueryId(currentQuery.id);\r\n      } else {\r\n        console.warn(\"Error saving query:\", result);\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Error saving query:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleLoadQuery(id) {\r\n    try {\r\n      const loadedQuery = await getQuery(id);\r\n\r\n      if (!!loadedQuery) {\r\n        setQuery(loadedQuery);\r\n\r\n        setLoadedQueryId(id);\r\n      }\r\n    } catch (error) {\r\n      console.warn(`Error loading query ${id}:`, error);\r\n    }\r\n  }\r\n\r\n  async function handleRenameQuery(queryName) {\r\n    await handleSaveQuery(queryName);\r\n  }\r\n\r\n  async function handleDeleteQuery(id) {\r\n    try {\r\n      await deleteQuery(id);\r\n      handleNewQuery();\r\n    } catch (error) {\r\n      console.warn(`Error deleting query ${id}:`, error);\r\n    }\r\n  }\r\n\r\n  function handleNewQuery() {\r\n    setQuery(QueryConfig());\r\n  }\r\n\r\n  function onServiceKeyChange(key) {\r\n    dbgcensus.SetGlobalServiceKey(key);\r\n    userPreferenceStore.saveServiceId(key); // TODO: make sure this doesn't cause problems with the store key effect above\r\n    setServiceKey(key);\r\n  }\r\n\r\n  function onDeleteStoredServiceKey() {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ serviceKey: \"example\" } };\r\n    });\r\n\r\n    dbgcensus.SetGlobalServiceKey(\"example\");\r\n    userPreferenceStore.removeServiceId();\r\n  }\r\n\r\n  function onCollectionChange(value) {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ collection: value } };\r\n    });\r\n  }\r\n\r\n  function onLimitChange(value) {\r\n    const newLimit = value === 0 ? null : value;\r\n\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ limit: newLimit } };\r\n    });\r\n  }\r\n\r\n  function onLanguageChange(value) {\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ language: value } };\r\n    });\r\n  }\r\n\r\n  function onFilterTypeChange(event) {\r\n    const value = event.target.value.toLowerCase();\r\n\r\n    setQuery((prevQuery) => {\r\n      return { ...prevQuery, ...{ filterType: value } };\r\n    });\r\n  }\r\n\r\n  function onAddSimpleArrayValue(arrayPropertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      const array = [...prevQuery[arrayPropertyName]];\r\n\r\n      if (value !== \"\" && !array.includes(value)) {\r\n        let updatedFields = array;\r\n        updatedFields.push(value);\r\n\r\n        return { ...prevQuery, ...{ [arrayPropertyName]: updatedFields } };\r\n      } else {\r\n        return prevQuery;\r\n      }\r\n    });\r\n  }\r\n\r\n  function onRemoveSimpleArrayValue(arrayPropertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      const array = [...prevQuery[arrayPropertyName]];\r\n\r\n      const index = array.indexOf(value);\r\n\r\n      if (index !== -1) {\r\n        let updatedFields = array;\r\n        updatedFields.splice(index, 1);\r\n\r\n        return { ...prevQuery, ...{ [arrayPropertyName]: updatedFields } };\r\n      }\r\n    });\r\n  }\r\n\r\n  function onConditionDataChange(id, propertyName, propertyValue) {\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = prevQuery.conditions.map((condition) => {\r\n        if (condition.id === id) {\r\n          return { ...condition, ...{ [propertyName]: propertyValue } };\r\n        }\r\n\r\n        return condition;\r\n      });\r\n\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function onAddNewCondition() {\r\n    const newCondition = QueryCondition();\r\n\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = [...prevQuery.conditions, newCondition];\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function onDeleteCondition(id) {\r\n    setQuery((prevQuery) => {\r\n      const updatedConditions = prevQuery.conditions.filter((condition) => {\r\n        return condition.id !== id;\r\n      });\r\n\r\n      return { ...prevQuery, ...{ conditions: updatedConditions } };\r\n    });\r\n  }\r\n\r\n  function handleAddJoin(join) {\r\n    setQuery((prevQuery) => {\r\n      let updatedJoins = [...prevQuery.joins, join];\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleDeleteJoin(joinId) {\r\n    setQuery((prevQuery) => {\r\n      let updatedJoins = prevQuery.joins.filter((join) => join.id !== joinId);\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleChangeJoinInfo(targetId, propertyName, value, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        propertyName,\r\n        value,\r\n        ancestry,\r\n        (join) => changeJoinPropertyValue(join, propertyName, value)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleAddJoinArrayItem(targetId, arrayName, item, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        item,\r\n        ancestry,\r\n        (targetJoin) => addArrayItemToJoin(targetJoin, arrayName, item)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleRemoveJoinArrayItem(targetId, arrayName, item, ancestry) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        item,\r\n        ancestry,\r\n        (targetJoin) => removeArrayItemFromJoin(targetJoin, arrayName, item)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleChangeJoinArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value,\r\n    ancestry\r\n  ) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        propertyName,\r\n        value,\r\n        ancestry,\r\n        (targetJoin) =>\r\n          updateArrayItemWithIdInJoin(\r\n            targetJoin,\r\n            arrayName,\r\n            itemId,\r\n            propertyName,\r\n            value\r\n          )\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function handleRemoveJoinArrayItemWithId(\r\n    targetId,\r\n    arrayName,\r\n    itemId,\r\n    ancestry\r\n  ) {\r\n    setQuery((prevQuery) => {\r\n      const updatedJoins = updateJoinAncestry(\r\n        prevQuery.joins,\r\n        targetId,\r\n        arrayName,\r\n        itemId,\r\n        ancestry,\r\n        (targetJoin) =>\r\n          removeArrayItemWithIdFromJoin(targetJoin, arrayName, itemId)\r\n      );\r\n      return { ...prevQuery, ...{ joins: updatedJoins } };\r\n    });\r\n  }\r\n\r\n  function updateJoinAncestry(\r\n    joins,\r\n    targetId,\r\n    propertyName,\r\n    value,\r\n    ancestry,\r\n    updateFunction\r\n  ) {\r\n    const startJoinId = ancestry[0];\r\n    const childAncestry = [...ancestry];\r\n    childAncestry.splice(0, 1);\r\n\r\n    const updatedJoins = joins.map((join) => {\r\n      if (join.id === startJoinId) {\r\n        const updatedJoin = updateJoinAncestor(\r\n          join,\r\n          targetId,\r\n          propertyName,\r\n          value,\r\n          childAncestry,\r\n          updateFunction\r\n        );\r\n        return updatedJoin;\r\n      }\r\n      return join;\r\n    });\r\n\r\n    return updatedJoins;\r\n  }\r\n\r\n  function updateJoinAncestor(\r\n    join,\r\n    targetId,\r\n    propertyName,\r\n    value,\r\n    ancestry,\r\n    updateFunction\r\n  ) {\r\n    // If this is the target join, update the property's value\r\n    if (join.id === targetId) {\r\n      return updateFunction(join);\r\n    }\r\n\r\n    // If this is not the target join, dig down into children\r\n    const nextChildId = ancestry[0];\r\n    const childAncestry = [...ancestry];\r\n    childAncestry.splice(0, 1);\r\n\r\n    const updatedJoins = join.joins.map((j) => {\r\n      if (j.id === nextChildId) {\r\n        const updatedJoin = updateJoinAncestor(\r\n          j,\r\n          targetId,\r\n          propertyName,\r\n          value,\r\n          childAncestry,\r\n          updateFunction\r\n        );\r\n        return updatedJoin;\r\n      }\r\n\r\n      return j;\r\n    });\r\n\r\n    join = { ...join, ...{ joins: updatedJoins } };\r\n    return join;\r\n  }\r\n\r\n  function changeJoinPropertyValue(join, propertyName, value) {\r\n    return { ...join, ...{ [propertyName]: value } };\r\n  }\r\n\r\n  function addArrayItemToJoin(join, arrayName, item) {\r\n    const updatedArray = [...join[arrayName], item];\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function removeArrayItemFromJoin(join, arrayName, item) {\r\n    const updatedArray = join[arrayName].filter((i) => i !== item);\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function updateArrayItemWithIdInJoin(\r\n    join,\r\n    arrayName,\r\n    itemId,\r\n    propertyName,\r\n    value\r\n  ) {\r\n    const updatedArray = join[arrayName].map((item) => {\r\n      if (item.id === itemId) {\r\n        return { ...item, ...{ [propertyName]: value } };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function removeArrayItemWithIdFromJoin(join, arrayName, itemId) {\r\n    const updatedArray = join[arrayName].filter((item) => item.id !== itemId);\r\n    return { ...join, ...{ [arrayName]: updatedArray } };\r\n  }\r\n\r\n  function handleChangeQueryTreeProperty(propertyName, value) {\r\n    setQuery((prevQuery) => {\r\n      let updatedTree = { ...prevQuery.tree, ...{ [propertyName]: value } };\r\n\r\n      return { ...prevQuery, ...{ tree: updatedTree } };\r\n    });\r\n  }\r\n\r\n  const [queryUrl, setQueryUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    function convertToCensusQuery() {\r\n      let censusQuery = new CensusQuery(query.collection, query.namespace);\r\n\r\n      if (!!query.language && query.language !== \"All\") {\r\n        censusQuery.setLanguage(query.language.toLowerCase());\r\n      }\r\n\r\n      if (query.limit !== null && query.limit !== 0) {\r\n        censusQuery.setLimit(query.limit);\r\n      }\r\n\r\n      if (query.start !== null) {\r\n        censusQuery.setStart(query.start);\r\n      }\r\n\r\n      if (query.filterFields.length > 0) {\r\n        censusQuery[`${query.filterType}Fields`](query.filterFields);\r\n      }\r\n\r\n      if (query.resolves.length > 0) {\r\n        censusQuery.resolve(query.resolves);\r\n      }\r\n\r\n      if (query.sortFields.length > 0) {\r\n        censusQuery.sort(query.sortFields);\r\n      }\r\n\r\n      if (query.conditions.length > 0) {\r\n        query.conditions.forEach((condition) => {\r\n          const field = condition.field;\r\n          const operator = condition.operator;\r\n          const value = condition.value;\r\n\r\n          // if (condition.isValid(field, operator, value)) {\r\n          if (!!field && !!operator && !!value) {\r\n            censusQuery.where(field)[operator.name](value);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (query.joins.length > 0) {\r\n        censusQuery = addQueryJoins(censusQuery, query.joins);\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    function addQueryJoins(censusQuery, joinsArray, censusJoin = null) {\r\n      if (joinsArray.length > 0) {\r\n        joinsArray.forEach((join) => {\r\n          if (!!join.collection) {\r\n            let serviceJoin =\r\n              censusJoin !== null\r\n                ? censusJoin.joinService(join.collection)\r\n                : censusQuery.joinService(join.collection);\r\n\r\n            serviceJoin.isList(join.isList);\r\n            serviceJoin.isOuterJoin(join.isOuterJoin);\r\n\r\n            if (!!join.injectAt) {\r\n              serviceJoin.injectAt(join.injectAt);\r\n            }\r\n\r\n            if (!!join.onField) {\r\n              serviceJoin.onField(join.onField);\r\n            }\r\n\r\n            if (!!join.toField) {\r\n              serviceJoin.toField(join.toField);\r\n            }\r\n\r\n            if (join.filterFields.length > 0) {\r\n              serviceJoin[`${join.filterType}Fields`](join.filterFields);\r\n            }\r\n\r\n            if (join.terms.length > 0) {\r\n              join.terms.forEach((term) => {\r\n                const field = term.field;\r\n                const operator = term.operator;\r\n                const value = term.value;\r\n\r\n                // if (term.isValid(field, operator, value)) {\r\n                if (!!field && !!operator && !!value) {\r\n                  serviceJoin.where(field)[operator.name](value);\r\n                }\r\n              });\r\n            }\r\n\r\n            if (join.joins.length > 0) {\r\n              addQueryJoins(censusQuery, join.joins, serviceJoin);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    // The dbgcensus package doesn't process trees correctly, so we do it manually\r\n    function getTreeViewUrlString() {\r\n      const treeField = query.tree.treeField || query.tree.startField;\r\n\r\n      if (!!treeField) {\r\n        let treeViewString = `&c:tree=field:${treeField}`;\r\n\r\n        treeViewString = `${treeViewString}^isList:${query.tree.isList}`;\r\n\r\n        if (!!query.tree.groupPrefix) {\r\n          treeViewString = `${treeViewString}^prefix:${query.tree.groupPrefix}`;\r\n        }\r\n\r\n        if (!!query.tree.startField) {\r\n          treeViewString = `${treeViewString}^start:${query.tree.startField}`;\r\n        }\r\n\r\n        return treeViewString;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const censusQuery = convertToCensusQuery();\r\n      let url = censusQuery.toUrl();\r\n      url = url.replace(\"http://\", \"https://\");\r\n\r\n      let treeViewString = getTreeViewUrlString();\r\n\r\n      if (!!treeViewString) {\r\n        url = url + treeViewString;\r\n      }\r\n\r\n      setQueryUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error getting query URL: \", error);\r\n    }\r\n  }, [query, loadedQueryId]);\r\n\r\n  const [queryResult, setQueryResult] = useState(\"\");\r\n  async function onSubmitQuery() {\r\n    if (!!queryUrl && !loading) {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(queryUrl);\r\n        const responseJson = await response.json();\r\n        setQueryResult(responseJson);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"Error getting data from query: \", error);\r\n        setQueryResult(`Error getting data from query: ${error}`);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <StaticAppBar\r\n        theme={colorTheme}\r\n        onChangeTheme={handleColorThemeChange}\r\n        onLoadQuery={handleLoadQuery}\r\n      />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container alignItems=\"flex-start\">\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            className={classes.gridContainer}\r\n          >\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <Collapsible\r\n                  id=\"service-id\"\r\n                  headerLevel={1}\r\n                  headerText=\"Service ID\"\r\n                  defaultExtended={!storeKey || storeKey === \"example\"}\r\n                >\r\n                  <p className={classes.itemParagraph}>\r\n                    Sign up for a service ID{\" \"}\r\n                    <a\r\n                      href=\"https://census.daybreakgames.com/#service-id\"\r\n                      aria-label=\"Service ID sign up page\"\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      style={{ color: \"#40afee\" }}\r\n                    >\r\n                      here\r\n                    </a>\r\n                    . The 'example' service ID allows up to 10 requests per\r\n                    minute. Saving your service ID will store it to this\r\n                    browser.\r\n                  </p>\r\n                  <ServiceKeyForm\r\n                    serviceId={query.serviceKey}\r\n                    onServiceKeyChange={onServiceKeyChange}\r\n                    onDeleteStoredKey={onDeleteStoredServiceKey}\r\n                  />\r\n                </Collapsible>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <Grid\r\n                  container\r\n                  className={classes.gridRow}\r\n                  alignItems=\"flex-start\"\r\n                  spacing={1}\r\n                  style={{ marginBottom: 12 }}\r\n                >\r\n                  <QueryCreatorHeader queryName={query.name} />\r\n\r\n                  {isStoreSupported && (\r\n                    <QueryOptionsContainer\r\n                      query={query}\r\n                      onSaveNew={handleSaveNewQuery}\r\n                      onSave={handleSaveQuery}\r\n                      onSaveAs={handleSaveQueryAs}\r\n                      onNewQuery={handleNewQuery}\r\n                      onDelete={handleDeleteQuery}\r\n                      onRename={handleRenameQuery}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n\r\n                <p className={classes.itemParagraph}>\r\n                  Refer to the{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#general\"\r\n                    aria-label=\"Official census API documentation page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    official documentation\r\n                  </a>{\" \"}\r\n                  or{\" \"}\r\n                  <a\r\n                    href=\"https://github.com/leonhard-s/auraxium/wiki/Census-API-Primer\"\r\n                    aria-label=\"Leonhard-s's Census API Primer wiki\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    leonhard-s's API primer\r\n                  </a>{\" \"}\r\n                  for more information on using the API.\r\n                </p>\r\n\r\n                <Collapsible\r\n                  id=\"collection\"\r\n                  headerLevel={2}\r\n                  headerText=\"Collection\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      sm={12}\r\n                      md={7}\r\n                      className={classes.splitQueryField}\r\n                    >\r\n                      <CollectionSelector\r\n                        collection={query.collection}\r\n                        onChange={onCollectionChange}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      item\r\n                      sm={12}\r\n                      md={4}\r\n                      className={classes.splitQueryField}\r\n                      style={{ marginTop: 4 }}\r\n                    >\r\n                      <LanguageSelector\r\n                        language={query.language}\r\n                        onChange={onLanguageChange}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} style={{ marginLeft: 16, marginTop: 8 }}>\r\n                      <LimitSlider\r\n                        value={query.limit}\r\n                        onChange={onLimitChange}\r\n                        label=\"Limit\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"search-conditions\"\r\n                  headerLevel={2}\r\n                  headerText=\"Search Conditions\"\r\n                  defaultExtended={true}\r\n                >\r\n                  {query.conditions.length > 0 && (\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      xs={12}\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      className={classes.gridRow}\r\n                    >\r\n                      {query.conditions.map((condition) => {\r\n                        return (\r\n                          <ConditionArgumentForm\r\n                            key={condition.id}\r\n                            conditionData={condition}\r\n                            onDataChange={onConditionDataChange}\r\n                            onDelete={onDeleteCondition}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      startIcon={<AddIcon fontSize=\"small\" />}\r\n                      size=\"small\"\r\n                      onClick={onAddNewCondition}\r\n                      className={classes.textButton}\r\n                    >\r\n                      New Condition\r\n                    </Button>\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"field-filters\"\r\n                  headerLevel={2}\r\n                  headerText=\"Filter Displayed Fields\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                      lg={3}\r\n                      className={classes.inlineSelectItem}\r\n                    >\r\n                      <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"filter-type-select\">\r\n                          Filter Type\r\n                        </InputLabel>\r\n                        <Select\r\n                          native\r\n                          margin=\"dense\"\r\n                          label=\"Filter Type\"\r\n                          className={classes.filterSelect}\r\n                          value={query.filterType}\r\n                          onChange={onFilterTypeChange}\r\n                          inputProps={{\r\n                            name: \"filter-type\",\r\n                            id: \"filter-type-select\",\r\n                          }}\r\n                        >\r\n                          <option aria-label=\"Show\" value=\"show\">\r\n                            Show\r\n                          </option>\r\n                          <option aira-label=\"Hide\" value=\"hide\">\r\n                            Hide\r\n                          </option>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n\r\n                    <FieldsEntryForm\r\n                      label=\"Add Field\"\r\n                      fields={query.filterFields}\r\n                      onAddField={(value) =>\r\n                        onAddSimpleArrayValue(\"filterFields\", value)\r\n                      }\r\n                      onRemoveField={(value) =>\r\n                        onRemoveSimpleArrayValue(\"filterFields\", value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"resolves-container\"\r\n                  headerLevel={2}\r\n                  headerText=\"Resolves\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    spacing={0}\r\n                    className={classes.gridRow}\r\n                  >\r\n                    <FieldsEntryForm\r\n                      label=\"Resolves\"\r\n                      fields={query.resolves}\r\n                      onAddField={(value) =>\r\n                        onAddSimpleArrayValue(\"resolves\", value)\r\n                      }\r\n                      onRemoveField={(value) =>\r\n                        onRemoveSimpleArrayValue(\"resolves\", value)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"joins-container\"\r\n                  headerLevel={2}\r\n                  headerText=\"Joins\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <JoinsContainer\r\n                    joinsData={query.joins}\r\n                    onAddJoin={handleAddJoin}\r\n                    onDeleteJoin={handleDeleteJoin}\r\n                    onInfoChange={handleChangeJoinInfo}\r\n                    onAddArrayItem={handleAddJoinArrayItem}\r\n                    onRemoveArrayItem={handleRemoveJoinArrayItem}\r\n                    onChangeArrayItemWithId={handleChangeJoinArrayItemWithId}\r\n                    onRemoveArrayItemWithId={handleRemoveJoinArrayItemWithId}\r\n                  />\r\n                </Collapsible>\r\n\r\n                <Collapsible\r\n                  id=\"tree-form\"\r\n                  headerLevel={2}\r\n                  headerText=\"Tree View\"\r\n                  defaultExtended={true}\r\n                >\r\n                  <TreeForm\r\n                    tree={query.tree}\r\n                    onChange={handleChangeQueryTreeProperty}\r\n                  />\r\n                </Collapsible>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            className={classes.gridContainer}\r\n          >\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryUrlContainer\r\n                queryUrl={queryUrl}\r\n                isLoading={loading}\r\n                onRunQuery={onSubmitQuery}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryResults data={queryResult} isLoading={loading} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}