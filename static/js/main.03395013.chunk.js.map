{"version":3,"sources":["components/queries/ServiceKeyForm.js","planetside/QueryEnums.js","components/queries/CollectionSelector.js","components/queries/LimitSlider.js","components/queries/LanguageSelector.js","components/queries/FieldsEntryForm.js","components/queries/ConditionArgumentForm.js","components/queries/QueryResults.js","components/queries/QueryUrlContainer.js","components/shared/BooleanSelector.js","components/queries/JoinForm.js","components/queries/JoinsContainer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","ServiceKeyForm","serviceId","onServiceKeyChange","onDeleteStoredKey","classes","useState","serviceKey","setServiceKey","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","required","name","onChange","target","value","placeholder","helperText","Button","type","color","size","className","startIcon","onClick","QueryEnums","Languages","Operators","display","title","Collections","selectControl","minWidth","CollectionSelector","collection","collections","setCollections","handleChange","includes","useEffect","Autocomplete","options","autoSelect","event","newValue","renderInput","params","root","width","marks","getScaledValue","x","LimitSlider","sliderValue","Fragment","InputLabel","htmlFor","Slider","min","step","max","defaultValue","getAriaValueText","valueLabelFormat","valueLabelDisplay","LanguageSelector","language","languages","setLanguages","languageItems","map","lang","FormControl","Select","native","inputProps","padding","chipList","justifyContent","flexWrap","listStyle","chip","FieldsEntryForm","fields","onAddField","onRemoveField","inputField","setInputField","isValidInput","toLowerCase","fieldItems","field","Chip","onDelete","handleRemoveField","Grid","item","xs","sm","md","InputProps","endAdornment","InputAdornment","position","IconButton","disabled","fieldGridItem","marginTop","marginBottom","marginLeft","operatorGrid","ConditionArgumentForm","conditionData","onDataChange","setField","setValue","operators","setOperators","fontSize","operator","find","o","headerButtonContainer","textAlign","header1","fontWeight","paper","jsonView","maxHeight","overflow","lineHeight","textView","linearProgres","QueryResults","data","isLoading","Paper","LinearProgress","container","alignItems","navigator","clipboard","writeText","JSON","stringify","urlBox","backgroundColor","fontFamily","borderRadius","wordWrap","gridItem","marginRight","runButton","runButtonIcon","buttonWide","whiteSpace","QueryUrlContainer","queryUrl","onRunQuery","anonymousUrl","url","regex","RegExp","replace","anonymizeQueryUrl","Link","to","href","rel","BooleanSelector","trueLabel","falseLabel","style","gridRow","textButton","footer","JoinForm","joinData","onAddNewJoin","joinChanges","setJoinChanges","handleSaveChanges","handleDeleteJoin","handleSimplePropertyChange","propertyName","injectAt","isOuterJoin","onField","toField","isList","joins","length","join","JoinsContainer","joinsData","onJoinDataChange","onDeleteJoin","depth","handleDataChange","updatedJoin","newJoin","uuidv4","parentId","filterType","filterFields","terms","CensusQuery","require","Query","dbgcensus","flexGrow","gridContainer","gridContainerItem","header2","itemParagraph","splitQueryField","filterSelect","inlineSelectItem","buttonWrapper","buttonProgress","top","left","App","SetGlobalNamespace","localStorage","getItem","storeKey","setStoreKey","storedKey","SetGlobalServiceKey","loading","setLoading","namespace","conditions","limit","start","resolves","trees","sort","query","setQuery","prefersDarkMode","useMediaQuery","React","useMemo","createTheme","palette","primary","main","pink","secondary","orange","background","default","contrastThreshold","onAddSimpleArrayValue","arrayPropertyName","array","updatedFields","push","onRemoveSimpleArrayValue","index","indexOf","splice","onConditionDataChange","propertyValue","updatedConditions","condition","onDeleteCondition","filter","setQueryUrl","setDbgQuery","censusQuery","setLanguage","setLimit","setStart","resolve","forEach","where","serviceJoin","joinService","convertToCensusQuery","toUrl","error","console","log","queryResult","setQueryResult","a","fetch","response","json","responseJson","ThemeProvider","CssBaseline","Container","maxWidth","key","setItem","removeItem","newCondition","checked","updatedJoins","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gxBAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QA4DXC,MAxDf,YAA+E,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,kBACjDC,EAAUV,IAEhB,EAAoCW,mBAASJ,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAYA,OACE,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAXtC,SAAsBC,GACpBA,EAAEC,iBACFV,EAAmBI,IASnB,UACE,cAACO,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,cACNjB,OAAO,QACPkB,QAAQ,WACRC,UAAQ,EACRC,KAAK,cACLC,SAAU,SAACR,GAAD,OAAOJ,EAAcI,EAAES,OAAOC,QACxCC,YAAY,UACZD,MAAOf,EACPiB,WAAW,0BAGb,cAACC,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,YACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IANb,kBAWA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLT,QAAQ,WACRU,MAAM,UACNC,KAAK,QACLC,UAAWxB,EAAQP,OACnBgC,UAAW,cAAC,IAAD,IACXC,QAtCN,WACEvB,EAAc,WACdJ,KA6BE,wB,SCkHS4B,EAvKI,CACjBC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MACpCC,UAAW,CACT,CACEC,QAAS,IACThB,KAAM,SACNiB,MAAO,SACPd,MAAO,KAET,CACEa,QAAS,SACThB,KAAM,YACNiB,MAAO,aACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,aACNiB,MAAO,eACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,qBACNiB,MAAO,yBACPd,MAAO,MAET,CACEa,QAAS,IACThB,KAAM,gBACNiB,MAAO,kBACPd,MAAO,MAET,CACEa,QAAS,SACThB,KAAM,wBACNiB,MAAO,4BACPd,MAAO,MAET,CACEa,QAAS,cACThB,KAAM,aACNiB,MAAO,cACPd,MAAO,MAET,CACEa,QAAS,WACThB,KAAM,WACNiB,MAAO,WACPd,MAAO,OAGXe,YAAa,CACX,YACA,iBACA,yBACA,sBACA,uBACA,iCACA,4BACA,4BACA,mBACA,kBACA,6BACA,0BACA,yBACA,oCACA,qBACA,kBACA,UACA,eACA,cACA,eACA,aACA,WACA,YACA,iBACA,iBACA,0BACA,SACA,cACA,gBACA,aACA,kBACA,gBACA,gBACA,UACA,aACA,0BACA,YACA,cACA,0BACA,iBACA,QACA,YACA,oBACA,OACA,kBACA,gBACA,eACA,iBACA,YACA,UACA,UACA,aACA,mBACA,wBACA,+BACA,iBACA,uBACA,YACA,6BACA,iBACA,eACA,qBACA,uBACA,UACA,YACA,oBACA,qBACA,aACA,yBACA,SACA,cACA,cACA,gBACA,SACA,yBACA,6BACA,cACA,yBACA,QACA,iBACA,aACA,YACA,cACA,QACA,UACA,qBACA,kBACA,oBACA,SACA,mBACA,mBACA,uBACA,uBACA,OACA,cACA,mBACA,mBACA,QACA,SACA,gBACA,yBACA,cACA,2BACA,MACA,oBACA,cACA,yBACA,2BACA,mBACA,QACA,gBC7JE1C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyC,cAAe,CACbC,SAAU,SAIC,SAASC,EAAT,GAAuD,IAAzBC,EAAwB,EAAxBA,WAAYrB,EAAY,EAAZA,SACjDf,EAAUV,IAEhB,EAAsCW,mBAAS,IAA/C,mBAAOoC,EAAP,KAAoBC,EAApB,KAKA,SAASC,EAAatB,GAChBoB,EAAYG,SAASvB,IACvBF,EAASE,GAIb,OAVAwB,qBAAU,WACRH,EAAeX,EAAWK,eACzB,IASD,cAACU,EAAA,EAAD,CACEhC,GAAG,sBACHiC,QAASN,EACTpB,MAAOmB,EACPQ,YAAU,EACV/B,UAAQ,EACRE,SAAU,SAAC8B,EAAOC,GAAR,OAAqBP,EAAaO,IAC5CC,YAAa,SAACC,GAAD,OAAY,cAACvC,EAAA,EAAD,2BAAeuC,GAAf,IAAuBrC,MAAM,aAAaC,QAAQ,WAAWlB,OAAO,YAC7F8B,UAAWxB,EAAQiC,gB,aC9BnB3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCy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","file":"static/js/main.03395013.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ServiceKeyForm({ serviceId, onServiceKeyChange, onDeleteStoredKey }) {\r\n  const classes = useStyles();\r\n\r\n  const [serviceKey, setServiceKey] = useState(serviceId);\r\n\r\n  function onSubmitForm(e) {\r\n    e.preventDefault();\r\n    onServiceKeyChange(serviceKey);\r\n  }\r\n\r\n  function onClickDelete() {\r\n    setServiceKey(\"example\");\r\n    onDeleteStoredKey();\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n      <TextField\r\n        id=\"service-key\"\r\n        label=\"Service Key\"\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        required\r\n        name=\"service-key\"\r\n        onChange={(e) => setServiceKey(e.target.value)}\r\n        placeholder=\"example\"\r\n        value={serviceKey}\r\n        helperText=\"Omit the leading 's:'\"\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n      >\r\n        Save\r\n      </Button>\r\n      \r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={onClickDelete}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ServiceKeyForm;\r\n","const QueryEnums = {\r\n  Languages: [\"De\", \"En\", \"Es\", \"Fr\", \"It\"],\r\n  Operators: [\r\n    {\r\n      display: \"=\",\r\n      name: \"equals\",\r\n      title: \"Equals\",\r\n      value: \"=\",\r\n    },\r\n    {\r\n      display: \"≠\",\r\n      name: \"notEquals\",\r\n      title: \"Not Equals\",\r\n      value: \"=!\",\r\n    },\r\n    {\r\n      display: \"<\",\r\n      name: \"isLessThan\",\r\n      title: \"Is Less Than\",\r\n      value: \"=<\",\r\n    },\r\n    {\r\n      display: \"≤\",\r\n      name: \"isLessThanOrEquals\",\r\n      title: \"Is Less Than Or Equals\",\r\n      value: \"=[\",\r\n    },\r\n    {\r\n      display: \">\",\r\n      name: \"isGreaterThan\",\r\n      title: \"Is Greater Than\",\r\n      value: \"=>\",\r\n    },\r\n    {\r\n      display: \"≥\",\r\n      name: \"isGreaterThanOrEquals\",\r\n      title: \"Is Greater Than Or Equals\",\r\n      value: \"=]\",\r\n    },\r\n    {\r\n      display: \"Starts With\",\r\n      name: \"startsWith\",\r\n      title: \"Starts With\",\r\n      value: \"=^\",\r\n    },\r\n    {\r\n      display: \"Contains\",\r\n      name: \"contains\",\r\n      title: \"Contains\",\r\n      value: \"=*\",\r\n    },\r\n  ],\r\n  Collections: [\r\n    \"character\",\r\n    \"character_name\",\r\n    \"characters_achievement\",\r\n    \"characters_currency\",\r\n    \"characters_directive\",\r\n    \"characters_directive_objective\",\r\n    \"characters_directive_tier\",\r\n    \"characters_directive_tree\",\r\n    \"characters_skill\",\r\n    \"characters_stat\",\r\n    \"characters_stat_by_faction\",\r\n    \"characters_stat_history\",\r\n    \"characters_weapon_stat\",\r\n    \"characters_weapon_stat_by_faction\",\r\n    \"world_stat_history\",\r\n    \"characters_item\",\r\n    \"ability\",\r\n    \"ability_type\",\r\n    \"achievement\",\r\n    \"armor_facing\",\r\n    \"armor_info\",\r\n    \"currency\",\r\n    \"directive\",\r\n    \"directive_tier\",\r\n    \"directive_tree\",\r\n    \"directive_tree_category\",\r\n    \"effect\",\r\n    \"effect_type\",\r\n    \"empire_scores\",\r\n    \"experience\",\r\n    \"experience_rank\",\r\n    \"facility_link\",\r\n    \"facility_type\",\r\n    \"faction\",\r\n    \"fire_group\",\r\n    \"fire_group_to_fire_mode\",\r\n    \"fire_mode\",\r\n    \"fire_mode_2\",\r\n    \"fire_mode_to_projectile\",\r\n    \"fire_mode_type\",\r\n    \"image\",\r\n    \"image_set\",\r\n    \"image_set_default\",\r\n    \"item\",\r\n    \"item_attachment\",\r\n    \"item_category\",\r\n    \"item_profile\",\r\n    \"item_to_weapon\",\r\n    \"item_type\",\r\n    \"loadout\",\r\n    \"map_hex\",\r\n    \"map_region\",\r\n    \"marketing_bundle\",\r\n    \"marketing_bundle_item\",\r\n    \"marketing_bundle_with_1_item\",\r\n    \"metagame_event\",\r\n    \"metagame_event_state\",\r\n    \"objective\",\r\n    \"objective_set_to_objective\",\r\n    \"objective_type\",\r\n    \"player_state\",\r\n    \"player_state_group\",\r\n    \"player_state_group_2\",\r\n    \"profile\",\r\n    \"profile_2\",\r\n    \"profile_armor_map\",\r\n    \"profile_resist_map\",\r\n    \"projectile\",\r\n    \"projectile_flight_type\",\r\n    \"region\",\r\n    \"resist_info\",\r\n    \"resist_type\",\r\n    \"resource_type\",\r\n    \"reward\",\r\n    \"reward_group_to_reward\",\r\n    \"reward_set_to_reward_group\",\r\n    \"reward_type\",\r\n    \"single_character_by_id\",\r\n    \"skill\",\r\n    \"skill_category\",\r\n    \"skill_line\",\r\n    \"skill_set\",\r\n    \"target_type\",\r\n    \"title\",\r\n    \"vehicle\",\r\n    \"vehicle_attachment\",\r\n    \"vehicle_faction\",\r\n    \"vehicle_skill_set\",\r\n    \"weapon\",\r\n    \"weapon_ammo_slot\",\r\n    \"weapon_datasheet\",\r\n    \"weapon_to_attachment\",\r\n    \"weapon_to_fire_group\",\r\n    \"zone\",\r\n    \"zone_effect\",\r\n    \"zone_effect_type\",\r\n    \"characters_world\",\r\n    \"world\",\r\n    \"outfit\",\r\n    \"outfit_member\",\r\n    \"outfit_member_extended\",\r\n    \"outfit_rank\",\r\n    \"characters_online_status\",\r\n    \"map\",\r\n    \"characters_friend\",\r\n    \"leaderboard\",\r\n    \"characters_leaderboard\",\r\n    \"characters_event_grouped\",\r\n    \"characters_event\",\r\n    \"event\",\r\n    \"world_event\",\r\n  ],\r\n};\r\n\r\nexport default QueryEnums;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 250,\r\n  },\r\n}));\r\n\r\nexport default function CollectionSelector({ collection, onChange }) {\r\n  const classes = useStyles();\r\n  \r\n  const [collections, setCollections] = useState([]);\r\n  useEffect(() => {\r\n    setCollections(QueryEnums.Collections);\r\n  }, []);\r\n\r\n  function handleChange(value) {\r\n    if (collections.includes(value)) {\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"collection-selector\"\r\n      options={collections}\r\n      value={collection}\r\n      autoSelect\r\n      required\r\n      onChange={(event, newValue) => handleChange(newValue)}\r\n      renderInput={(params) => <TextField {...params} label=\"Collection\" variant=\"outlined\" margin=\"dense\" />}\r\n      className={classes.selectControl}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 10,\r\n    label: 10,\r\n  },\r\n  {\r\n    value: 20,\r\n    label: 100,\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"1k\",\r\n  },\r\n  {\r\n    value: 40,\r\n    label: \"10k\",\r\n  },\r\n];\r\n\r\nconst getScaledValue = (x) => {\r\n  if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 20) {\r\n    return (x - 10) * 10;\r\n  } else if (x <= 30) {\r\n    return (x - 20) * 100;\r\n  } else {\r\n    return (x - 30) * 1000;\r\n  }\r\n}\r\n\r\nconst getUnscaledValue = (x) => {\r\n  if (x <= 10) {\r\n    return x;\r\n  } else if (x <= 100) {\r\n    return (x / 10)  + 10;\r\n  } else if (x <= 1000) {\r\n    return (x / 100) + 20;\r\n  } else {\r\n    return (x / 1000) + 30;\r\n  }\r\n}\r\n\r\nexport default function LimitSlider({ value,  onChange, label }) {\r\n  const classes = useStyles();\r\n  \r\n  const sliderValue = getUnscaledValue(value);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    onChange(getScaledValue(newValue));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <InputLabel id=\"limit-input-slider-label\" htmlFor=\"limit-slider\">Limit</InputLabel>\r\n      <Slider\r\n        className={classes.root}\r\n        id=\"limit-slider\"\r\n        value={typeof sliderValue === 'number' ? sliderValue : 0}\r\n        min={1}\r\n        step={1}\r\n        max={40}\r\n        defaultValue={10}\r\n        getAriaValueText={getScaledValue}\r\n        valueLabelFormat={getScaledValue}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"limit-input-slider-label\"\r\n        marks={marks}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, Select } from \"@material-ui/core\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectControl: {\r\n    minWidth: 120,\r\n    width: 120,\r\n  },\r\n}));\r\n\r\nexport default function LanguageSelector({ language, onChange }) {\r\n  const classes = useStyles();\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLanguages(QueryEnums.Languages);\r\n  }, []);\r\n\r\n  const languageItems = languages.map((lang) => (\r\n    <option key={lang} value={lang} aria-label={lang}>\r\n      {lang}\r\n    </option>\r\n  ));\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"language-select\">Language</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label=\"Language\"\r\n        className={classes.selectControl}\r\n        value={language}\r\n        onChange={handleChange}\r\n        inputProps={{\r\n          name: \"language\",\r\n          id: \"language-select\",\r\n        }}\r\n      >\r\n        <option aria-label=\"All\" value=\"All\">\r\n          All\r\n        </option>\r\n        {languageItems}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  chipList: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function FieldsEntryForm({\r\n  label,\r\n  fields,\r\n  onAddField,\r\n  onRemoveField,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [inputField, setInputField] = useState(\"\");\r\n\r\n  function onSubmitForm(event) {\r\n    event.preventDefault();\r\n\r\n    if (isValidInput()) {\r\n      setInputField(\"\");\r\n      onAddField(inputField.toLowerCase());\r\n    }\r\n  }\r\n\r\n  function handleRemoveField(field) {\r\n    const value = field;\r\n    onRemoveField(value);\r\n  }\r\n\r\n  function isValidInput() {\r\n    if (inputField === \"\") {\r\n      return false;\r\n    } else {\r\n      return !fields.includes(inputField.toLowerCase());\r\n    }\r\n  }\r\n\r\n  const fieldItems = fields.map((field) => {\r\n    return (\r\n      <li key={field}>\r\n        <Chip\r\n          label={field}\r\n          onDelete={() => handleRemoveField(field)}\r\n          className={classes.chip}\r\n          size=\"small\"\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\r\n          <TextField\r\n            id=\"add-show-field-input\"\r\n            label={label}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"show-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setInputField(e.target.value)}\r\n            placeholder=\"example\"\r\n            value={inputField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={!isValidInput()}\r\n                    aria-label=\"Add to shown fields\"\r\n                    className={classes.button}\r\n                  >\r\n                    <AddCircleOutline />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <ul className={classes.chipList}>{fieldItems}</ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QueryEnums from \"../../planetside/QueryEnums\";\r\nimport {\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fieldGridItem: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: 4,\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  operatorGrid: {\r\n    marginTop: 4,\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function ConditionArgumentForm({\r\n  conditionData,\r\n  onDataChange,\r\n  onDelete,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [field, setField] = useState(conditionData.field);\r\n  const [value, setValue] = useState(conditionData.value);\r\n\r\n  const [operators, setOperators] = useState([]);\r\n  useEffect(() => {\r\n    setOperators(QueryEnums.Operators);\r\n  }, []);\r\n\r\n  function isValidInput(value) {\r\n    return value !== \"\";\r\n  }\r\n\r\n  function handleOperatorChange(event) {\r\n    const value = event.target.value;\r\n    const operator = operators.find((o) => o.name === value);\r\n    onDataChange(conditionData.id, \"operator\", operator);\r\n  }\r\n\r\n  function onSubmitField(event) {\r\n    event.preventDefault();\r\n    onDataChange(conditionData.id, \"field\", field);\r\n  }\r\n\r\n  function onSubmitValue(event) {\r\n    event.preventDefault();\r\n    onDataChange(conditionData.id, \"value\", value);\r\n  }\r\n\r\n  function handleDeleteCondition() {\r\n    onDelete(conditionData.id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitField}>\r\n          <TextField\r\n            id=\"condition-field\"\r\n            label=\"Field\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"condition-field\"\r\n            size=\"small\"\r\n            onChange={(e) => setField(e.target.value)}\r\n            value={field}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={\r\n                      !isValidInput(field) || field === conditionData.field\r\n                    }\r\n                    aria-label=\"Update the condition's field\"\r\n                    className={classes.button}\r\n                  >\r\n                    <SaveIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={3} md={3} className={classes.operatorGrid}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel htmlFor=\"operator-select\">Operator</InputLabel>\r\n          <Select\r\n            native\r\n            margin=\"dense\"\r\n            label=\"Operator\"\r\n            value={conditionData.operator.name}\r\n            onChange={handleOperatorChange}\r\n            inputProps={{\r\n              name: \"operator\",\r\n              id: \"operator-select\",\r\n            }}\r\n          >\r\n            <option key=\"equals\" value=\"equals\" title=\"Equals\">{\"=\"}</option>\r\n            <option key=\"notEquals\" value=\"notEquals\" title=\"Not Equals\">{\"≠\"}</option>\r\n            <option key=\"isLessThan\" value=\"isLessThan\" title=\"Is Less Than\">{\"<\"}</option>\r\n            <option key=\"isLessThanOrEquals\" value=\"isLessThanOrEquals\" title=\"Is Less Than Or Equals\">{\"≤\"}</option>\r\n            <option key=\"isGreaterThan\" value=\"isGreaterThan\" title=\"Is Greater Than\">{\">\"}</option>\r\n            <option key=\"isGreaterThanOrEquals\" value=\"isGreaterThanOrEquals\" title=\"Is Greater Than Or Equals\">{\"≥\"}</option>\r\n            <option key=\"startsWith\" value=\"startsWith\">Starts With</option>\r\n            <option key=\"contains\" value=\"contains\">Contains</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={8} md={4}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmitValue}>\r\n          <TextField\r\n            id=\"condition-value\"\r\n            label=\"Value\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"condition-value\"\r\n            size=\"small\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    disabled={\r\n                      !isValidInput(value) || value === conditionData.value\r\n                    }\r\n                    aria-label=\"Update the condition's filter value\"\r\n                    className={classes.button}\r\n                  >\r\n                    <SaveIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={1} md={1}>\r\n        <IconButton\r\n          aria-label=\"Delete this query condition\"\r\n          title=\"Delete this query condition\"\r\n          onClick={handleDeleteCondition}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Paper, Grid, Button } from \"@material-ui/core\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerButtonContainer: {\r\n    textAlign: \"right\",\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  jsonView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textView: {\r\n    maxHeight: \"600px\",\r\n    overflow: \"auto\",\r\n    lineHeight: \"1.1\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  linearProgres: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function QueryResults({ data, isLoading }) {\r\n  const classes = useStyles();\r\n\r\n  function copyDataToClipboard() {\r\n    if (!!data) {\r\n      navigator.clipboard.writeText(JSON.stringify(data, null, 2));\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <h1>Query Results</h1>\r\n        <LinearProgress className={classes.linearProgres} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <h1 className={classes.header1}>Query Results</h1>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.headerButtonContainer}>\r\n          {!!data && (\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={copyDataToClipboard}\r\n              value=\"Copy\"\r\n              title=\"Copy the query results to the clipboard\"\r\n              startIcon={<AssignmentIcon />}\r\n            >\r\n              Copy\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {!!data ? (\r\n        <div className={classes.textView}>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Button, Grid, Link } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  urlBox: {\r\n    marginTop: theme.spacing(1),\r\n    backgroundColor: \"#1F2330\",\r\n    color: \"#fff\",\r\n    fontFamily: \"monospace\",\r\n    padding: theme.spacing(1),\r\n    borderRadius: 4,\r\n    wordWrap: \"anywhere\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  gridItem: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  button: {},\r\n  runButton: {\r\n    width: 120,\r\n  },\r\n  runButtonIcon: {\r\n    marginLeft: -8,\r\n  },\r\n  buttonWide: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nexport default function QueryUrlContainer({ queryUrl, isLoading, onRunQuery }) {\r\n  const classes = useStyles();\r\n\r\n  function copyToClipboardExact() {\r\n    navigator.clipboard.writeText(queryUrl);\r\n  }\r\n\r\n  function copyToClipboardAnonymous() {\r\n    const anonymousUrl = anonymizeQueryUrl(queryUrl);\r\n    navigator.clipboard.writeText(anonymousUrl);\r\n  }\r\n\r\n  function anonymizeQueryUrl(url) {\r\n    const regex = new RegExp(\"(/s:)[A-z0-9]+/\");\r\n    return queryUrl.replace(regex, \"/s:example/\");\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h1 className={classes.header1}>Query URL</h1>\r\n      <div className={classes.urlBox}>{queryUrl}</div>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.container}\r\n      >\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={onRunQuery}\r\n            value=\"Run\"\r\n            className={classes.runButton}\r\n            startIcon={\r\n              isLoading ? null : (\r\n                <PlayArrowIcon className={classes.runButtonIcon} />\r\n              )\r\n            }\r\n            title=\"Run the query\"\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Run\"}\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardExact}\r\n            value=\"Copy\"\r\n            className={classes.button}\r\n            title=\"Copy the query url to the clipboard\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={copyToClipboardAnonymous}\r\n            value=\"Copy Anonymous\"\r\n            className={classes.buttonWide}\r\n            title=\"Copy the query url to the clipboard and replace your service ID with 'example'\"\r\n            startIcon={<AssignmentIcon />}\r\n          >\r\n            Copy Anon.\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.gridItem}>\r\n          <Link to={queryUrl} href={queryUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              value=\"Open Query\"\r\n              className={classes.buttonWide}\r\n              title=\"Open the query URL in a new tab\"\r\n              startIcon={<OpenInNewIcon />}\r\n            >\r\n              Open\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport default function BooleanSelector({\r\n  value,\r\n  label,\r\n  trueLabel = \"Yes\",\r\n  falseLabel = \"No\",\r\n  onChange,\r\n  className = null,\r\n}) {\r\n  return (\r\n    <FormControl variant=\"outlined\" style={{ minWidth: 120 }}>\r\n      <InputLabel htmlFor=\"boolean-select\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        margin=\"dense\"\r\n        label={label}\r\n        className={className}\r\n        value={value}\r\n        onChange={(event) => onChange(event.target.value)}\r\n        inputProps={{\r\n          name: \"boolean-select\",\r\n          id: \"boolean-select\",\r\n        }}\r\n      >\r\n        <option aria-label={trueLabel} value={true}>\r\n          {trueLabel}\r\n        </option>\r\n        <option aria-label={falseLabel} value={false}>\r\n          {falseLabel}\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Paper, TextField, Grid, Button } from '@material-ui/core';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CollectionSelector from './CollectionSelector';\r\nimport FieldsEntryForm from './FieldsEntryForm';\r\nimport ConditionArgumentForm from './ConditionArgumentForm';\r\nimport BinarySelector from '../BinarySelector';\r\nimport BooleanSelector from '../shared/BooleanSelector';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function JoinForm({ joinData, onChange, onDelete, onAddNewJoin }) {\r\n  const classes = useStyles();\r\n  \r\n  const [joinChanges, setJoinChanges] = useState(joinData);\r\n \r\n  // isList(bool)\r\n  // isOuterJoin(bool)\r\n  // showFields(array): See the 'Show certain fields' section above\r\n  // hideFields(array): See the 'Hide certain fields' section above\r\n  // onField(string)\r\n  // toField(string)\r\n  // injectAt(string)\r\n  // where(string): See the 'Defining a condition' section above\r\n  // joinService(string): Returns another join object for sub joining\r\n\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    handleSaveChanges();\r\n  }\r\n\r\n  function handleSaveChanges() {\r\n    onChange(joinChanges);\r\n  }\r\n\r\n  function handleDeleteJoin() {\r\n    onDelete(joinData.id);\r\n  }\r\n\r\n  function handleSimplePropertyChange(propertyName, value) {\r\n    setJoinChanges({ ...joinChanges, ...{ [propertyName]: value } } );\r\n  }\r\n\r\n  function handleCollectionChange(value) {\r\n    if (!!value) {\r\n      handleSimplePropertyChange(\"collection\", value);\r\n    }\r\n  }\r\n\r\n  function handleOnFieldChange(event) {\r\n    const value = event.target.value;\r\n    handleSimplePropertyChange(\"onField\", value);\r\n  }\r\n  \r\n  function handleToFieldChange(event) {\r\n    const value = event.target.value;\r\n    handleSimplePropertyChange(\"toField\", value);\r\n  }\r\n\r\n  function handleAddSubJoin() {\r\n    const newJoin = {\r\n      id: uuidv4(),\r\n      parentId: joinData.id,\r\n      collection: \"\",\r\n      isList: false, //0 if joined data is not a list, 1 if it is a list. Defaults to 0- not a list.\r\n      filterType: \"show\",\r\n      filterFields: [],\r\n      injectAt: \"\",\r\n      terms: [], // aka Conditions\r\n      isOuterJoin: false,\r\n      joins: [],\r\n    };\r\n\r\n    const updatedJoins = [ ...joinData.joins, newJoin ];\r\n    handleSimplePropertyChange(\"joins\", updatedJoins);\r\n  }\r\n\r\n  function handleDeleteSubJoin(id) {\r\n    const updatedJoins = joinData.joins.filter((join) => {\r\n      return join.id !== id;\r\n    });\r\n\r\n    setJoinChanges({ ...joinData, ...{ joins: updatedJoins} });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form onSubmit={handleFormSubmit}>\r\n      <Grid container spacing={1} alignItems=\"center\" className={classes.gridRow}>\r\n        <Grid item xs={12} sm={8}>\r\n          <CollectionSelector collection={joinChanges.collection} onChange={handleCollectionChange} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"inject-at\"\r\n            label=\"Inject At\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"inject-at\"\r\n            onChange={(event) => handleSimplePropertyChange(\"injectAt\", event.target.value)}\r\n            value={joinChanges.injectAt}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Grid container spacing={1} alignItems=\"center\" className={classes.gridRow}>\r\n        \r\n        <Grid item xs={6} sm={3}>\r\n          <BooleanSelector label=\"Join Type\" value={joinChanges.isOuterJoin} trueLabel=\"Outer\" falseLabel=\"Inner\" onChange={(value) => handleSimplePropertyChange(\"isOuterJoin\", value)} />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            id=\"join-on-field\"\r\n            label=\"On Field\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"join-on-field\"\r\n            onChange={handleOnFieldChange}\r\n            value={joinChanges.onField}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={1} style={{ textAlign: \"center\" }}>\r\n          <ForwardIcon style={{ marginTop: 8 }}/>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            id=\"join-to-field\"\r\n            label=\"To Field\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            name=\"join-to-field\"\r\n            onChange={handleToFieldChange}\r\n            value={joinChanges.toField}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* <Grid container spacing={1} alignItems=\"center\" className={classes.gridRow}>\r\n        <Grid item xs={3}>\r\n          <BooleanSelector label=\"Is List\" value={joinChanges.isList} onChange={(value) => handleSimplePropertyChange(\"isList\", value)} />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <BinarySelector label=\"Filter Type\" value={joinChanges.filterType} optionA=\"Show\" optionB=\"Hide\" onChange={(value) => handleSimplePropertyChange(\"filterType\", value)} />\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Grid \r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        className={classes.footer}\r\n      >\r\n        <Grid item container xs={6} alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <Grid item xs={3}>\r\n            <BooleanSelector label=\"Is List\" value={joinChanges.isList} onChange={(value) => handleSimplePropertyChange(\"isList\", value)} />\r\n          </Grid>\r\n          {/* <Grid item>\r\n            <Button \r\n              color=\"primary\"\r\n              startIcon={<AddIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              onClick={handleAddSubJoin}\r\n            >\r\n              Sub Join\r\n            </Button>\r\n          </Grid> */}\r\n\r\n        </Grid>\r\n        \r\n        <Grid item container xs={6} spacing={2} alignItems=\"center\" justifyContent=\"flex-end\">\r\n          <Grid item>\r\n            <Button \r\n              color=\"default\"\r\n              startIcon={<DeleteIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              onClick={handleDeleteJoin}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button \r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              startIcon={<SaveIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              onClick={handleSaveChanges}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n      </form>\r\n\r\n      { joinData.joins.length > 0 &&\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          className={classes.gridRow}\r\n        >\r\n          {joinData.joins.map((join) => {\r\n            return (\r\n              <JoinForm\r\n                key={join.id}\r\n                joinData={join}\r\n                onDataChange={handleSimplePropertyChange}\r\n                onDelete={handleDeleteJoin}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      }\r\n     \r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function JoinsContainer({\r\n  joinsData,\r\n  onJoinDataChange,\r\n  onAddNewJoin,\r\n  onDeleteJoin,\r\n  depth,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function handleAddNewJoin() {\r\n    const newJoin = {\r\n      id: uuidv4(),\r\n      parentId: null,\r\n      collection: \"\",\r\n      isList: false, //0 if joined data is not a list, 1 if it is a list. Defaults to 0- not a list.\r\n      filterType: \"show\",\r\n      filterFields: [],\r\n      injectAt: \"\",\r\n      terms: [], // aka Conditions\r\n      isOuterJoin: false,\r\n      joins: [],\r\n      onField: \"\",\r\n      toField: \"\",\r\n    };\r\n\r\n    onAddNewJoin(newJoin);\r\n  }\r\n  \r\n  function handleDataChange(updatedJoin) {\r\n    onJoinDataChange(updatedJoin);\r\n  }\r\n\r\n  function handleDeleteJoin(id) {\r\n    onDeleteJoin(id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.gridRow}\r\n      >\r\n        {joinsData.map((join) => {\r\n          return (\r\n            <JoinForm\r\n              key={join.id}\r\n              joinData={join}\r\n              onChange={handleDataChange}\r\n              onDelete={handleDeleteJoin}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Button\r\n          color=\"primary\"\r\n          startIcon={<AddIcon fontSize=\"small\" />}\r\n          size=\"small\"\r\n          onClick={handleAddNewJoin}\r\n          className={classes.textButton}\r\n        >\r\n          New Join\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"../styles/App.css\";\r\nimport { pink, amber, orange, blue, cyan } from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ServiceKeyForm from \"./queries/ServiceKeyForm\";\r\nimport CollectionSelector from \"./queries/CollectionSelector\";\r\nimport LimitSlider from \"./queries/LimitSlider\";\r\nimport LanguageSelector from \"./queries/LanguageSelector\";\r\n\r\nimport FieldsEntryForm from \"./queries/FieldsEntryForm\";\r\nimport ConditionArgumentForm from \"./queries/ConditionArgumentForm\";\r\nimport QueryResults from \"./queries/QueryResults\";\r\nimport QueryUrlContainer from \"./queries/QueryUrlContainer\";\r\n\r\nimport JoinsContainer from \"./queries/JoinsContainer\";\r\n\r\nimport JoinForm from \"./queries/JoinForm\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst CensusQuery = require(\"dbgcensus\").Query;\r\nconst dbgcensus = require(\"dbgcensus\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    \"margin-top\": theme.spacing(3),\r\n  },\r\n  gridContainer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridContainerItem: {\r\n    \"padding-bottom\": theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridRow: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  header1: {\r\n    margin: 0,\r\n    fontSize: \"1.4em\",\r\n    // color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n  },\r\n  header2: {\r\n    margin: 0,\r\n    fontSize: \"1.2em\",\r\n    // color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  itemParagraph: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  splitQueryField: {\r\n    width: 250,\r\n  },\r\n  filterSelect: {\r\n    width: 120,\r\n  },\r\n  inlineSelectItem: {\r\n    marginTop: 4,\r\n  },\r\n  textButton: {\r\n    marginTop: -4,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"black\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dbgcensus.SetGlobalNamespace(\"ps2:v2\");\r\n  }, []);\r\n\r\n  const [storeKey, setStoreKey] = useState(\r\n    localStorage.getItem(\"DaybreakGamesKey\")\r\n  );\r\n  useEffect(() => {\r\n    const storedKey = localStorage.getItem(\"DaybreakGamesKey\");\r\n    if (storedKey !== null) {\r\n      dbgcensus.SetGlobalServiceKey(storedKey);\r\n      setStoreKey(storedKey);\r\n    }\r\n  }, [setStoreKey]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [query, setQuery] = useState({\r\n    serviceKey: storeKey || \"example\",\r\n    namespace: \"ps2:v2\",\r\n    collection: \"character\",\r\n    language: \"All\",\r\n    conditions: [],\r\n    limit: 10,\r\n    start: null,\r\n    filterType: \"show\",\r\n    filterFields: [],\r\n    resolves: [],\r\n    joins: [],\r\n    trees: [],\r\n    lang: null,\r\n    sort: [],\r\n  });\r\n\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? \"dark\" : \"light\",\r\n          primary: prefersDarkMode ? { main: \"#E7ADFB\" } : pink, //24E8D8 cyan : pink, //\"#E34F8C\" : pink, //amber : pink,\r\n          secondary: orange, //amber,\r\n          background: {\r\n            paper: \"#27273A\",\r\n            default: \"#0F1320\",\r\n          },\r\n        },\r\n        contrastThreshold: 5,\r\n      }),\r\n    [prefersDarkMode]\r\n  );\r\n\r\n  function onServiceKeyChange(key) {\r\n    setQuery({ ...query, ...{ serviceKey: key } });\r\n    dbgcensus.SetGlobalServiceKey(key);\r\n    localStorage.setItem(\"DaybreakGamesKey\", key);\r\n  }\r\n\r\n  function onDeleteStoredServiceKey() {\r\n    setQuery({ ...query, ...{ serviceKey: \"example\" } });\r\n    dbgcensus.SetGlobalServiceKey(\"example\");\r\n    localStorage.removeItem(\"DaybreakGamesKey\");\r\n  }\r\n\r\n  function onCollectionChange(value) {\r\n    setQuery({ ...query, ...{ collection: value } });\r\n  }\r\n\r\n  function onLimitChange(value) {\r\n    setQuery({ ...query, ...{ limit: value } });\r\n  }\r\n\r\n  function onLanguageChange(value) {\r\n    setQuery({ ...query, ...{ language: value.toLowerCase() } });\r\n  }\r\n\r\n  function onFilterTypeChange(event) {\r\n    const isChecked = event.target.checked;\r\n    const value = isChecked ? \"show\" : \"hide\";\r\n\r\n    setQuery({ ...query, ...{ filterType: value } });\r\n  }\r\n\r\n  function onAddSimpleArrayValue(arrayPropertyName, value) {\r\n    const array = query[arrayPropertyName];\r\n\r\n    if (value !== \"\" && !array.includes(value)) {\r\n      let updatedFields = array;\r\n      updatedFields.push(value);\r\n      setQuery({ ...query, ...{ [arrayPropertyName]: updatedFields } });\r\n    }\r\n  }\r\n\r\n  function onRemoveSimpleArrayValue(arrayPropertyName, value) {\r\n    const array = query[arrayPropertyName];\r\n\r\n    const index = array.indexOf(value);\r\n\r\n    if (index !== -1) {\r\n      let updatedFields = array;\r\n      updatedFields.splice(index, 1);\r\n      setQuery({ ...query, ...{ [arrayPropertyName]: updatedFields } });\r\n    }\r\n  }\r\n\r\n  function onConditionDataChange(id, propertyName, propertyValue) {\r\n    const updatedConditions = query.conditions.map((condition) => {\r\n      if (condition.id === id) {\r\n        condition[propertyName] = propertyValue;\r\n      }\r\n\r\n      return condition;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ conditions: updatedConditions } });\r\n  }\r\n\r\n  function onAddNewCondition() {\r\n    const newCondition = {\r\n      id: uuidv4(),\r\n      field: \"\",\r\n      value: \"\",\r\n      operator: {\r\n        display: \"=\",\r\n        name: \"equals\",\r\n        title: \"Equals\",\r\n        value: \"=\",\r\n      },\r\n    };\r\n\r\n    setQuery({\r\n      ...query,\r\n      ...{ conditions: [...query.conditions, newCondition] },\r\n    });\r\n  }\r\n\r\n  function onDeleteCondition(id) {\r\n    const updatedConditions = query.conditions.filter((condition) => {\r\n      return condition.id !== id;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ conditions: updatedConditions } });\r\n  }\r\n\r\n  function onJoinDataChange(updatedJoin) {\r\n    const updatedJoins = query.joins.map((join) => {\r\n      if (join.id === updatedJoin.id) {\r\n        return updatedJoin;\r\n      }\r\n\r\n      return join;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ joins: updatedJoins } });\r\n  }\r\n\r\n  function onAddNewJoin(newJoin) {\r\n    if (!!newJoin.parentId) {\r\n      return;\r\n    }\r\n\r\n    setQuery({ ...query, ...{ joins: [...query.joins, newJoin] } });\r\n  }\r\n\r\n  function onDeleteJoin(id) {\r\n    const updatedJoins = query.joins.filter((join) => {\r\n      return join.id !== id;\r\n    });\r\n\r\n    setQuery({ ...query, ...{ joins: updatedJoins} });\r\n  }\r\n\r\n\r\n  const [queryUrl, setQueryUrl] = useState(\"\");\r\n  const [dbgQuery, setDbgQuery] = useState(\r\n    new CensusQuery(query.collection, query.namespace, query.serviceKey)\r\n  );\r\n  useEffect(() => {\r\n    function convertToCensusQuery() {\r\n      let censusQuery = new CensusQuery(\r\n        query.collection,\r\n        query.namespace,\r\n        query.serviceKey\r\n      );\r\n\r\n      if (!!query.language && query.language !== \"All\") {\r\n        censusQuery.setLanguage(query.language.toLowerCase());\r\n      }\r\n\r\n      if (query.limit !== null) {\r\n        censusQuery.setLimit(query.limit);\r\n      }\r\n\r\n      if (query.start !== null) {\r\n        censusQuery.setStart(query.start);\r\n      }\r\n\r\n      if (query.filterFields.length > 0) {\r\n        censusQuery[`${query.filterType}Fields`](query.filterFields);\r\n      }\r\n\r\n      if (query.resolves.length > 0) {\r\n        censusQuery.resolve(query.resolves);\r\n      }\r\n\r\n      if (query.sort.length > 0) {\r\n        censusQuery.sort(query.sort);\r\n      }\r\n\r\n      if (query.conditions.length > 0) {\r\n        query.conditions.forEach((condition) => {\r\n          if (\r\n            condition.field !== \"\" &&\r\n            !!condition.operator &&\r\n            condition.value !== \"\"\r\n          ) {\r\n            censusQuery\r\n              .where(condition.field)\r\n              [condition.operator.name](condition.value);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (query.joins.length > 0) {\r\n        query.joins.forEach((join) => {\r\n          if (!!join.collection) {\r\n            let serviceJoin = censusQuery.joinService(join.collection);\r\n            \r\n            serviceJoin.isList(join.isList);\r\n            serviceJoin.isOuterJoin(join.isOuterJoin);\r\n            \r\n            if (!!join.injectAt) {\r\n              serviceJoin.injectAt(join.injectAt);\r\n            }\r\n\r\n            if (!!join.onField) {\r\n              serviceJoin.onField(join.onField);\r\n            }\r\n\r\n            if (!!join.toField) {\r\n              serviceJoin.toField(join.toField);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return censusQuery;\r\n    }\r\n\r\n    try {\r\n      const censusQuery = convertToCensusQuery();\r\n      setDbgQuery(censusQuery);\r\n      let url = censusQuery.toUrl();\r\n      url = url.replace(\"http://\", \"https://\");\r\n      setQueryUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error getting query URL: \", error);\r\n    }\r\n  }, [query]);\r\n\r\n  const [queryResult, setQueryResult] = useState(\"\");\r\n  async function onSubmitQuery() {\r\n    if (!!queryUrl && !loading) {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(queryUrl);\r\n        const responseJson = await response.json();\r\n        setQueryResult(responseJson);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"Error getting data from query: \", error);\r\n        setQueryResult(`Error getting data from query: ${error}`);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container alignItems=\"flex-start\">\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <h1 className={classes.header1}>Set Service ID</h1>\r\n                <p className={classes.itemParagraph}>\r\n                  Sign up for a service ID{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#service-id\"\r\n                    aria-label=\"Service ID sign up page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    here\r\n                  </a>\r\n                  . The 'example' service ID allows up to 10 requests per\r\n                  minute. Saving your service ID will store it to this browser.\r\n                </p>\r\n                <ServiceKeyForm\r\n                  serviceId={query.serviceKey}\r\n                  onServiceKeyChange={onServiceKeyChange}\r\n                  onDeleteStoredKey={onDeleteStoredServiceKey}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <Paper className={classes.paper}>\r\n                <h1 className={classes.header1}>Query Creator</h1>\r\n                <p className={classes.itemParagraph}>\r\n                  Refer to the{\" \"}\r\n                  <a\r\n                    href=\"https://census.daybreakgames.com/#general\"\r\n                    aria-label=\"Official census API documentation page\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    style={{ color: \"#40afee\" }}\r\n                  >\r\n                    official documentation\r\n                  </a>{\" \"}\r\n                  for more information on using the API.\r\n                </p>\r\n\r\n                <h2 className={classes.header2}>Collection</h2>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                  className={classes.gridRow}\r\n                >\r\n                  <Grid item sm={12} md={7} className={classes.splitQueryField}>\r\n                    <CollectionSelector\r\n                      collection={query.collection}\r\n                      onChange={onCollectionChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    sm={12}\r\n                    md={4}\r\n                    className={classes.splitQueryField}\r\n                    style={{ marginTop: 4 }}\r\n                  >\r\n                    <LanguageSelector\r\n                      value={query.language}\r\n                      onChange={onLanguageChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item sm={12} style={{ marginLeft: 4, marginTop: 8 }}>\r\n                    <LimitSlider\r\n                      value={query.limit}\r\n                      onChange={onLimitChange}\r\n                      label=\"Limit\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Search Conditions</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                  className={classes.gridRow}\r\n                >\r\n                  {query.conditions.map((condition) => {\r\n                    return (\r\n                      <ConditionArgumentForm\r\n                        key={condition.id}\r\n                        conditionData={condition}\r\n                        onDataChange={onConditionDataChange}\r\n                        onDelete={onDeleteCondition}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon fontSize=\"small\" />}\r\n                    size=\"small\"\r\n                    onClick={onAddNewCondition}\r\n                    className={classes.textButton}\r\n                  >\r\n                    New Condition\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Filter Displayed Fields</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={0}\r\n                  className={classes.gridRow}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={3}\r\n                    className={classes.inlineSelectItem}\r\n                  >\r\n                    <FormControl variant=\"outlined\">\r\n                      <InputLabel htmlFor=\"filter-type-select\">\r\n                        Filter Type\r\n                      </InputLabel>\r\n                      <Select\r\n                        native\r\n                        margin=\"dense\"\r\n                        label=\"Filter Type\"\r\n                        className={classes.filterSelect}\r\n                        value={query.filterType}\r\n                        onChange={onFilterTypeChange}\r\n                        inputProps={{\r\n                          name: \"filter-type\",\r\n                          id: \"filter-type-select\",\r\n                        }}\r\n                      >\r\n                        <option aria-label=\"Show\" value=\"show\">\r\n                          Show\r\n                        </option>\r\n                        <option aira-label=\"Hide\" value=\"hide\">\r\n                          Hide\r\n                        </option>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <FieldsEntryForm\r\n                    label=\"Add Field\"\r\n                    fields={query.filterFields}\r\n                    onAddField={(value) =>\r\n                      onAddSimpleArrayValue(\"filterFields\", value)\r\n                    }\r\n                    onRemoveField={(value) =>\r\n                      onRemoveSimpleArrayValue(\"filterFields\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Resolves</h2>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={0}\r\n                  className={classes.gridRow}\r\n                >\r\n                  <FieldsEntryForm\r\n                    label=\"Resolves\"\r\n                    fields={query.resolves}\r\n                    onAddField={(value) =>\r\n                      onAddSimpleArrayValue(\"resolves\", value)\r\n                    }\r\n                    onRemoveField={(value) =>\r\n                      onRemoveSimpleArrayValue(\"resolves\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n                <h2 className={classes.header2}>Joins</h2>\r\n                <JoinsContainer \r\n                  joinsData={query.joins}\r\n                  depth={0}\r\n                  onJoinDataChange={onJoinDataChange}\r\n                  onAddNewJoin={onAddNewJoin}\r\n                  onDeleteJoin={onDeleteJoin}\r\n                  />\r\n\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item xs={12} sm={6} className={classes.gridContainer}>\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryUrlContainer\r\n                queryUrl={queryUrl}\r\n                isLoading={loading}\r\n                onRunQuery={onSubmitQuery}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.gridContainerItem}>\r\n              <QueryResults data={queryResult} isLoading={loading} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}